<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OsmSharp</name>
    </assembly>
    <members>
        <member name="T:OsmSharp.Collections.Cache.LRUCache`2">
            <summary>
            Generic LRU cache implementation.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.Cache.LRUCache`2._data">
            <summary>
            Holds the cached data.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Cache.LRUCache`2._id">
            <summary>
            Holds the next id.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Cache.LRUCache`2._lastId">
            <summary>
            Holds the last id.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Cache.LRUCache`2.OnRemove">
            <summary>
            Called when an item is pushed out of the cache.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.#ctor(System.Int32)">
            <summary>
            Initializes this cache.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.Add(`0,`1)">
            <summary>
            Adds a new value for the given key.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.TryGet(`0,`1@)">
            <summary>
            Returns the value for this given key.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.TryPeek(`0,`1@)">
            <summary>
            Returns the value for this given key but does not effect the cache.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.Clear">
            <summary>
            Clears this cache.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.Remove(`0)">
            <summary>
            Removes the value for the given key.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.ResizeCache">
            <summary>
            Resizes the cache.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Cache.LRUCache`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Cache.LRUCache`2.Capacity">
            <summary>
            Capacity.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Cache.LRUCache`2.Count">
            <summary>
            Returns the amount of entries in this cache.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Cache.LRUCache`2.OnRemoveDelegate">
            <summary>
            A delegate to use for when an item is pushed out of the cache.
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:OsmSharp.Collections.Cache.LRUCache`2.CacheEntry">
            <summary>
            An entry in this cache.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Cache.LRUCache`2.CacheEntry.Id">
            <summary>
            The id of the object.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Cache.LRUCache`2.CacheEntry.Value">
            <summary>
            The object being cached.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.HugeDictionary`2">
            <summary>
            A dictionary working around the pre .NET 4.5 memory limitations for one object.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.HugeDictionary`2._MAX_DIC_SIZE">
            <summary>
            Holds the maximum size of one individual dictionary.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.HugeDictionary`2._dictionary">
            <summary>
            Holds the list of internal dictionaries.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.#ctor">
            <summary>
            Creates a new huge dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Add(`0,`1)">
            <summary>
            Adds a new element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.ContainsKey(`0)">
            <summary>
            Returns true if contains the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Remove(`0)">
            <summary>
            Removes an item from this dictionary.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries getting a value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the given item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Clear">
            <summary>
            Clears the entire dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Returns true if the given item is contained in this dictionairy.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the content of an array to this dictionary.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the given item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.GetEnumerator">
            <summary>
            Enumerates all key-value pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumerates all key-value pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.Keys">
            <summary>
            Returns the collection of all the keys.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.Values">
            <summary>
            Returns a collection of all values.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.Item(`0)">
            <summary>
            Gets/sets the value corresponding to the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.Count">
            <summary>
            Returns the total element count in this dictionary.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.CountDictionaries">
            <summary>
            Returns the count of the internal dictionaries.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeDictionary`2.IsReadOnly">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.HugeHashSet`1">
            <summary>
            A hashset working around the pre .NET 4.5 memory limitations for one object.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.HugeHashSet`1._MAX_SET_SIZE">
            <summary>
            Holds the maximum size of one individual set.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.HugeHashSet`1._set">
            <summary>
            Holds the list of internal set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.#ctor">
            <summary>
            Creates a new huge dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.Add(`0)">
            <summary>
            Adds a new item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes all elements in the specified collection.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Keeps only the elements that are in the given collection and in this set.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if all elements in the given collection are contained in this set.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if all elements in this set are also in the given collection. 
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if this collection and the other share at least one element.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if the two sets contain the same elements.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Keeps only items that are in one set or the other but not in both.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds all items in other too.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds the item to this collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.Clear">
            <summary>
            Clears all elements from this set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.Contains(`0)">
            <summary>
            Returns true if this item is in this set.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of this collection to the given array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.Remove(`0)">
            <summary>
            Removes the given item from this set.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.HugeHashSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.HugeHashSet`1.CountSets">
            <summary>
            Returns the count of the internal dictionaries.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeHashSet`1.IsReadOnly">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.HugeHashSet`1.Count">
            <summary>
            Returns the number of elements.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.LimitedStack`1">
            <summary>
            Class implementing a thread-safe limited stack.
            
            When the limit is reached the oldest element will be removed.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.LimitedStack`1._elements">
            <summary>
            Containts the list of elements in this queue.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.LimitedStack`1._limit">
            <summary>
            The limit to the size of this queue.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.#ctor">
            <summary>
            Creates a new limited stack with a limit of 10.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates a new limited stack with a limit of 10.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.#ctor(System.Int32)">
            <summary>
            Creates a new limited stack with a limit of 10.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new limited stack with a limit of 10.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.Clear">
            <summary>
            Clears the elements from this stack.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.Contains(`0)">
            <summary>
            Returns true if this stack contains the item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.Pop">
            <summary>
            Pops the top element from the stack.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.Push(`0)">
            <summary>
            Pushes an item on the stack.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.PushToTop(`0)">
            <summary>
            Moves an item to the top of the stack if it already exists.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.LimitedStack`1.Peek">
            <summary>
            Returns the top element without popping it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.LimitedStack`1.Count">
            <summary>
            Returns the number of elements in this stack.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.LimitedStack`1.Limit">
            <summary>
            The maximum amount of elements in this queue.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.LongIndex.LongIndex.LongIndex">
            <summary>
            An efficient index for OSM object ids.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.LongIndex.LongIndex.LongIndex._rootPositive">
            <summary>
            The root of the positive ids.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.LongIndex.LongIndex.LongIndex._rootNegative">
            <summary>
            The root of the negative ids.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.#ctor">
            <summary>
            Creates a new longindex.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.Add(System.Int64)">
            <summary>
            Adds an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.Remove(System.Int64)">
            <summary>
            Removes an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.Contains(System.Int64)">
            <summary>
            Returns true if the id is there.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.PositiveAdd(System.Int64)">
            <summary>
            Adds an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.PositiveRemove(System.Int64)">
            <summary>
            Removes an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.PositiveContains(System.Int64)">
            <summary>
            Returns true if the id is there.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.NegativeAdd(System.Int64)">
            <summary>
            Adds an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.NegativeRemove(System.Int64)">
            <summary>
            Removes an id.
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.NegativeContains(System.Int64)">
            <summary>
            Returns true if the id is there.
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.LongIndex.LongIndex.LongIndex.Clear">
            <summary>
            Clears this index.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.ObjectTable`1">
            <summary>
            An object table containing and index of object to reduce memory usage by preventing duplicates.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.ObjectTable`1._objects">
            <summary>
            The array containing all strings.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.ObjectTable`1._reverseIndex">
            <summary>
            A dictionary containing the index of each string.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.ObjectTable`1._initCapacity">
            <summary>
            Holds the initial capacity and is also used as an allocation step.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.ObjectTable`1._nextIdx">
            <summary>
            Holds the next idx.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.#ctor(System.Boolean)">
            <summary>
            Creates a new string table.
            </summary>
            <param name="reverseIndex">The reverse index is enable if true.</param>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.#ctor(System.Boolean,System.Int32)">
            <summary>
            Creates a new string table.
            </summary>
            <param name="reverseIndex">The reverse index is enable if true.</param>
            <param name="initCapacity"></param>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.Clear">
            <summary>
            Clears all data from this object table.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.BuildReverseIndex">
            <summary>
            Builds the reverse index.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.DropReverseIndex">
            <summary>
            Drops the reverse index.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.AddObject(`0)">
            <summary>
            Adds a new object without checking if it exists already.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.Add(`0)">
            <summary>
            Returns an index for the given string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.Get(System.UInt32)">
            <summary>
            Returns a string given it's encoded index.
            </summary>
            <param name="valueIdx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.Contains(System.UInt32)">
            <summary>
            Returns true if the object with the given id are in this collection.
            </summary>
            <param name="valueIdx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.ToArray">
            <summary>
            Returns a copy of all data in this object table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.ObjectTable`1.Count">
            <summary>
            Returns the highest id in this object table.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.ObjectTable`1.ObjectTableSerializer">
            <summary>
            Serializes/deserializes an object table.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.ObjectTableSerializer.Serialize(System.IO.Stream,OsmSharp.Collections.ObjectTable{`0})">
            <summary>
            Serializes the given object table to the stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.ObjectTableSerializer.SerializeObject(System.IO.Stream,`0)">
            <summary>
            Serializes one object.
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.ObjectTableSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an object table.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.ObjectTable`1.ObjectTableSerializer.DeserializeObject(System.IO.Stream)">
            <summary>
            Deserializes one object.
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.StringTableDictionary`1">
            <summary>
            A dictionary that uses a string table behind.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.StringTableDictionary`1._string_table">
            <summary>
            Holds the string table.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.StringTableDictionary`1._dictionary">
            <summary>
            The dictionary behind.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.#ctor(OsmSharp.Collections.ObjectTable{`0})">
            <summary>
            Creates a new dictionary.
            </summary>
            <param name="string_table"></param>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Add(`0,`0)">
            <summary>
            Adds key-value pair of strings.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.ContainsKey(`0)">
            <summary>
            Returns true if the given key is present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Remove(`0)">
            <summary>
            Removes a value with the given key from this dictionary.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.TryGetValue(`0,`0@)">
            <summary>
            Tries to get a value from this dictionary.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Add(System.Collections.Generic.KeyValuePair{`0,`0})">
            <summary>
            Adds a key value pair.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Clear">
            <summary>
            Clears all content from this dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Contains(System.Collections.Generic.KeyValuePair{`0,`0})">
            <summary>
            Returns true if the given key value pair is contained in this dictionary.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{`0,`0}[],System.Int32)">
            <summary>
            Copies all objects 
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.Remove(System.Collections.Generic.KeyValuePair{`0,`0})">
            <summary>
            Removes an item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.GetEnumerator">
            <summary>
            Returns a enumerator for this dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.StringTableDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a enumerator for this dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.StringTableDictionary`1.Keys">
            <summary>
            Returns a collection of keys.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.StringTableDictionary`1.Values">
            <summary>
            Returns all values in this dictionary.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.StringTableDictionary`1.Item(`0)">
            <summary>
            Gets/sets a value.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.StringTableDictionary`1.Count">
            <summary>
            Returns the number of objects in this collection.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.StringTableDictionary`1.IsReadOnly">
            <summary>
            This dictionary is not readonly.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.PermutationEnumerable`1">
            <summary>
            An enumerable of all possible permutations of a given sequence of objects.
            </summary>
            <remarks>
            Implements the Shimon Even variant of the Steinhaus–Johnson–Trotter algorithm.
            
            https://en.wikipedia.org/wiki/Steinhaus%E2%80%93Johnson%E2%80%93Trotter_algorithm#Even.27s_speedup
            </remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.PermutationEnumerable`1._sequence">
            <summary>
            Holds the sequence to be enumerated.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerable`1.#ctor(`0[])">
            <summary>
            Creates a new permutation enumerator over a given sequence.
            </summary>
            <param name="sequence"></param>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerable`1.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.PermutationEnumerator`1">
            <summary>
            Implements the Shimon Even variant of the Steinhaus–Johnson–Trotter algorithm.
            
            https://en.wikipedia.org/wiki/Steinhaus%E2%80%93Johnson%E2%80%93Trotter_algorithm#Even.27s_speedup
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.PermutationEnumerator`1._sequence">
            <summary>
            The current sequence to permute.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.PermutationEnumerator`1._status">
            <summary>
            The current status.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.#ctor(`0[])">
            <summary>
            Creates a new permutation operation.
            </summary>
            <param name="sequence"></param>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.Dispose">
            <summary>
            Disposes a enumerator.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.MoveNext">
            <summary>
            Moves to the next permutation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.Swap(System.Int32,System.Int32)">
            <summary>
            Actually executes a swap.
            </summary>
            <param name="idx1"></param>
            <param name="idx2"></param>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.Reset">
            <summary>
            Resets the current enumeration.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.Current">
            <summary>
            Returns the current permutation.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current permutation.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus">
            <summary>
            Represents the status of one element in the permutation.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.#ctor(System.UInt32,System.Nullable{System.Boolean})">
            <summary>
            Creates a new element status.
            </summary>
            <param name="value"></param>
            <param name="direction"></param>
        </member>
        <member name="M:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.ToString">
            <summary>
            Returns a description of this element status.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.Value">
            <summary>
            The current value.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.Direction">
            <summary>
            The direction, true is forward, false is backward.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.IsForward">
            <summary>
            The direction is forward.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.PermutationEnumerator`1.ElementStatus.IsBackward">
            <summary>
            The direction is backward.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.PriorityQueues.BinairyHeap`1">
            <summary>
            Implements a priority queue in the form of a binairy heap.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1">
            <summary>
            Represents general functionality of a priority queue.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1.Push(`0,System.Single)">
            <summary>
            Enqueues a given item.
            </summary>
            <param name="item"></param>
            <param name="priority"></param>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1.PeekWeight">
            <summary>
            Returns the smallest weight in the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1.Peek">
            <summary>
            Returns the object with the smallest weight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1.Pop">
            <summary>
            Returns the object with the smallest weight and removes it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.PriorityQueues.IPriorityQueue`1.Count">
            <summary>
            Returns the number of items in this queue.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.PriorityQueues.BinairyHeap`1._heap">
            <summary>
            The objects per priority.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.PriorityQueues.BinairyHeap`1._priorities">
            <summary>
            Holds the priorities of this heap.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.PriorityQueues.BinairyHeap`1._count">
            <summary>
            The current count of elements.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.PriorityQueues.BinairyHeap`1._latest_index">
            <summary>
            The latest unused index
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.#ctor">
            <summary>
            Creates a new binairy heap.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.#ctor(System.UInt32)">
            <summary>
            Creates a new binairy heap.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.Push(`0,System.Single)">
            <summary>
            Enqueues a given item.
            </summary>
            <param name="item"></param>
            <param name="priority"></param>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.PeekWeight">
            <summary>
            Returns the smallest weight in the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.Peek">
            <summary>
            Returns the object with the smallest weight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.Pop">
            <summary>
            Returns the object with the smallest weight and removes it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.PriorityQueues.BinairyHeap`1.Count">
            <summary>
            Returns the number of items in this queue.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.SortedList`2">
            <summary>
             Represents a collection of associated keys and values
             that are sorted by the keys and are accessible by key
             and by index.
            </summary>
        </member>
        <member name="T:OsmSharp.ICloneable">
            <summary>
            IClonable interface to build for Windows Phone.
            </summary>
        </member>
        <member name="M:OsmSharp.ICloneable.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.SortedSet`1">
            <summary>
            Represents a strongly typed list of objects that will be sorted using the IComparable interface.
            </summary>
            <remarks>Re-implemented for compatibility with Windows Phone/Silverlight.</remarks>
            <typeparam name="T">The type of the elements in the list.</typeparam>
        </member>
        <member name="F:OsmSharp.Collections.SortedSet`1._elements">
            <summary>
            The list containing the elements.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SortedSet`1._comparer">
            <summary>
            Holds the comparer for this set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.#ctor">
            <summary>
            Creates a new sorted set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates a new sorted set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates a new sorted set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates a new sorted set.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.Clear">
            <summary>
            Removes all items from the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:OsmSharp.Collections.SortedSet`1"/> contains
                a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.</param>
            <returns>true if item is found in the <see cref="T:OsmSharp.Collections.SortedSet`1"/>; otherwise,
                false.</returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:OsmSharp.Collections.SortedSet`1"/> to an
                System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements
                copied from <see cref="T:OsmSharp.Collections.SortedSet`1"/>. The System.Array must
                have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.</param>
            <returns>true if item was successfully removed from the <see cref="T:OsmSharp.Collections.SortedSet`1"/>;
                otherwise, false. This method also returns false if item is not found in
                the original <see cref="T:OsmSharp.Collections.SortedSet`1"/>.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OsmSharp.Collections.SortedSet`1.GetEnumerator" -->
        <member name="M:OsmSharp.Collections.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An System.Collections.IEnumerator object that can be used to iterate through
                the collection.</returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all objects to the given array starting at the given location.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes all elements in the specified collection.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Keeps only the elements that are in the given collection and in this set.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if all elements in the given collection are contained in this set.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if all elements in this set are also in the given collection. 
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if this collection and the other share at least one element.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Returns true if the two sets contain the same elements.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Keeps only items that are in one set or the other but not in both.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds all items in other too.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:OsmSharp.Collections.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Explicit implementation of the ICollection<typeparamref name="T"/>.Add method.
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:OsmSharp.Collections.SortedSet`1.Comparer" -->
        <member name="P:OsmSharp.Collections.SortedSet`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:OsmSharp.Collections.SortedSet`1"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:OsmSharp.Collections.SortedSet`1.IsReadOnly" -->
        <member name="P:OsmSharp.Collections.SortedSet`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SortedSet`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the System.Collections.ICollection.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SparseArray`1">
            <summary>
            A sparse array; an array that still handles 'holes' between elements.
            </summary>
            <remarks>Stores it's data in blocks of smaller arrays. Assumes some localitiy in the data, otherwise, use a regular array.</remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1._blockSize">
            <summary>
            Holds the block size.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1._virtualSize">
            <summary>
            Holds the virtual size.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1._arrayBlocks">
            <summary>
            Holds the array blocks.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.#ctor(System.Int32)">
            <summary>
            Creates a new sparse array.
            </summary>
            <param name="size">The initial size.</param>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1._lastAccessedBlock">
            <summary>
            Holds the last accessed block to exploit locality of access.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.Resize(System.Int32)">
            <summary>
            Resizes this array.
            </summary>
            <param name="size">The new size.</param>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SparseArray`1.Item(System.Int64)">
            <summary>
            Gets/sets a value.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SparseArray`1.Length">
            <summary>
            Gets the length of this array.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SparseArray`1.ArrayBlock">
            <summary>
            Represents an array block.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.ArrayBlock.#ctor(System.Int64,System.Int32)">
            <summary>
            Creates a new array block.
            </summary>
            <param name="index"></param>
            <param name="size"></param>
        </member>
        <member name="P:OsmSharp.Collections.SparseArray`1.ArrayBlock.Index">
            <summary>
            The starting index of this block.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SparseArray`1.ArrayBlock.Data">
            <summary>
            The actual data.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator">
            <summary>
            Enumerator class for this sparse array.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator._current">
            <summary>
            Holds the current index.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator._array">
            <summary>
            Holds the array.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator.#ctor(OsmSharp.Collections.SparseArray{`0})">
            <summary>
            Creates a new enumerator.
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator.MoveNext">
            <summary>
            Move to the next object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SparseArray`1.SparseArrayEnumerator.Current">
            <summary>
            Returns the current object.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.ISpatialIndex`1">
            <summary>
            Abstract representation of a spatial index.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.ISpatialIndexReadonly`1">
            <summary>
            Abstract representation of a readonly spatial index.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.ISpatialIndexReadonly`1.Get(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Queries this index and returns all objects with overlapping bounding boxes.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.ISpatialIndexReadonly`1.GetCancel">
            <summary>
            Called when the current request has to be cancelled.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.ISpatialIndex`1.Add(OsmSharp.Math.Primitives.BoxF2D,`0)">
            <summary>
            Adds a new item with the corresponding box.
            </summary>
            <param name="box"></param>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.ISpatialIndex`1.Remove(`0)">
            <summary>
            Removes the given item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.ISpatialIndex`1.Remove(OsmSharp.Math.Primitives.BoxF2D,`0)">
            <summary>
            Removes the given item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1">
            <summary>
            R-tree implementation of a spatial index.
            http://en.wikipedia.org/wiki/R-tree
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1._count">
            <summary>
            Holds the number of objects in this index.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1._root">
            <summary>
            Holds the root node.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1._maxLeafSize">
            <summary>
            Holds the maximum leaf size M.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1._minLeafSize">
            <summary>
            Holds the minimum leaf size m.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.#ctor">
            <summary>
            Creates a new index.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new index.
            </summary>
            <param name="minLeafSize"></param>
            <param name="maxLeafSize"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Add(OsmSharp.Math.Primitives.BoxF2D,`0)">
            <summary>
            Adds a new item with the corresponding box.
            </summary>
            <param name="box"></param>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Remove(`0)">
            <summary>
            Removes the given item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Remove(OsmSharp.Math.Primitives.BoxF2D,`0)">
            <summary>
            Removes the given item when it is contained in the given box.
            </summary>
            <param name="box"></param>
            <param name="item"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Get(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Queries this index and returns all objects with overlapping bounding boxes.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.GetCancel">
            <summary>
            Cancels the current request.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Get(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,OsmSharp.Math.Primitives.BoxF2D,System.Collections.Generic.HashSet{`0})">
            <summary>
            Fills the collection with data.
            </summary>
            <param name="node"></param>
            <param name="box"></param>
            <param name="result"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.GetAll(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,System.Collections.Generic.HashSet{`0})">
            <summary>
            Fills the collection with data.
            </summary>
            <param name="node"></param>
            <param name="result"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Add(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,OsmSharp.Math.Primitives.BoxF2D,`0,System.Int32,System.Int32)">
            <summary>
            Adds the given item to the given box.
            </summary>
            <param name="leaf"></param>
            <param name="box"></param>
            <param name="item"></param>
            <param name="minimumSize"></param>
            <param name="maximumSize"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RemoveSimple(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,OsmSharp.Math.Primitives.BoxF2D,`0)">
            <summary>
            Removes the given item but does not re-balance the tree.
            </summary>
            <param name="node">The node to begin the search for the item.</param>
            <param name="box">The box of the item.</param>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.TightenFor(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node)">
            <summary>
            Tightens the box for the given node in the given parent.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.ChooseLeaf(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Choose the child to best place the given box.
            </summary>
            <param name="box"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.SetParents(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node)">
            <summary>
            Sets all the parent properties of the children of the given node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.SplitNode(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node,System.Int32)">
            <summary>
            Splits the given node in two other nodes.
            </summary>
            <param name="node"></param>
            <param name="minimumSize"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.PickNext(OsmSharp.Math.Primitives.BoxF2D[],System.Collections.Generic.IList{OsmSharp.Math.Primitives.BoxF2D},System.Int32@)">
            <summary>
            Picks the next best box to add to one of the given nodes.
            </summary>
            <param name="nodeBoxes"></param>
            <param name="boxes"></param>
            <param name="nodeBoxIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.SelectSeeds(System.Collections.Generic.List{OsmSharp.Math.Primitives.BoxF2D})">
            <summary>
            Selects the best seed boxes to start splitting a node.
            </summary>
            <param name="boxes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns a enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Count">
            <summary>
            Returns the number of objects in this index.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Node">
            <summary>
            Represents a simple node.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Node.GetBox">
            <summary>
            Returns the bounding box for this node.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Node.Boxes">
            <summary>
            Gets or sets boxes.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Node.Children">
            <summary>
            Gets or sets the children.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.Node.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator">
            <summary>
            Enumerates everything in this index.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator._root">
            <summary>
            Holds the root node.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator._current">
            <summary>
            Holds the current position.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.#ctor(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node)">
            <summary>
            Creates a new enumerator.
            </summary>
            <param name="root"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.Dispose">
            <summary>
            Diposes all resource associtated with this enumerator.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.MoveNext">
            <summary>
            Move next.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.MoveNextFrom(OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.RTreeMemoryIndexEnumerator.NodePosition)">
            <summary>
            Move to the next position from the given position.
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.Reset">
            <summary>
            Reset this enumerator.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.Current">
            <summary>
            Returns the current node.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current object.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.NodePosition.Parent">
            <summary>
            Gets/sets the parent.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.NodePosition.Node">
            <summary>
            Gets/sets the node.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex`1.RTreeMemoryIndexEnumerator.NodePosition.NodeIdx">
            <summary>
            Gets/sets the current node index.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1">
            <summary>
            Abstract representation of a spatial index serializer.
            </summary>
            <remarks>Versioning is implemented in the file format to guarantee backward compatibility.</remarks>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.BuildVersionHeader">
            <summary>
            Builds a uniform version header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.WriteVersionHeader(System.IO.Stream)">
            <summary>
            Writes the version header.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.ReadAndValidateHeader(System.IO.Stream)">
            <summary>
            Reads and validates the header.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.CanDeSerialize(System.IO.Stream)">
            <summary>
            Returns true if this serializer can deserialize the data in the given stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.Serialize(System.IO.Stream,OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0})">
            <summary>
            Serializes the given graph and tags index to the given stream.
            </summary>
            <param name="stream"></param>
            <param name="index"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.DoSerialize(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0})">
            <summary>
            Serializes the given index to the given stream.
            </summary>
            <param name="stream"></param>
            <param name="index"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.Deserialize(System.IO.Stream,System.Boolean)">
            <summary>
            Deserializes the given stream into an index.
            </summary>
            <param name="stream"></param>
            <param name="lazy"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.DoDeserialize(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,System.Boolean)">
            <summary>
            Deserializes the given stream into an index.
            </summary>
            <param name="stream"></param>
            <param name="lazy"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializer`1.VersionString">
            <summary>
            Returns the version number.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream">
            <summary>
            Wraps a stream to prevent some fixed data from being overwritten.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream._offset">
            <summary>
            Holds the offset or the header length.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream._stream">
            <summary>
            Holds the stream.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new spatial index serializer stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current
                stream and advances the position within the stream by the number of bytes
                read.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current
                stream.
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
             Writes a sequence of bytes to the current
                stream and advances the current position within this stream by the number
                of bytes written.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Length">
            <summary>
            Returns the current length of this stream.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream.Position">
            <summary>
            Gets/sets the current position.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1">
            <summary>
            R-tree implementation of a spatial index.
            http://en.wikipedia.org/wiki/R-tree
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1._serializer">
            <summary>
            Holds the serializer.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1._stream">
            <summary>
            Holds the stream.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1.#ctor(OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer{`0},OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream)">
            <summary>
            Creates a new index.
            </summary>
            <param name="serializer"></param>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1.Get(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns the data that has overlapping bounding boxes with the given box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamIndex`1.GetCancel">
            <summary>
            Cancels the current request.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1">
            <summary>
            Serializer for an R-tree spatial index.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1._streamCache">
            <summary>
            Holds the stream cache.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1._cachedLeaves">
            <summary>
            Holds the cached leaves.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1._cachedIndexes">
            <summary>
            Holds the cached indexes.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.#ctor">
            <summary>
            Creates a new serializer.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1._typeModel">
            <summary>
            Holds the type model.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.GetRuntimeTypeModel">
            <summary>
            Returns the runtime type model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.BuildRuntimeTypeModel(ProtoBuf.Meta.RuntimeTypeModel)">
            <summary>
            Builds the type model.
            </summary>
            <param name="typeModel"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.DoSerialize(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0})">
            <summary>
            Serializes the given index to the given stream.
            </summary>
            <param name="stream"></param>
            <param name="index"></param>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.Serialize(ProtoBuf.Meta.RuntimeTypeModel,OsmSharp.Collections.SpatialIndexes.RTreeMemoryIndex{`0}.Node)">
            <summary>
            Serializes all children of the given node.
            </summary>
            <param name="typeModel"></param>
            <param name="nodeBase"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.Serialize(ProtoBuf.Meta.RuntimeTypeModel,System.Collections.Generic.List{`0},System.Collections.Generic.List{OsmSharp.Math.Primitives.BoxF2D})">
            <summary>
            Serializes all data on one leaf.
            </summary>
            <param name="typeModel"></param>
            <param name="data"></param>
            <param name="boxes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.DeSerialize(ProtoBuf.Meta.RuntimeTypeModel,System.Byte[],System.Collections.Generic.List{OsmSharp.Math.Primitives.BoxF2D}@)">
            <summary>
            Deserializes all data on one leaf.
            </summary>
            <param name="typeModel"></param>
            <param name="data"></param>
            <param name="boxes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.DoDeserialize(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,System.Boolean)">
            <summary>
            Deserializes the given stream into an index.
            </summary>
            <param name="stream"></param>
            <param name="lazy"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1._searchCancelled">
            <summary>
            Holds the search cancelled boolean.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.Search(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,OsmSharp.Math.Primitives.BoxF2D,System.Collections.Generic.HashSet{`0})">
            <summary>
            Deserializes the data that is relevant for the given box.
            </summary>
            <param name="stream"></param>
            <param name="box"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.SearchCancel">
            <summary>
            Cancels the current request.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.RTreeStreamSerializer`1.SearchInLeaf(OsmSharp.Collections.SpatialIndexes.Serialization.SpatialIndexSerializerStream,System.Int64,System.Int64)">
            <summary>
            Deserializes the leaf data at the given offset and with the given length and 
            returns the data overlapping the given box.
            </summary>
            <param name="stream"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex">
            <summary>
            Represents a reserializable index of children of an R-tree node.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.#ctor">
            <summary>
            Creates a new children index.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.MinX">
            <summary>
            The min X of each child.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.MinY">
            <summary>
            The min Y of each child.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.MaxX">
            <summary>
            The max X of each child.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.MaxY">
            <summary>
            The max Y of each child.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.Starts">
            <summary>
            The start position of each node in the stream.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.End">
            <summary>
            The end of this node in the stream.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.SpatialIndexes.Serialization.v2.ChildrenIndex.IsLeaf">
            <summary>
            Gets or sets the type flags.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Index.ITagsCollectionIndex">
            <summary>
            Abstracts an index containing tags.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly">
            <summary>
            Abstracts an index containing tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly.Contains(System.UInt32)">
            <summary>
            Returns true if the tags with the given id are in this collection.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly.Get(System.UInt32)">
            <summary>
            Returns the tags that belong to the given id.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly.Max">
            <summary>
            Returns the maxium possible number of tags in this index.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.ITagsCollectionIndex.Add(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds new tags.
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.ITagsCollectionIndex.AddObject(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds new tags but without checking if they exist already.
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.ITagsSource">
            <summary>
            An abstract tags source definition.
            </summary>
        </member>
        <member name="M:OsmSharp.ITagsSource.TryGetValue(System.String,System.String@)">
            <summary>
            Tries to get the value for the given key.
            </summary>
            <returns><c>true</c>, if get value was found, <c>false</c> otherwise.</returns>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer">
            <summary>
            Contains serialize/deserialize functionalities.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer._typeModel">
            <summary>
            Holds the tags index type model.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.CreateTypeModel">
            <summary>
            Creates the type model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.SerializeBlocks(System.IO.Stream,OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly,System.UInt32)">
            <summary>
            Serializes the tags into different indexed blocks of given size.
            </summary>
            <param name="stream"></param>
            <param name="tagsIndex"></param>
            <param name="blockSize"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.DeserializeBlocks(System.IO.Stream)">
            <summary>
            Deserializes a tags stream that was serialized in blocks.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.Serialize(System.IO.Stream,OsmSharp.Collections.Tags.Index.ITagsCollectionIndexReadonly,System.UInt32,System.UInt32)">
            <summary>
            Serializes the tags between the given two indexes.
            </summary>
            <param name="stream"></param>
            <param name="tagsIndex"></param>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.Serialize(System.IO.Stream,OsmSharp.Collections.Tags.Index.ITagsCollectionIndex,System.Collections.Generic.HashSet{System.UInt32})">
            <summary>
            Serializes the given tags in the given index. This serialization preserves the id's of each tag collection.
            </summary>
            <param name="stream"></param>
            <param name="tagsIndex"></param>
            <param name="toSerialize"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.Serialize(System.IO.Stream,OsmSharp.Collections.Tags.Index.ITagsCollectionIndex)">
            <summary>
            Serializes all the tags in the given index. This serialization preserves the id's of each tag collection.
            </summary>
            <param name="stream">The target stream.</param>
            <param name="tagsIndex">The tags index to serialize.</param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.Serialize(System.Int32,System.IO.Stream,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.UInt32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.UInt32,System.UInt32}}}},OsmSharp.Collections.ObjectTable{System.String})">
            <summary>
            Does the actual serialization of the given data structures.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes a tags index from the given stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly">
            <summary>
            Represents a tags index readonly.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly._tags">
            <summary>
            Holds tags list.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly._max">
            <summary>
            Holds the max.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly.#ctor(System.Collections.Generic.Dictionary{System.UInt32,OsmSharp.Collections.Tags.TagsCollection})">
            <summary>
            Creates a new tags index readonly.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly.Get(System.UInt32)">
            <summary>
            Returns the tags collection at the given tags id.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly.Contains(System.UInt32)">
            <summary>
            Returns true if the tags with the given id are in this collection.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsIndexReadonly.Max">
            <summary>
            Returns the maximum amount of tags in this tags index.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly">
            <summary>
            Represents a tags index readonly with a blocked index.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._begin">
            <summary>
            Holds the beginning of the blocks.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._stream">
            <summary>
            Holds the source stream.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._blockSize">
            <summary>
            Holds the block size.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._blockPositions">
            <summary>
            Holds the block positions.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly.#ctor(System.IO.Stream,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Creates a new reaonly index.
            </summary>
            <param name="stream"></param>
            <param name="begin"></param>
            <param name="blockSize"></param>
            <param name="blockPositions"></param>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._currentBlockIdx">
            <summary>
            Holds the current block idx.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._currentBlockMin">
            <summary>
            Holds the current block min.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly._currentBlock">
            <summary>
            Holds the current block.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly.DeserializeBlock(System.Int32)">
            <summary>
            Deserializes a block.
            </summary>
            <param name="blockIdx"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly.Get(System.UInt32)">
            <summary>
            Returns the tags collection.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly.Contains(System.UInt32)">
            <summary>
            Returns true if the tags with the given id are in this collection.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Serializer.Index.TagIndexSerializer.TagsBlockedIndexReadonly.Max">
            <summary>
            Returns the maximum amount of tags in this index.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Serializer.TagsCollectionSerializer">
            <summary>
            Serializer/deserializer for tag collections.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.TagsCollectionSerializer.SerializeWithSize(OsmSharp.Collections.Tags.TagsCollectionBase,System.IO.Stream)">
            <summary>
            Serializes a tags collection to a byte array and addes the size in the first 4 bytes.
            </summary>
            <param name="collection"></param>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Serializer.TagsCollectionSerializer.DeserializeWithSize(System.IO.Stream)">
            <summary>
            Deserializes a tags collection from a byte array and takes the data size from the first 4 bytes.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Collections.Tags.StringTableTagsCollection">
            <summary>
            A dictionary that uses a string table behind.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.TagsCollectionBase">
            <summary>
            Represents a generic tags collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Add(System.String,System.String)">
            <summary>
            Adds a key-value pair to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Add(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a tag.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Add(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds all tags from the given collection.
            </summary>
            <param name="tagsCollection"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.AddOrReplace(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds the tags or replaces the existing value if any.
            </summary>
            <param name="tagsCollection"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.AddOrReplace(System.String,System.String)">
            <summary>
            Adds a tag or replace the existing value if any.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.AddOrReplace(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a tag or replace the existing value if any.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.ContainsKey(System.String)">
            <summary>
            Returns true if the given tag exists.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.ContainsOneOfKeys(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Returns true if one of the given keys exists in this tag collection.
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.TryGetValue(System.String,System.String@)">
            <summary>
            Returns true if the given tag exists.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.ContainsKeyValue(System.String,System.String)">
            <summary>
            Returns true if the given tag exists with the given value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Contains(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Returns true if the given tags exists.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.GetNumericValue(System.String)">
            <summary>
            Returns a parsed numeric value if available.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.RemoveKey(System.String)">
            <summary>
            Removes all tags with the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.RemoveKeyValue(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Removes the given tag.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.RemoveKeyValue(System.String,System.String)">
            <summary>
            Removes all tags with the given key-values.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Clear">
            <summary>
            Clears all tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.RemoveAll(System.Predicate{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Removes all tags that match the given criteria.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.KeepKeysOf(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Creates a new tags collection with only the given keys.
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.GetEnumerator">
            <summary>
            Returns the enumerator for this enumerable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator for this enumerable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#String}}#GetEnumerator">
            <summary>
            Returns the enumerable for KeyValuePairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.Equals(System.Object)">
            <summary>
            Returns true if the objects represent the same information.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollectionBase.GetHashCode">
            <summary>
            Serves as a hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.TagsCollectionBase.Count">
            <summary>
            Returns the number of tags in this collection.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Tags.TagsCollectionBase.Item(System.String)">
            <summary>
            Returns the value associated with the given key.
            </summary>
            <param name="key"></param>
            <returns>Throws a KeyNotFoundException when the key does not exists. Use TryGetValue.</returns>
        </member>
        <member name="T:OsmSharp.Collections.Tags.TagsCollectionBase.KeyValuePairEnumerator">
            <summary>
            A KeyValuePair enumerator wrapper around a IEnumerator tag enumerator.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.StringTableTagsCollection._tagsList">
            <summary>
            Holds the list of encoded tags.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.StringTableTagsCollection._stringTable">
            <summary>
            Holds the stringtable.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.#ctor(OsmSharp.Collections.ObjectTable{System.String})">
            <summary>
            Creates a new dictionary.
            </summary>
            <param name="stringTable"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.Add(System.String,System.String)">
            <summary>
            Adds key-value pair of strings.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.Add(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a tag.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.AddOrReplace(System.String,System.String)">
            <summary>
            Adds a new tag (key-value pair) to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.AddOrReplace(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the given key is present.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Returns true when the given key is found and sets the value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.ContainsKeyValue(System.String,System.String)">
            <summary>
            Returns true when key-value are contained.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the tags.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.Clear">
            <summary>
            Clears all tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.RemoveKey(System.String)">
            <summary>
            Removes all tags with the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.RemoveKeyValue(System.String,System.String)">
            <summary>
            Removes the given key-value pair.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.StringTableTagsCollection.RemoveAll(System.Predicate{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Removes all tags that match the given predicate.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="P:OsmSharp.Collections.Tags.StringTableTagsCollection.Count">
            <summary>
            Returns the number of tags in this collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.StringTableTagsCollection.TagEncoded">
            <summary>
            An encoded tag.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Tags.StringTableTagsCollection.TagEncoded.Key">
            <summary>
            The encoded key.
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Tags.StringTableTagsCollection.TagEncoded.Value">
            <summary>
            The encode value.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Tag">
            <summary>
            Represents a tag (a key-value pair).
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Tag.#ctor(System.String,System.String)">
            <summary>
            Creates a new tag.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Tag.Create(System.String,System.String)">
            <summary>
            Creates a new tag.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Tag.ToString">
            <summary>
            Returns a description of this tag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Tag.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Tag.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Tag.Key">
            <summary>
            The key (or the actual tag name).
            </summary>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Tag.Value">
            <summary>
            The value of the tag.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.TagsCollection">
            <summary>
            Represents a simple tags collection based on a list.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.TagsCollection._tags">
            <summary>
            Holds the tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.#ctor">
            <summary>
            Creates a new tags collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.#ctor(System.Int32)">
            <summary>
            Creates a new tags collection.
            </summary>
            <param name="capacity">The number of tags the collection can initially store.</param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.#ctor(OsmSharp.Collections.Tags.Tag[])">
            <summary>
            Creates a new tags collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Creates a new tags collection initialized with the given existing tags.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new tags collection initialized with the given existing tags.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.Add(System.String,System.String)">
            <summary>
            Adds a new tag (key-value pair) to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.Add(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.AddOrReplace(System.String,System.String)">
            <summary>
            Adds a new tag (key-value pair) to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.AddOrReplace(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the given key is found in this tags collection.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Returns true if the given key exists and sets the value parameter.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.ContainsKeyValue(System.String,System.String)">
            <summary>
            Returns true if the given key-value pair is found in this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.Clear">
            <summary>
            Clears all tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.GetEnumerator">
            <summary>
            Returns the enumerator for this tags collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.RemoveKey(System.String)">
            <summary>
            Removes all tags with the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.RemoveKeyValue(System.String,System.String)">
            <summary>
            Removes all tags with given key and value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.ToString">
            <summary>
            Returns a string that represents this tags collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsCollection.RemoveAll(System.Predicate{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Removes all tags that matches the given predicate.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="P:OsmSharp.Collections.Tags.TagsCollection.Count">
            <summary>
            Returns the number of tags in this collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.TagsTableCollection">
            <summary>
            Represents a tags collection based on a backing tags table.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.TagsTableCollection._tags">
            <summary>
            Holds the tags.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.TagsTableCollection._tagsTable">
            <summary>
            Holds all the tags objects.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.#ctor(OsmSharp.Collections.ObjectTable{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Creates a new tags collection.
            </summary>
            <param name="tagsTable"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.#ctor(OsmSharp.Collections.ObjectTable{OsmSharp.Collections.Tags.Tag},OsmSharp.Collections.Tags.Tag[])">
            <summary>
            Creates a new tags collection initialized with the given existing tags.
            </summary>
            <param name="tagsTable"></param>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.#ctor(OsmSharp.Collections.ObjectTable{OsmSharp.Collections.Tags.Tag},System.Collections.Generic.IEnumerable{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Creates a new tags collection initialized with the given existing tags.
            </summary>
            <param name="tagsTable"></param>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.Add(System.String,System.String)">
            <summary>
            Adds a new tag (key-value pair) to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.Add(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.AddOrReplace(System.String,System.String)">
            <summary>
            Adds a new tag (key-value pair) to this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.AddOrReplace(OsmSharp.Collections.Tags.Tag)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the given key is found in this tags collection.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Returns true if the given key exists and sets the value parameter.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.ContainsKeyValue(System.String,System.String)">
            <summary>
            Returns true if the given key-value pair is found in this tags collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.Clear">
            <summary>
            Clears all tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.GetEnumerator">
            <summary>
            Returns the enumerator for this tags collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.RemoveKey(System.String)">
            <summary>
            Removes all tags with the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.RemoveKeyValue(System.String,System.String)">
            <summary>
            Removes all tags with given key and value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.ToString">
            <summary>
            Returns a string that represents this tags collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.TagsTableCollection.RemoveAll(System.Predicate{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Removes all tags that match the given predicate.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="P:OsmSharp.Collections.Tags.TagsTableCollection.Count">
            <summary>
            Returns the number of tags in this collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex">
            <summary>
            An osm tags index.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex._tagsCollectionTable">
            <summary>
            Holds all the tags objects.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex._tagsTable">
            <summary>
            Holds all the tags objects.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.#ctor">
            <summary>
            Creates a new tags index with a given strings table.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.#ctor(System.Boolean)">
            <summary>
            Creates a new tags index with a given strings table.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.#ctor(OsmSharp.Collections.ObjectTable{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Creates a new tags index with a given strings table.
            </summary>
            <param name="tagsTable"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.DropReverseIndexex">
            <summary>
            Drops reverse indexes only need when adding tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.BuildReverseIndex">
            <summary>
            Builds the reverse indexes (again) for adding tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.Get(System.UInt32)">
            <summary>
            Returns the tags with the given id.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.Contains(System.UInt32)">
            <summary>
            Returns true if the tags with the given id are in this collection.
            </summary>
            <param name="tagsId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.Add(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds tags to this index.
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.AddObject(OsmSharp.Collections.Tags.TagsCollectionBase)">
            <summary>
            Adds tags to this index without check if they exists already.
            </summary>
            <param name="tags"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.Max">
            <summary>
            Returns maximum possible number of tags in this index.
            </summary>
        </member>
        <member name="T:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags">
            <summary>
            Holds tags.
            </summary>
        </member>
        <member name="F:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags._tags">
            <summary>
            Holds all the tags.
            </summary>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags.#ctor(System.UInt32[])">
            <summary>
            Creates a new tags object.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags.Equals(System.Object)">
            <summary>
            Returns true if the objects represent the same information.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags.GetHashCode">
            <summary>
            Serves as a hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Collections.Tags.Index.TagsTableCollectionIndex.OsmTags.Tags">
            <summary>
            Returns the tags array.
            </summary>
        </member>
        <member name="T:OsmSharp.Constants">
            <summary>
            Contains generic constants.
            </summary>
        </member>
        <member name="F:OsmSharp.Constants.TwoPi">
            <summary>
            2.0 * Math.PI
            </summary>
        </member>
        <member name="F:OsmSharp.Constants.SecondsPerHour">
            <summary>
            The number of seconds per hour.
            </summary>
        </member>
        <member name="F:OsmSharp.Constants.RegexDecimal">
            <summary>
            Regex to parse decimals.
            </summary>
        </member>
        <member name="F:OsmSharp.Constants.RegexDecimalWhiteSpace">
            <summary>
            Regex for whitespaces.
            </summary>
        </member>
        <member name="F:OsmSharp.Constants.RadiusOfEarth">
            <summary>
            The radius of earth in meters.
            </summary>
        </member>
        <member name="T:OsmSharp.Data.SQLite.SQLiteConnectionBase">
            <summary>
            A wrapper-class for all platform-specific SQLite connections.
            </summary>
        </member>
        <member name="M:OsmSharp.Data.SQLite.SQLiteConnectionBase.Query``1(System.String,System.Object[])">
            <summary>
            Creates an SQLLite command.
            </summary>
        </member>
        <member name="M:OsmSharp.Data.SQLite.SQLiteConnectionBase.Dispose">
            <summary>
            Disposes of all resources associated with this connection.
            </summary>
        </member>
        <member name="M:OsmSharp.Data.SQLite.SQLiteConnectionBase.Close">
            <summary>
            Closes this SQLite command.
            </summary>
        </member>
        <member name="T:OsmSharp.ASCIIEncoding">
            <summary>
            Silverlight doesn't have an ASCII encoder, so here is one!
            
            http://stackoverflow.com/questions/4022281/asciiencoding-in-windows-phone-7
            </summary>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetString(System.Byte[])">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetCharCount(System.Byte[])">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars"></param>
            <param name="charIndex"></param>
            <param name="charCount"></param>
            <param name="bytes"></param>
            <param name="byteIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding all the bytes in the specified byte array.
            </summary>
            <param name="bytes"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Cecodes all the bytes in the specified byte array into a set of characters.
            </summary>
            <param name="bytes"></param>
            <param name="byteIndex"></param>
            <param name="byteCount"></param>
            <param name="chars"></param>
            <param name="charIndex"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.ASCIIEncoding.ASCII">
            <summary>
            Returns an instance of the ASCIIEncoding class.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Attributes.GeometryAttribute">
            <summary>
            Represents an attribute related to a geometry.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttribute.ToString">
            <summary>
            Returns a System.String that represents this GeometryAttribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Attributes.GeometryAttribute.Key">
            <summary>
            Gets/sets the key property describing the data in this attribute.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Attributes.GeometryAttribute.Value">
            <summary>
            Gets/sets the value of this attribute.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Attributes.GeometryAttributeCollection">
            <summary>
            Represents a collection of geometry attributes.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Add(System.String,System.Object)">
            <summary>
            Adds a key-value pair to this attributes collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Add(OsmSharp.Geo.Attributes.GeometryAttribute)">
            <summary>
            Adds an attribute.
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Add(OsmSharp.Geo.Attributes.GeometryAttributeCollection)">
            <summary>
            Adds all attributes from the given collection.
            </summary>
            <param name="attributeCollection"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.AddOrReplace(OsmSharp.Geo.Attributes.GeometryAttributeCollection)">
            <summary>
            Adds the attributes or replaces the existing value if any.
            </summary>
            <param name="attributeCollection"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.AddOrReplace(System.String,System.Object)">
            <summary>
            Adds an attribute or replace the existing value if any.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.AddOrReplace(OsmSharp.Geo.Attributes.GeometryAttribute)">
            <summary>
            Adds an attribute or replace the existing value if any.
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the given tag exists.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns true if the given tag exists.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.ContainsKeyValue(System.String,System.Object)">
            <summary>
            Returns true if the given tags exists with the given value.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Clear">
            <summary>
            Clears all attributes.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.GetEnumerator">
            <summary>
            Returns the enumerator for this enumerable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.GeometryAttributeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator for this enumerable.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Count">
            <summary>
            Returns the number of attributes in this collection.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Attributes.GeometryAttributeCollection.Item(System.String)">
            <summary>
            Returns the value associated with the given key.
            </summary>
            <param name="key"></param>
            <returns>Throws a KeyNotFoundException when the key does not exists. Use TryGetValue.</returns>
        </member>
        <member name="T:OsmSharp.Geo.Attributes.IGeometryAttributesIndex">
            <summary>
            Represents an index for storing attributes.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.IGeometryAttributesIndex.Get(System.UInt32)">
            <summary>
            Returns the attributes that belong to the given id.
            </summary>
            <param name="attributesId"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.IGeometryAttributesIndex.Add(OsmSharp.Geo.Attributes.GeometryAttributeCollection)">
            <summary>
            Adds new attributes.
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection">
            <summary>
            Represents a simple tags collection based on a list.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection._attributes">
            <summary>
            Holds the attributes.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.#ctor">
            <summary>
            Creates a new attributes collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Attributes.GeometryAttribute})">
            <summary>
            Creates a new attributes collection initialized with the given existing attributes.
            </summary>
            <param name="attributes"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Collections.Tags.Tag})">
            <summary>
            Creates a new attributes collection initialized with the given existing key-value tags.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.Add(System.String,System.Object)">
            <summary>
            Adds a new attribute (key-value pair) to this attributes collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.Add(OsmSharp.Geo.Attributes.GeometryAttribute)">
            <summary>
            Adds a new attribute to this collection.
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.AddOrReplace(System.String,System.Object)">
            <summary>
            Adds a new attribute (key-value pair) to this attributes collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.AddOrReplace(OsmSharp.Geo.Attributes.GeometryAttribute)">
            <summary>
            Adds a new tag to this collection.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.ContainsKey(System.String)">
            <summary>
            Returns true if the given key is found.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns true if the given key exists and gets the value parameter.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.ContainsKeyValue(System.String,System.Object)">
            <summary>
            Returns true if the given key-value pair is found in this attributes collection.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.Clear">
            <summary>
            Clears all attributes.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.GetEnumerator">
            <summary>
            Returns the enumerator for this attributes collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Attributes.SimpleGeometryAttributeCollection.Count">
            <summary>
            Returns the number of attributes in this collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Extensions">
            <summary>
            Contains generic extensions.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Extensions.DistanceEstimate(OsmSharp.Math.Geo.GeoCoordinate[],System.Int32,System.Int32)">
            <summary>
            Estimates distance.
            </summary>
            <param name="coordinates"></param>
            <param name="start"></param>
            <param name="lenght"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Geo.GeoCoordinate">
            <summary>
            Represents a standard geo coordinate.
            
            0: longitude.
            1: latitude.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.PointF2D">
            <summary>
            Represents a point in 2 dimensions.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.PrimitiveF2D">
            <summary>
            An abstract class serving as the base-type for all primitives.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PrimitiveF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance of this primitive to the given point.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.Primitives.PointF2D._values">
            <summary>
            The values that represents the point.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.#ctor(System.Double[])">
            <summary>
            Creates a new point.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.ToArray">
            <summary>
            Converts to point to an array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance between this point and the given point.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.Distance(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance between two points.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.CreateBox(System.Double)">
            <summary>
            Creates a 
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.op_Subtraction(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Substracts two points and returns the resulting vector.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.op_Addition(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Adds a point and a vector and returns the resulting point.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.op_Subtraction(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Adds a point and a vector and returns the resulting point.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.op_Equality(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if both points represent the same point.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.op_Inequality(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns false if both points represent the same point.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.ToString">
            <summary>
            Returns a description of this point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.Equals(System.Object)">
            <summary>
            Returns true if both objects are equal in value.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PointF2D.GetHashCode">
            <summary>
            Returns a unique hashcode for this point.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PointF2D.Item(System.Int32)">
            <summary>
            Gets/Sets the value at index idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.#ctor(System.Double[])">
            <summary>
            Creates a geo coordinate.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.#ctor(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Creates a geo coordinate.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.#ctor(System.Double,System.Double)">
            <summary>
            Creates a geo coordinate.
            </summary>
            <param name="longitude"></param>
            <param name="latitude"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.Distance(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Calculates the distance between this point and the given point.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.DistanceEstimate(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Estimates the distance between this point and the given point in meters.
            Accuracy decreases with distance.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.DistanceReal(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Calculates the real distance in meters between this point and the given point.
            </summary>
            <param name="point"></param>
            <returns></returns>
            <remarks>http://en.wikipedia.org/wiki/Haversine_formula</remarks>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.OffsetWithDistances(OsmSharp.Units.Distance.Meter)">
            <summary>
            Offset this coordinate with the given distance in meter in both lat-lon directions.
            The difference in distance will be sqrt(2) * meter.
            </summary>
            <param name="meter"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.OffsetWithDirection(OsmSharp.Units.Distance.Meter,OsmSharp.Math.Geo.Meta.DirectionEnum)">
            <summary>
            Offset this coordinate with the given distance in meter along the provided direction.
            </summary>
            <param name="distance"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.OffsetRandom(OsmSharp.Units.Distance.Meter)">
            <summary>
            Offsets this coordinate in a random direction.
            </summary>
            <param name="meter"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.OffsetRandom(OsmSharp.Math.Random.IRandomGenerator,OsmSharp.Units.Distance.Meter)">
            <summary>
            Offsets this coordinate in a random direction.
            </summary>
            <param name="randomGenerator"></param>
            <param name="meter"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.op_Addition(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Adds two geo coordinates.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.op_Division(OsmSharp.Math.Geo.GeoCoordinate,System.Double)">
            <summary>
            Divides the given geo coordinate with the given value.
            </summary>
            <param name="a"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.ToString">
            <summary>
            Returns a description of this coordinate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinate.Equals(System.Object)">
            <summary>
            Returns true if both objects are equal in value.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinate.Longitude">
            <summary>
            Gets/Sets the longitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinate.Latitude">
            <summary>
            Gets/Sets the latitude.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.GeoCoordinateBox">
            <summary>
            Represents a geo coordinate bounding box.
            
            0: longitude.
            1: latitude.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.BoxF2D">
            <summary>
            Represents a retangular box with edges always parallel to x- and y-axis.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Enumerators.Points.IPointList">
            <summary>
            Interface representing an enumerable with a list of points.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Points.IPointList.Count">
            <summary>
            Returns the count of points.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Points.IPointList.Item(System.Int32)">
            <summary>
            Returns the point at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Enumerators.Lines.ILineList">
            <summary>
            Interface representing a list of lines.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Lines.ILineList.Count">
            <summary>
            Returns the count of lines.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Lines.ILineList.Item(System.Int32)">
            <summary>
            Returns the line at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.Primitives.BoxF2D._max">
            <summary>
            Holds the maximum values of the box.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.BoxF2D._min">
            <summary>
            Holds the minimum values of the box.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new box.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Creates a new box.
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Creates a new box.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Creates a new box around the given points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(System.Collections.Generic.IList{OsmSharp.Math.Primitives.PointF2D})">
            <summary>
            Creates a new box around the given points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.#ctor(System.Double[],System.Double[])">
            <summary>
            Creates a new box around the given points.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Mutate(OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Mutates this generic box to another generic box.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance from the given point to this rectangle.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Contains(System.Double,System.Double)">
            <summary>
            Returns true if the given coordinates are inside this box.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Contains(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if the point lies inside this box.
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Contains(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns true if the given box is completely inside this box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Contains(System.Collections.Generic.List{OsmSharp.Math.Primitives.PointF2D})">
            <summary>
            Returns the list of points from the given list that are inside the given box.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Contains(OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Returns the list of points from the given list that are inside the given box.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.ContainsAny(OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Returns true if any of the given points lie inside this bounding box.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Overlaps(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns true if the boxes overlap.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.IntersectsPotentially(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if the two points could potentially intersect this box.
            
            This is a rudemantairy quick test to rule out intersection. 
                - If false is returned there can be no intersection.
                - If true is returned there might be intersection but it is not certain.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.IntersectsPotentially(OsmSharp.Math.Primitives.LineF2D)">
            <summary>
            Returns true if the two points could potentially intersect this bounding box.
            
            This is a rudemantairy quick test to rule out intersection. 
                - If false is returned there can be no intersection.
                - If true is returned there might be intersection but it is not certain.
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Intersects(OsmSharp.Math.Primitives.LineF2D)">
            <summary>
            Returns true if the line intersects with this bounding box.
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Intersects(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if the line intersects with this bounding box.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Intersection(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Calculates the intersection between this box and the given box.
            </summary>
            <param name="box">Box.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.Union(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Calculates the union of this box and the given box or the box that encompasses both original boxes.
            </summary>
            <param name="box">Box.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OsmSharp.Math.Primitives.BoxF2D.ScaleWith(System.Double)" -->
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.ResizeWith(System.Double)">
            <summary>
            Resizes this bounding box with the given delta.
            </summary>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.ToString">
            <summary>
            Returns a description of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.GetEnumerator">
            <summary>
            Returns an enumerator for PointF2D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for PointF2D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.BoxF2D.System#Collections#Generic#IEnumerable{OsmSharp#Math#Primitives#LineF2D}#GetEnumerator">
            <summary>
            Returns an enumerator for LineF2D.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Delta">
            <summary>
            Returns the delta (difference) between min and max for every dimension.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Max">
            <summary>
            Returns the max of this box for each dimension.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Min">
            <summary>
            Returns the min of this box for each dimension.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Corners">
            <summary>
            Returns all the corners of this box.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Middle">
            <summary>
            Returns the middle of this box.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.Surface">
            <summary>
            Returns the size of the surface of this rectangle.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.OsmSharp#Math#Primitives#Enumerators#Lines#ILineList#Count">
            <summary>
            Returns the number of lines.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.OsmSharp#Math#Primitives#Enumerators#Lines#ILineList#Item(System.Int32)">
            <summary>
            Returns the line at the given index.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.LineEnumerator">
            <summary>
            Returns the line enumerator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.OsmSharp#Math#Primitives#Enumerators#Points#IPointList#Count">
            <summary>
            Returns the number of points.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.OsmSharp#Math#Primitives#Enumerators#Points#IPointList#Item(System.Int32)">
            <summary>
            Returns the point at the given index.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.BoxF2D.PointEnumerator">
            <summary>
            Returns the point enumerator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.#ctor(System.Collections.Generic.IList{OsmSharp.Math.Geo.GeoCoordinate})">
            <summary>
            Creates a new box.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.#ctor(OsmSharp.Math.Geo.GeoCoordinate[])">
            <summary>
            Creates a new box.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.#ctor(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Creates a new box.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.ExpandWith(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Expands this geo coordinate box with the given coordinate.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.GenerateRandomIn">
            <summary>
            Generates a random point within this box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.GenerateRandomIn(OsmSharp.Math.Random.IRandomGenerator)">
            <summary>
            Generates a random point within this box.
            </summary>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.GenerateRandomIn(System.Random)">
            <summary>
            Generates a random point within this box.
            </summary>
            <param name="rand"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.Scale(System.Double)">
            <summary>
            Returns a scaled version of this bounding box.
            </summary>
            <param name="factor"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.op_Addition(OsmSharp.Math.Geo.GeoCoordinateBox,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Adds two bounding boxes together yielding as result the smallest box that surrounds both.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.op_Addition(OsmSharp.Math.Geo.GeoCoordinateBox,OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Adds two bounding boxes together yielding as result the smallest box that surrounds both.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.op_Subtraction(OsmSharp.Math.Geo.GeoCoordinateBox,OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Subtracts two bounding boxes; returns the box that represents the overlap between the two.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.Intersection(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Calculates the intersection between this box and the given box.
            </summary>
            <param name="box">Box.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.Union(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Calculates the union of this box and the given box or the box that encompasses both original boxes.
            </summary>
            <param name="box">Box.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateBox.Resize(System.Double)">
            <summary>
            Resizes this bounding box with the given delta.
            </summary>
            <param name="delta"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.MaxLon">
            <summary>
            Returns the maximum longitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.MaxLat">
            <summary>
            Returns the maximum latitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.MinLon">
            <summary>
            Returns the minimum longitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.MinLat">
            <summary>
            Returns the minimum latitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.TopLeft">
            <summary>
            Returns the topleft coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.TopRight">
            <summary>
            Returns the topleft coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.BottomLeft">
            <summary>
            Returns the topleft coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.BottomRight">
            <summary>
            Returns the topleft coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.DeltaLon">
            <summary>
            Returns the width on this box.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.DeltaLat">
            <summary>
            Returns the height on this box.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.Center">
            <summary>
            Returns the center of this box.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateBox.Corners">
            <summary>
            Returns all the corners of this box.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.GeoCoordinateLine">
            <summary>
            Class representing a geo coordinate line.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.LineF2D">
            <summary>
            Represents a line.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LineF2D._a">
            <summary>
            The first point for this line.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LineF2D._b">
            <summary>
            The second point for this line.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LineF2D._dir">
            <summary>
            The direction of this line from point1 -> point2.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LineF2D._is_segment1">
            <summary>
            True if this represents only a segment.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LineF2D._is_segment2">
            <summary>
            True if this represents only a segment.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Creates a new line.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D,System.Boolean)">
            <summary>
            Creates a new line.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="is_segment"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D,System.Boolean,System.Boolean)">
            <summary>
            Creates a new line.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="is_segment1"></param>
            <param name="is_segment2"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new line.
            </summary>
            <param name="xa"></param>
            <param name="ya"></param>
            <param name="xb"></param>
            <param name="yb"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new line.
            </summary>
            <param name="xa"></param>
            <param name="ya"></param>
            <param name="xb"></param>
            <param name="yb"></param>
            <param name="is_segment"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new line.
            </summary>
            <param name="xa"></param>
            <param name="ya"></param>
            <param name="xb"></param>
            <param name="yb"></param>
            <param name="is_segment1"></param>
            <param name="is_segment2"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.PositionOfPoint(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the position of this point relative to this line.
            
            Left/Right is viewed from point1 in the direction of point2.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns the distance from the point to this line.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.Intersects(OsmSharp.Math.Primitives.LineF2D)">
            <summary>
            Return true if the given line intersects with this line.
            </summary>
            <param name="line">Line.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.Intersects(OsmSharp.Math.Primitives.LineF2D,System.Boolean)">
            <summary>
            Return true if the given line intersects with this line.
            </summary>
            <param name="line">Line.</param>
            <param name="doSegment"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.Intersection(OsmSharp.Math.Primitives.LineF2D)">
            <summary>
            Calculates and returns the line intersection.
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.Intersection(OsmSharp.Math.Primitives.LineF2D,System.Boolean)">
            <summary>
            Calculates and returns the line intersection.
            </summary>
            <param name="line"></param>
            <param name="doSegment"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.ProjectOn(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Projects a point onto the given line.
            
            (= intersection of the line with an angle 90° different from this line through the given point)
            </summary>
            <param name="point"></param>
            <returns>The projection point if it occurs inside the segmented line.</returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.LineF2D.ToString">
            <summary>
            Returns a description of this line.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.Point1">
            <summary>
            Returns the first point of this line.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.Point2">
            <summary>
            Returns the second point of this line.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.Direction">
            <summary>
            Returns the direction of this line (point1 -> point2).
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.Length">
            <summary>
            Returns the length of this line (as if it were a segment).
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.IsSegment">
            <summary>
            Returns true if this line is just a segment.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.IsSegment1">
            <summary>
            Returns true if the first point is the end of the line.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.IsSegment2">
            <summary>
            Returns true if the second point is the end of the line.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.A">
            <summary>
            Returns parameter A of an equation describing this line as Ax + By = C
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.B">
            <summary>
            Returns parameter B of an equation describing this line as Ax + By = C
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.LineF2D.C">
            <summary>
            Returns parameter C of an equation describing this line as Ax + By = C
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateLine.#ctor(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Creates a geo coordinate line.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateLine.#ctor(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate,System.Boolean,System.Boolean)">
            <summary>
            Creates a geo coordinate line.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="is_segment1"></param>
            <param name="is_segment2"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateLine.DistanceReal(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Projects the given point onto this line and calculates the real distance.
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateLine.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.GeoCoordinateLine.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.GeoCoordinateLine.LengthReal">
            <summary>
            Returns the length of this line in Meters.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.Geometry">
            <summary>
            Base class for all geometries.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Geometry.IsInside(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns true if this geometry is inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Geometry.Box">
            <summary>
            Returns the smallest possible bounding box containing this geometry.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Geometry.Attributes">
            <summary>
            Gets/sets the attribute collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.GeometryCollection">
            <summary>
            Represents a collection of geometry-objects.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Geometries.GeometryCollection._geometries">
            <summary>
            Holds the list of geometries.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.#ctor">
            <summary>
            Creates a new geometry collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.Geometry})">
            <summary>
            Creates a new geometry collection.
            </summary>
            <param name="geometries"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.Add(OsmSharp.Geo.Geometries.Geometry)">
            <summary>
            Adds a new geometry.
            </summary>
            <param name="geometry"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.AddRange(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.Geometry})">
            <summary>
            Adds all geometries in the given enumerable.
            </summary>
            <param name="geometries"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.IsInside(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns true if at least one of the geometries in this collection exists inside the given boundingbox.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.Clear">
            <summary>
            Removes all items from this collection.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the geometry collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.GeometryCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the geometry collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.GeometryCollection.Count">
            <summary>
            Returns the object count.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.GeometryCollection.Item(System.Int32)">
            <summary>
            Returns the geometry at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.GeometryCollection.Box">
            <summary>
            Returns the smallest bounding box containing all geometries in this collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.LineairRing">
            <summary>
            Represents a lineair ring, a polygon without holes.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.LineString">
            <summary>
            Represents a linestring, a simple sequence of line-segments.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineString.#ctor">
            <summary>
            Creates a new linestring.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineString.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Math.Geo.GeoCoordinate})">
            <summary>
            Creates a new linestring.
            </summary>
            <param name="coordinates">The coordinates in this linestring.</param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineString.#ctor(OsmSharp.Math.Geo.GeoCoordinate[])">
            <summary>
            Creates a new linestring.
            </summary>
            <param name="coordinates">The coordinates in this linestring.</param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineString.IsInside(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns true if this linestring is inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.LineString.Coordinates">
            <summary>
            Returns the list of coordinates.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.LineString.Box">
            <summary>
            Returns the smallest possible bounding box containing this geometry.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.#ctor">
            <summary>
            Creates a new lineair ring.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Math.Geo.GeoCoordinate})">
            <summary>
            Creates a new lineair ring.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.#ctor(OsmSharp.Math.Geo.GeoCoordinate[])">
            <summary>
            Creates a new lineair ring.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.IsEar(System.Int32)">
            <summary>
            Returns true if the given vertex is convex.
            </summary>
            <param name="vertexIdx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.GetNeigbours(System.Int32)">
            <summary>
            Returns the neighbours of the given vertex.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.Contains(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Returns true if the given coordinate is contained in this ring.
            
            See: http://geomalgorithms.com/a03-_inclusion.html
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.LineairRing.Contains(OsmSharp.Geo.Geometries.LineairRing)">
            <summary>
            Returns true if the given ring is contained in this ring.
            </summary>
            <param name="lineairRing"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.MultiLineString">
            <summary>
            A multi line string, a collection of one or more linestring instances.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiLineString.#ctor">
            <summary>
            Creates a new multiline string.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiLineString.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.LineString})">
            <summary>
            Creates a new multiline string.
            </summary>
            <param name="lineStrings"></param>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.MultiPoint">
            <summary>
            A multi point, a collection of zero or more points.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiPoint.#ctor">
            <summary>
            Creates a new multipoint string.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiPoint.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.Point})">
            <summary>
            Creates a new multipoint string.
            </summary>
            <param name="points"></param>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.MultiPolygon">
            <summary>
            A multi polygon, a collection of zero or more polygons.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiPolygon.#ctor">
            <summary>
            Creates a new multipolygon string.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiPolygon.#ctor(OsmSharp.Geo.Geometries.Polygon[])">
            <summary>
            Creates a new multipolygon string.
            </summary>
            <param name="polygons"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.MultiPolygon.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.Polygon})">
            <summary>
            Creates a new multipolygon string.
            </summary>
            <param name="polygons"></param>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.Point">
            <summary>
            Represents a single point.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Point.#ctor(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Creates a new point geometry.
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Point.IsInside(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns true if this point is visible inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Point.Coordinate">
            <summary>
            Gets/sets the coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Point.Box">
            <summary>
            Returns the smallest possible bounding box containing this geometry.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.Polygon">
            <summary>
            Represents a polygon.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.#ctor">
            <summary>
            Creates a new polygon.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.#ctor(OsmSharp.Geo.Geometries.LineairRing)">
            <summary>
            Creates a new polygon.
            </summary>
            <param name="outline">The outline of the polygon.</param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.#ctor(OsmSharp.Geo.Geometries.LineairRing,System.Collections.Generic.IEnumerable{OsmSharp.Geo.Geometries.LineairRing})">
            <summary>
            Creates a new polygon.
            </summary>
            <param name="outline"></param>
            <param name="holes"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.Contains(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Returns true if the point is inside this polygon.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.Contains(OsmSharp.Geo.Geometries.LineairRing)">
            <summary>
            Returns true if the given ring is contained in this polygon.
            </summary>
            <param name="lineairRing"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.Contains(OsmSharp.Geo.Geometries.Polygon)">
            <summary>
            Returns true if the given polygon is contained in this polygon.
            </summary>
            <param name="polygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Polygon.IsInside(OsmSharp.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns true if this polygon is inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Polygon.Holes">
            <summary>
            Gets the holes in this polygon.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Polygon.Ring">
            <summary>
            Gets the outer outline lineair ring of this polygon.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Polygon.Box">
            <summary>
            Returns the smallest possible bounding box containing this geometry.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Meta.DirectionCalculator">
            <summary>
            Direction calculator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Meta.DirectionCalculator.Calculate(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Calculates the direction.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Geo.Meta.DirectionEnum">
            <summary>
            Direction types.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.North">
            <summary>
            North.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.NorthEast">
            <summary>
            Northeast.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.East">
            <summary>
            East.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.SouthEast">
            <summary>
            Southeast.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.South">
            <summary>
            South.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.SouthWest">
            <summary>
            Southwest.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.West">
            <summary>
            West.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.DirectionEnum.NorhtWest">
            <summary>
            Northwest.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Meta.RelativeDirection">
            <summary>
            Represents a relative direction.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Meta.RelativeDirection.ToString">
            <summary>
            Returns a System.String that represents the current System.Object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.Meta.RelativeDirection.Direction">
            <summary>
            The relative direction.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Meta.RelativeDirection.Angle">
            <summary>
            The angle.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Meta.RelativeDirectionCalculator">
            <summary>
            Relative direction calculator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Meta.RelativeDirectionCalculator.Calculate(OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate,OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Calculates the relative direction.
            </summary>
            <param name="from"></param>
            <param name="along"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum">
            <summary>
            Relative direction enumeration.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.SharpLeft">
            <summary>
            Sharpleft.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.SlightlyLeft">
            <summary>
            Slightlyleft.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.SharpRight">
            <summary>
            Sharpright.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.SlightlyRight">
            <summary>
            Slightlyright.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.StraightOn">
            <summary>
            Straighton.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Meta.RelativeDirectionEnum.TurnBack">
            <summary>
            Turnback.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Projections.IProjection">
            <summary>
            An abstract of a projection.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.ToPixel(System.Double,System.Double)">
            <summary>
            Converts the given lat lon to pixels.
            </summary>
            <returns>The pixel.</returns>
            <param name="lat">Lat.</param>
            <param name="lon">Lon.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.ToPixel(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Converts the given coordinate to pixels.
            </summary>
            <returns>The pixel.</returns>
            <param name="coordinate">Coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.ToGeoCoordinates(System.Double,System.Double)">
            <summary>
            Converts the given x-y pixel coordinates into geocoordinates.
            </summary>
            <returns>The geo coordinates.</returns>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.LongitudeToX(System.Double)">
            <summary>
            Converts the given x-pixel coordinate into logitude.
            </summary>
            <returns>The x.</returns>
            <param name="longitude">Longitude.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.LatitudeToY(System.Double)">
            <summary>
            Converts the given y-pixel coordinate into logitude.
            </summary>
            <returns>The y.</returns>
            <param name="latitude">Latitude.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.YToLatitude(System.Double)">
            <summary>
            Converts the given y-coordinate to latitude.
            </summary>
            <returns>The latitude.</returns>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.XToLongitude(System.Double)">
            <summary>
            Converts the given x-coordinate to longitude.
            </summary>
            <returns>The longitude.</returns>
            <param name="x">The x coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.ToZoomFactor(System.Double)">
            <summary>
            Converts the given zoom level to a given zoom factor for this projection.
            </summary>
            <param name="zoomLevel"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.IProjection.ToZoomLevel(System.Double)">
            <summary>
            Converts the given zoom factor to a given zoom level for this projection.
            </summary>
            <param name="zoomFactor"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.Projections.IProjection.DirectionX">
            <summary>
            Returns true if this projection uses lowest left, highest right. False otherwise.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Projections.IProjection.DirectionY">
            <summary>
            Returns true if this projection uses lowest bottom, highest top. False otherwise.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.Ellipsoids.Hayford1924Ellipsoid">
            <summary>
            Represents a hayford 1924 ellipsoid.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.LambertEllipsoid">
            <summary>
            Represents an ellipsoid used with the lamber projection.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertEllipsoid._semi_major_axis">
            <summary>
            The distance from the center of the ellipsoid to one of the focus points.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertEllipsoid._flattening">
            <summary>
            The flattening of this ellipsoid.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertEllipsoid._eccentricity">
            <summary>
            The eccentricity of this ellipsoid, calculated upon creation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new ellipsoid.
            </summary>
            <param name="semi_major_axis"></param>
            <param name="flattening"></param>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.Eccentricity">
            <summary>
            Returns the calculated eccentricity of this ellipsoid.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.SemiMajorAxis">
            <summary>
            Returns the semi major axis size.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.Flattening">
            <summary>
            Returns the flattening of this ellipsoid.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.Hayford1924Ellipsoid">
            <summary>
            Returns the hayford 1924 ellisoid.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertEllipsoid.Wgs1984Ellipsoid">
            <summary>
            Returns the wgs 1984 ellisoid.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.Ellipsoids.Hayford1924Ellipsoid.#ctor">
            <summary>
            Creates a new hayford ellipsoid.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.Ellipsoids.Wgs1984Ellipsoid">
            <summary>
            Represents a hayford 1924 ellipsoid.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.Ellipsoids.Wgs1984Ellipsoid.#ctor">
            <summary>
            Creates a ned WSG 1984 ellipsoid.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.International.Belgium.Belgium1972LambertProjection">
            <summary>
            The belgian 1972 lambert system.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.LambertProjectionBase">
            <summary>
            A standard lamber projection.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._name">
            <summary>
            The name of this projection.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._ellipsoid">
            <summary>
            The ellipsoid used in this projection.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._standard_parallel_1">
            <summary>
            The first standard parallel in decimal degrees.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._standard_parallel_1_radians">
            <summary>
            The first standard parallel in radians.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._standard_parallel_2">
            <summary>
            The second standard parallel in decimal degrees.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._standard_parallel_2_radians">
            <summary>
            The second standard parallell in radians.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._latitude_origin">
            <summary>
            The latitude of the origin.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._latitude_origin_radians">
            <summary>
            THe latitude of the orgine in radians.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._longitude_origin">
            <summary>
            The longitude of the origin.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._longitude_origin_radians">
            <summary>
            The longitude of the orgin.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._x_origin">
            <summary>
            The x-coordinate of the origin.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertProjectionBase._y_origin">
            <summary>
            The y-coordinate of the origin.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.LambertProjectionBase.#ctor(System.String,OsmSharp.Math.Geo.Lambert.LambertEllipsoid,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new lambert projection.
            </summary>
            <param name="name"></param>
            <param name="ellipsoid"></param>
            <param name="standard_parallel_1"></param>
            <param name="standard_parallel_2"></param>
            <param name="latitude_origin_1"></param>
            <param name="longitude_origin_2"></param>
            <param name="x_origin"></param>
            <param name="y_origin"></param>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.LambertProjectionBase.ConvertToWGS84(System.Double,System.Double)">
            <summary>
            Converts the given lambert coordinates to mercator coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertProjectionBase.Name">
            <summary>
            The name of this projection.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertProjectionBase.Belgium1972LambertProjection">
            <summary>
            Returns an instance of the belgium 1972 lambert projection.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.International.Belgium.Belgium1972LambertProjection.#ctor">
            <summary>
            Creates a new lambert projection.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Lambert.LambertCoordinate">
            <summary>
            Represents a lambert coordinate for a given projection.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertCoordinate._projection">
            <summary>
            The projection this lambert coordinate is for.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertCoordinate._x">
            <summary>
            The x-part of this coordinate.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Geo.Lambert.LambertCoordinate._y">
            <summary>
            The y-part of this coordinate.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Lambert.LambertCoordinate.#ctor(OsmSharp.Math.Geo.Lambert.LambertProjectionBase)">
            <summary>
            Creates a new lambert coordinate.
            </summary>
            <param name="projection"></param>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertCoordinate.Projection">
            <summary>
            Gets the projection for this coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertCoordinate.X">
            <summary>
            Gets/Sets the x-part of this coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Lambert.LambertCoordinate.Y">
            <summary>
            Gets/Sets the y-part of this coordinate.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Projections.WebMercator">
            <summary>
            Projection that corresponds to the projection used for webtiles. This will project webtiles nicely into 256x256 squares.
            </summary>
            <remarks>http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames
            Zoom level 16 is used as the default level.</remarks>
        </member>
        <member name="F:OsmSharp.Math.Geo.Projections.WebMercator.DefaultZoom">
            <summary>
            Holds the constant default zoom level.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.ToPixel(System.Double,System.Double)">
            <summary>
            Converts the lat/lon to projected coordinates.
            </summary>
            <param name="lat"></param>
            <param name="lon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.ToPixel(OsmSharp.Math.Geo.GeoCoordinate)">
            <summary>
            Converts the lat/lon to projected coordinates.
            </summary>
            <param name="coordinate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.ToGeoCoordinates(System.Double,System.Double)">
            <summary>
            Converts the given projected coordinates to lat/lon.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.LongitudeToX(System.Double)">
            <summary>
            Converts longitude to a projected x-coordinate.
            </summary>
            <param name="lon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.LatitudeToY(System.Double)">
            <summary>
            Converts the latitude to a projected y-coordinate.
            </summary>
            <param name="lat"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.YToLatitude(System.Double)">
            <summary>
            Converts the projected y-coordinate to latitude.
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.XToLongitude(System.Double)">
            <summary>
            Converts the projected x-coordinate to longitude.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.ToZoomFactor(System.Double)">
            <summary>
            Returns the scale for the given zoomlevel.
            </summary>
            <param name="zoomLevel"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Geo.Projections.WebMercator.ToZoomLevel(System.Double)">
            <summary>
            Returns the scale for the given zoomFactor.
            </summary>
            <param name="zoomFactor"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Geo.Projections.WebMercator.DirectionX">
            <summary>
            Returns true if this projection uses lowest left, highest right. False otherwise.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Projections.WebMercator.DirectionY">
            <summary>
            Returns true if this projection uses lowest bottom, highest top. False otherwise.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Geo.Simple.GeoCoordinateSimple">
            <summary>
            A simple version of a coordinate.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Simple.GeoCoordinateSimple.Latitude">
            <summary>
            Latitude.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Geo.Simple.GeoCoordinateSimple.Longitude">
            <summary>
            Longitude.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Streams.GeoCollectionStreamSource">
            <summary>
            A geometry stream source for a geometry collection.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource">
            <summary>
            Represents a source of geometry objects.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource.Initialize">
            <summary>
            Intializes this source.
            </summary>
            <rremarks>Has to be called before starting read objects.</rremarks>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource.CanReset">
            <summary>
            Returns true if this source can be reset.
            </summary>
            <returns></returns>
            <remarks>Some sources cannot be reset, live feeds of objects for example.</remarks>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource.Close">
            <summary>
            Closes this target.
            </summary>
            <remarks>Closes any open connections, file locks or anything related to this source.</remarks>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource.GetBounds">
            <summary>
            Returns the bounds of this source.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Geometries.Streams.IGeoStreamSource.HasBounds">
            <summary>
            Returns true if this source is bounded.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.#ctor(OsmSharp.Geo.Geometries.GeometryCollection)">
            <summary>
            Creates a new geometry collection stream source.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.Initialize">
            <summary>
            Initializes this stream source.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.CanReset">
            <summary>
            Returns true if this stream can be reset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.Close">
            <summary>
            Closes this stream.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.GetBounds">
            <summary>
            Returns the bounds of this geometry source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.Dispose">
            <summary>
            Disposes all resource associated with this source.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Streams.GeoCollectionStreamSource._enumerator">
            <summary>
            Holds the current enumerator.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.MoveNext">
            <summary>
            Move to the next item in the geometry collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.Reset">
            <summary>
            Resets this 
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.GetEnumerator">
            <summary>
            Returns a enumerator for this source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.GeoCollectionStreamSource.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the objects in this source.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Geo.Streams.GeoCollectionStreamSource.GeometryCollection">
            <summary>
            Gets/sets the geometry collection.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Streams.GeoCollectionStreamSource.HasBounds">
            <summary>
            Returns true if this stream has bounds.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Streams.GeoCollectionStreamSource.Current">
            <summary>
            Returns the current geometry.
            </summary>
        </member>
        <member name="P:OsmSharp.Geo.Streams.GeoCollectionStreamSource.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current geometry.
            </summary>
        </member>
        <member name="T:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource">
            <summary>
            Gpx-stream source.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource._stream">
            <summary>
            Holds the stream containing the source-data.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource._createTrackPoints">
            <summary>
            Holds the flag to create invidiual points for each track position.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Gpx-geometry stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new Gpx-geometry stream.
            </summary>
            <param name="stream"></param>
            <param name="createTrackPoints"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.Initialize">
            <summary>
            Called when initializing this source.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource._read">
            <summary>
            The gpx object.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.DoReadGpx">
            <summary>
            Reads the actual Gpx.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.ReadGpxv1_1(OsmSharp.IO.Xml.Gpx.v1_1.gpxType)">
            <summary>
            Reads a gpx v1.1 object into corresponding geometries.
            </summary>
            <param name="gpx"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Gpx.GpxGeoStreamSource.ReadGpxv1_0(OsmSharp.IO.Xml.Gpx.v1_0.gpx)">
            <summary>
            Reads a gpx v1.0 object into corresponding geometries.
            </summary>
            <param name="gpx"></param>
        </member>
        <member name="T:OsmSharp.Geo.Geometries.Streams.IGeoStreamTarget">
            <summary>
            Represents a geometry target accepting geometry objects for processing.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamTarget.Initialize">
            <summary>
            Intializes this target.
            </summary>
            <rremarks>Has to be called before starting to add objects.</rremarks>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamTarget.AddGeometry(OsmSharp.Geo.Geometries.Geometry)">
            <summary>
            Adds a new geometry.
            </summary>
            <param name="geometry"></param>
        </member>
        <member name="M:OsmSharp.Geo.Geometries.Streams.IGeoStreamTarget.Close">
            <summary>
            Closes this target.
            </summary>
            <remarks>Closes any open connections, file locks or anything related to this target.</remarks>
        </member>
        <member name="T:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource">
            <summary>
            Gpx-stream source.
            </summary>
            <remarks>
                    Folders => ???
                    Document => ???    
                        Placemark => ???
                        Geometry => 
                            Polygon => Polygon
                                InnerBoundary => LineairRing
                                OuterBoundary => LineairRing
                            Point => Point
                            LineString => LineString
                            LineairRing => LineairRing
                            MultiGeometery => MultiX
            </remarks>
        </member>
        <member name="F:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource._stream">
            <summary>
            Holds the stream containing the source-data.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Kml-geometry stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.Initialize">
            <summary>
            Called when initializing this source.
            </summary>
        </member>
        <member name="F:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource._read">
            <summary>
            The kml object.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.DoReadKml">
            <summary>
            Reads the actual Kml.
            </summary>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertKml(OsmSharp.IO.Xml.Kml.v2_1.KmlType)">
            <summary>
            Reads a kml v2.1 object into corresponding geometries.
            </summary>
            <param name="kmlType"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertKml(OsmSharp.IO.Xml.Kml.v2_0_response.kml)">
            <summary>
            Reads a kml v2.0 response object into corresponding geometries.
            </summary>
            <param name="kml"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertKml(OsmSharp.IO.Xml.Kml.v2_0.kml)">
            <summary>
            Reads a kml v2.0 object into corresponding geometries.
            </summary>
            <param name="kml"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPlacemark(OsmSharp.IO.Xml.Kml.v2_0.Placemark)">
            <summary>
            Converts a placemark into an osm object.
            </summary>
            <param name="placemark"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPolygon(OsmSharp.IO.Xml.Kml.v2_0.Polygon)">
            <summary>
            Converts a polygon.
            </summary>
            <param name="polygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLinearRing(OsmSharp.IO.Xml.Kml.v2_0.LinearRing)">
            <summary>
            Converts a lineairring into an osm object.
            </summary>
            <param name="linearRing"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPoint(OsmSharp.IO.Xml.Kml.v2_0.Point)">
            <summary>
            Converts a point into an osm object.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiPolygon(OsmSharp.IO.Xml.Kml.v2_0.MultiPolygon)">
            <summary>
            Converts a multipolygon into osm objects.
            </summary>
            <param name="multiPolygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiPoint(OsmSharp.IO.Xml.Kml.v2_0.MultiPoint)">
            <summary>
            Converts a multipoint to osm objects.
            </summary>
            <param name="multiPoint"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiLineString(OsmSharp.IO.Xml.Kml.v2_0.MultiLineString)">
            <summary>
            Converts a multilinestring to osm objects.
            </summary>
            <param name="multiLineString"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiGeometry(OsmSharp.IO.Xml.Kml.v2_0.MultiGeometry)">
            <summary>
            Converts a multigeometry to osm objects.
            </summary>
            <param name="multiGeometry"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLineString(OsmSharp.IO.Xml.Kml.v2_0.LineString)">
            <summary>
            Converts a linestring to osm objects.
            </summary>
            <param name="lineString"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertFolder(OsmSharp.IO.Xml.Kml.v2_0.Folder)">
            <summary>
            Converts a folder into an osm object.
            </summary>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertDocument(OsmSharp.IO.Xml.Kml.v2_0.Document)">
            <summary>
            Converts a document into osm elements.
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertResponse(OsmSharp.IO.Xml.Kml.v2_0_response.Response)">
            <summary>
            Converts a response into an osm object.
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPlacemark(OsmSharp.IO.Xml.Kml.v2_0_response.Placemark)">
            <summary>
            Converts a placemark into an osm object.
            </summary>
            <param name="placemark"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPolygon(OsmSharp.IO.Xml.Kml.v2_0_response.Polygon)">
            <summary>
            Converts a polygon.
            </summary>
            <param name="polygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLinearRing(OsmSharp.IO.Xml.Kml.v2_0_response.LinearRing)">
            <summary>
            Converts a lineairring into an osm object.
            </summary>
            <param name="linearRing"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPoint(OsmSharp.IO.Xml.Kml.v2_0_response.Point)">
            <summary>
            Converts a point into an osm object.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiPolygon(OsmSharp.IO.Xml.Kml.v2_0_response.MultiPolygon)">
            <summary>
            Converts a multipolygon into osm objects.
            </summary>
            <param name="multiPolygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiPoint(OsmSharp.IO.Xml.Kml.v2_0_response.MultiPoint)">
            <summary>
            Converts a multipoint to osm objects.
            </summary>
            <param name="multiPoint"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiLineString(OsmSharp.IO.Xml.Kml.v2_0_response.MultiLineString)">
            <summary>
            Converts a multilinestring to osm objects.
            </summary>
            <param name="multiLineString"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiGeometry(OsmSharp.IO.Xml.Kml.v2_0_response.MultiGeometry)">
            <summary>
            Converts a multigeometry to osm objects.
            </summary>
            <param name="multiGeometry"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLineString(OsmSharp.IO.Xml.Kml.v2_0_response.LineString)">
            <summary>
            Converts a linestring to osm objects.
            </summary>
            <param name="lineString"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertFolder(OsmSharp.IO.Xml.Kml.v2_0_response.Folder)">
            <summary>
            Converts a folder into an osm object.
            </summary>
            <param name="folder"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertDocument(OsmSharp.IO.Xml.Kml.v2_0_response.Document)">
            <summary>
            Converts a document into osm elements.
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertFeatures(OsmSharp.IO.Xml.Kml.v2_1.FeatureType[])">
            <summary>
            Converts all the features into osm elements.
            </summary>
            <param name="featureType"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertFeature(OsmSharp.IO.Xml.Kml.v2_1.FeatureType)">
            <summary>
            Converts a feature and all it's contents to osm elements.
            </summary>
            <param name="feature"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPlacemark(OsmSharp.IO.Xml.Kml.v2_1.PlacemarkType)">
            <summary>
            Conversts a placemark and all it's contents to osm elements.
            </summary>
            <param name="placemark"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertGeometry(OsmSharp.IO.Xml.Kml.v2_1.GeometryType)">
            <summary>
            Converts a geometry to a list of osm objects.
            </summary>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertMultiGeometry(OsmSharp.IO.Xml.Kml.v2_1.MultiGeometryType)">
            <summary>
            Converts the multi geometry to multi osm objects.
            </summary>
            <param name="multiGeometry"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPolygon(OsmSharp.IO.Xml.Kml.v2_1.PolygonType)">
            <summary>
            Convests the polygon to osm objects.
            </summary>
            <param name="polygon"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertBoundary(OsmSharp.IO.Xml.Kml.v2_1.boundaryType[])">
            <summary>
            Converts boundary type into an osm object.
            </summary>
            <param name="boundary"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLinearRing(OsmSharp.IO.Xml.Kml.v2_1.LinearRingType)">
            <summary>
            Converts a lineairring into osm objects.
            </summary>
            <param name="linearRing"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertLineString(OsmSharp.IO.Xml.Kml.v2_1.LineStringType)">
            <summary>
            Converts a line string into an osm object.
            </summary>
            <param name="lineString"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertPoint(OsmSharp.IO.Xml.Kml.v2_1.PointType)">
            <summary>
            Converts a point into an oms object.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertContainer(OsmSharp.IO.Xml.Kml.v2_1.ContainerType)">
            <summary>
            Converts a container and it's contents to osm elements.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:OsmSharp.Geo.Streams.Kml.KmlGeoStreamSource.ConvertCoordinates(System.String)">
            <summary>
            Converts a list of coordinates to geocoordinates.
            </summary>
            <param name="coordinates"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.IO.ByteCache.IByteCache">
            <summary>
            Abstract representation of a byte cache.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.IByteCache.Add(System.Byte[])">
            <summary>
            Adds a new series of data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.IByteCache.Get(System.UInt32)">
            <summary>
            Gets the data associated with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.IByteCache.Remove(System.UInt32)">
            <summary>
            Removes all data associated with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:OsmSharp.IO.ByteCache.IByteCache.Size">
            <summary>
            Gets the size of this cache.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.ByteCache.MemoryByteCache">
            <summary>
            An in-memory cache of byte arrays.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.ByteCache.MemoryByteCache._nextId">
            <summary>
            Holds the next id.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.ByteCache.MemoryByteCache._data">
            <summary>
            Holds the data.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.MemoryByteCache.Add(System.Byte[])">
            <summary>
            Adds a new array.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.MemoryByteCache.Get(System.UInt32)">
            <summary>
            Gets the data associated with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.MemoryByteCache.Remove(System.UInt32)">
            <summary>
            Removes all data associated with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:OsmSharp.IO.ByteCache.MemoryByteCache.Dispose">
            <summary>
            Disposes of all resources used in this cache.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.ByteCache.MemoryByteCache.Size">
            <summary>
            Returns the size of this cache.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.CappedStream">
            <summary>
            Represents a capped stream that can only be used along a given region.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.CappedStream._stream">
            <summary>
            Holds the stream.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.CappedStream._offset">
            <summary>
            Holds the offset.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.CappedStream._length">
            <summary>
            Holds the length.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.#ctor(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Creates a new capped stream.
            </summary>
            <param name="stream"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current
                stream and advances the position within the stream by the number of bytes
                read.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current
                stream.
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.IO.CappedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
             Writes a sequence of bytes to the current
                stream and advances the current position within this stream by the number
                of bytes written.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="P:OsmSharp.IO.CappedStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.CappedStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.CappedStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.CappedStream.Length">
            <summary>
            Returns the current length of this stream.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.CappedStream.Position">
            <summary>
            Gets/sets the current position.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.DelimitedFiles.DefaultDelimitedFormat">
            <summary>
            Describes a default delimiter format that leaves all data intact and 
            exports all columns.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.DelimitedFiles.IDelimitedFormat">
            <summary>
            Provides an interface to enable a custom format for the delimited files.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.IDelimitedFormat.ConvertValue(System.Int32,System.Object)">
            <summary>
            Converts a value in a given field to another value.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.IDelimitedFormat.DoExport(System.Int32)">
            <summary>
            Returns true if the column has to be exported.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler">
            <summary>
            Handles common delimited file functions.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.ReadDelimitedFile(OsmSharp.Progress.IProgressReporter,System.IO.Stream,OsmSharp.IO.DelimitedFiles.DelimiterType,System.Boolean)">
            <summary>
            Reads a delimited file.
            </summary>
            <param name="reporter"></param>
            <param name="file"></param>
            <param name="delimiter"></param>
            <param name="firstRowHasHeaders"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.ReadDelimitedFileFromStream(System.IO.Stream,OsmSharp.IO.DelimitedFiles.DelimiterType,System.Boolean)">
            <summary>
            Reads a delimited file into an array of an array of strings.
            </summary>
            <param name="stream"></param>
            <param name="delimiter"></param>
            <param name="ignoreHeader"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.ReadDelimitedFileFromStream(System.IO.Stream,OsmSharp.IO.DelimitedFiles.DelimiterType)">
            <summary>
            Reads a delimited file into an array of an array of strings.
            </summary>
            <param name="stream"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.WriteDelimitedFile(OsmSharp.Progress.IProgressReporter,System.String[][],System.IO.TextWriter,OsmSharp.IO.DelimitedFiles.DelimiterType,OsmSharp.IO.DelimitedFiles.IDelimitedFormat)">
            <summary>
            Writes a delimited file using the given format.
            </summary>
            <param name="reporter"></param>
            <param name="data"></param>
            <param name="writer"></param>
            <param name="delimiter_type"></param>
            <param name="format"></param>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.GetDelimiterChar(OsmSharp.IO.DelimitedFiles.DelimiterType)">
            <summary>
            Returns the delimiter char for a delimiter type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.DelimitedFiles.DelimitedFileHandler.WriteDelimitedFile(OsmSharp.Progress.IProgressReporter,System.String[][],System.IO.TextWriter,OsmSharp.IO.DelimitedFiles.DelimiterType)">
            <summary>
            Writes a delimited file using a default format.
            </summary>
            <param name="reporter"></param>
            <param name="data"></param>
            <param name="writer"></param>
            <param name="delimiter_type"></param>
        </member>
        <member name="T:OsmSharp.IO.DelimitedFiles.DelimiterType">
            <summary>
            The type of delimiter in a delimited file.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.DelimitedFiles.DelimiterType.TabSeperated">
            <summary>
            Tab seperated type.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.DelimitedFiles.DelimiterType.CommaSeperated">
            <summary>
            Comma seperated type.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.DelimitedFiles.DelimiterType.DotCommaSeperated">
            <summary>
            Do seperated type.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.LimitedStream">
            <summary>
            Wraps a stream to prevent some fixed data from being overwritten.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.LimitedStream._offset">
            <summary>
            Holds the offset or the header length.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.LimitedStream._stream">
            <summary>
            Holds the stream.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new routing serializer stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current
                stream and advances the position within the stream by the number of bytes
                read.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current
                stream.
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.IO.LimitedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
             Writes a sequence of bytes to the current
                stream and advances the current position within this stream by the number
                of bytes written.
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="P:OsmSharp.IO.LimitedStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.LimitedStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.LimitedStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.LimitedStream.Length">
            <summary>
            Returns the current length of this stream.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.LimitedStream.Position">
            <summary>
            Gets/sets the current position.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.StreamCache.IStreamCache">
            <summary>
            Abstract representation of a stream cache.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.StreamCache.IStreamCache.CreateNew">
            <summary>
            Creates a new cached stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.StreamCache.IStreamCache.Dispose(System.IO.Stream)">
            <summary>
            The given stream can be disposed.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:OsmSharp.IO.StreamCache.MemoryCachedStream">
            <summary>
            An in-memory stream cache.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.StreamCache.MemoryCachedStream._streams">
            <summary>
            Holds the streams.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.StreamCache.MemoryCachedStream.CreateNew">
            <summary>
            Creates a new stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.StreamCache.MemoryCachedStream.Dispose(System.IO.Stream)">
            <summary>
            Disposes all resource associated with this object.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.IO.StreamCache.MemoryCachedStream.Dispose">
            <summary>
            Disposes all resource associated with this object.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.GpxDocument">
            <summary>
            Represents a gpx document.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxDocument._gpx_object">
            <summary>
            The actual gpx object.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxDocument._source">
            <summary>
            The xml source this documents comes from.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxDocument._version">
            <summary>
            Returns the gpx version.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Gpx.GpxDocument.#ctor(OsmSharp.IO.Xml.IXmlSource)">
            <summary>
            Creates a new kml document based on an xml source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Gpx.GpxDocument.Save">
            <summary>
            Saves this gpx back to it's source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Gpx.GpxDocument.Close">
            <summary>
            Closes this gpx document.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.GpxDocument.IsReadOnly">
            <summary>
            Returns the readonly flag.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.GpxDocument.Version">
            <summary>
            Returns the gpx version.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.GpxDocument.Gpx">
            <summary>
            Gets/Sets the gpx object.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.GpxVersion">
            <summary>
            The possible gpx document versions.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxVersion.Gpxv1_0">
            <summary>
            Gpx v1.0
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxVersion.Gpxv1_1">
            <summary>
            Gpx v1.1
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.GpxVersion.Unknown">
            <summary>
            Uknown.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpx">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Gpx.v1_0.gpx.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.author">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.email">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.keywords">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.bounds">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.wpt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.rte">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.trk">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.version">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpx.creator">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.boundsType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.boundsType.minlat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.boundsType.minlon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.boundsType.maxlat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.boundsType.maxlon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.ele">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.eleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.magvar">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.magvarSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.geoidheight">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.geoidheightSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.sym">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.fix">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.fixSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.sat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.hdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.hdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.vdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.vdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.pdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.pdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.ageofdgpsdata">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.ageofdgpsdataSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.dgpsid">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxWpt.lon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.fixType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_0.fixType.none">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_0.fixType.Item2d">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_0.fixType.Item3d">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_0.fixType.dgps">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_0.fixType.pps">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRte.rtept">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.ele">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.eleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.magvar">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.magvarSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.geoidheight">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.geoidheightSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.sym">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.fix">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.fixSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.sat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.hdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.hdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.vdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.vdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.pdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.pdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.ageofdgpsdata">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.ageofdgpsdataSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.dgpsid">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxRteRtept.lon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrk.trkseg">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.ele">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.eleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.course">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.courseSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.speed">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.speedSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.magvar">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.magvarSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.geoidheight">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.geoidheightSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.urlname">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.sym">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.fix">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.fixSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.sat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.hdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.hdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.vdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.vdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.pdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.pdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.ageofdgpsdata">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.ageofdgpsdataSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.dgpsid">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.Any">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_0.gpxTrkTrksegTrkpt.lon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.gpxType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.metadata">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.wpt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.rte">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.trk">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.version">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.gpxType.creator">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.metadataType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.author">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.copyright">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.link">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.keywords">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.metadataType.bounds">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.personType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.personType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.personType.email">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.personType.link">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.emailType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.emailType.id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.emailType.domain">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.trksegType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trksegType.trkpt">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.wptType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.ele">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.eleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.time">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.timeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.magvar">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.magvarSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.geoidheight">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.geoidheightSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.link">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.sym">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.fix">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.fixSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.sat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.hdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.hdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.vdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.vdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.pdop">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.pdopSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.ageofdgpsdata">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.ageofdgpsdataSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.dgpsid">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.wptType.lon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.linkType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.linkType.text">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.linkType.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.linkType.href">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.fixType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_1.fixType.none">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_1.fixType.Item2d">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_1.fixType.Item3d">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_1.fixType.dgps">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Gpx.v1_1.fixType.pps">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.trkType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.link">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.trkType.trkseg">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.rteType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.cmt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.desc">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.src">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.link">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.rteType.rtept">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.boundsType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.boundsType.minlat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.boundsType.minlon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.boundsType.maxlat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.boundsType.maxlon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Gpx.v1_1.copyrightType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.copyrightType.year">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.copyrightType.license">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Gpx.v1_1.copyrightType.author">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.IXmlSource">
            <summary>
            Reprents an xml source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.IXmlSource.GetReader">
            <summary>
            Returns the reader for this xml source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.IXmlSource.GetWriter">
            <summary>
            Returns a write for this xml source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.IXmlSource.Close">
            <summary>
            Closes the xml source.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.IXmlSource.IsReadOnly">
            <summary>
            Returns true if the xml source is readonly.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.IXmlSource.HasData">
            <summary>
            Returns true if the source has data.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.KmlDocument">
            <summary>
            Represents a kml document.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlDocument._kml_object">
            <summary>
            The actual kml object.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlDocument._source">
            <summary>
            The xml source this documents comes from.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlDocument._version">
            <summary>
            Returns the kml version.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.KmlDocument.#ctor(OsmSharp.IO.Xml.IXmlSource)">
            <summary>
            Creates a new kml document based on an xml source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.KmlDocument.Save">
            <summary>
            Saves this kml back to it's source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.KmlDocument.Close">
            <summary>
            Closes this data source.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.KmlDocument.IsReadOnly">
            <summary>
            Returns the readonly flag.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.KmlDocument.Version">
            <summary>
            Returns the kml version.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.KmlDocument.Kml">
            <summary>
            Gets/Sets the kml object.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.KmlVersion">
            <summary>
            The possible kml document versions.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlVersion.Kmlv2_1">
            <summary>
            Kml v2.1
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlVersion.Kmlv2_0">
            <summary>
            Kml v2.0
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlVersion.Kmlv2_0_response">
            <summary>
            Kml v2.0 response.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.KmlVersion.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.kml">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.kml.Item">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.kml.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Document">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Document.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Document.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Document.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Folder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Folder.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Folder.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Folder.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.LatLonBox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.drawOrder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.drawOrderSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.LookAt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.GroundOverlay.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.href">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.h">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.hSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.w">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.wSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.xSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.ySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.refreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.refreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewRefreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewRefreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewRefreshTime">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewRefreshTimeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewBoundScale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.viewBoundScaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Icon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.refreshMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.refreshMode.onChange">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.refreshMode.onInterval">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.viewRefreshMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.viewRefreshMode.never">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.viewRefreshMode.onRequest">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.viewRefreshMode.onStop">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.north">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.east">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.south">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.west">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.rotation">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LatLonBox.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LookAt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.longitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.latitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.range">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.tilt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.timePosition">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LookAt.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.Url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.flyToView">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.flyToViewSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.refreshVisibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.refreshVisibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLink.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.href">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.refreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.refreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.viewRefreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.viewRefreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.viewRefreshTime">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.viewRefreshTimeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.viewFormat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Url.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Placemark">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Placemark.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Placemark.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Placemark.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.tessellateSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineString.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.altitudeMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.altitudeMode.clampedToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.altitudeMode.relativeToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.altitudeMode.absolute">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.MultiGeometry">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiGeometry.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiGeometry.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiGeometry.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.MultiLineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiLineString.LineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiLineString.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.MultiPoint">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiPoint.Point">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiPoint.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Point">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Point.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.MultiPolygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiPolygon.Polygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.MultiPolygon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Polygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.tessellateSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.innerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.outerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Polygon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.innerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.innerBoundaryIs.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.innerBoundaryIs.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LinearRing.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LinearRing.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.outerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.outerBoundaryIs.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.outerBoundaryIs.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.LineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.MultiGeometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.MultiLineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.MultiPoint">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.MultiPolygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.Point">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.Polygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.altitudeMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.extrude">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType.tessellate">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Snippet">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Snippet.maxLines">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Snippet.maxLinesSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Snippet.Value">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Style">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.IconStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.LineStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.PolyStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.LabelStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.BalloonStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Style.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.IconStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.headingSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.IconStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.colorMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.colorMode.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.colorMode.random">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LineStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.width">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.widthSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LineStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.fill">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.fillSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.outline">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.outlineSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.PolyStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.LabelStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.BalloonStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.BalloonStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.BalloonStyle.text">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.BalloonStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.TimePeriod">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.TimePeriod.begin">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.TimePeriod.end">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.TimePeriod.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.begin">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.begin.TimeInstant">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.TimeInstant">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.TimeInstant.timePosition">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.TimeInstant.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.end">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.end.TimeInstant">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.LineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.MultiGeometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.MultiLineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.MultiPoint">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.MultiPolygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.Point">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.Polygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.TimePeriod">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.address">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.styleUrl">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType1.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.drawOrder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.drawOrderSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.overlayXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.screenXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.size">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.rotation">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ScreenOverlay.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.overlayXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.overlayXY.id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.overlayXY.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.overlayXY.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.overlayXY.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.overlayXY.yunits">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.overlayXYXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.overlayXYXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.overlayXYXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.overlayXYYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.overlayXYYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.overlayXYYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.screenXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.screenXY.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.screenXY.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.screenXY.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.screenXY.yunits">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.screenXYXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYXunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.screenXYYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYYunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.screenXYYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.size">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.size.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.size.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.size.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.size.yunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.size.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.sizeXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeXunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.sizeYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeYunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.sizeYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.open">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType2.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Schema">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.ObjArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.ObjField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.SimpleArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.SimpleField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.parent">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Schema.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ObjArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjArrayField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjArrayField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjArrayField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ObjField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.ObjField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.SimpleArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleArrayField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleArrayField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleArrayField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.SimpleField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.SimpleField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.StyleBlinker">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.StyleBlinker.numCycles">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.StyleBlinker.State">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.StyleBlinker.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.State">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.State.duration">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.State.key">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.State.styleUrl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.State.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.key">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.key.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.key.highlight">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.key.select">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.key.on">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.key.off">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.StyleMap">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.StyleMap.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.StyleMap.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.Pair">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Pair.key">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Pair.styleUrl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.Pair.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Schema">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.StyleBlinker">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.StyleMap">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0.ItemsChoiceType3.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.cookie">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.linkDescription">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.linkName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.message">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.minRefreshPeriod">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.minRefreshPeriodSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0.NetworkLinkControl.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.kml">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.kml.Item">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.kml.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Document">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Document.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Document.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Document.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Folder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Folder.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Folder.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Folder.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.LatLonBox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.drawOrder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.drawOrderSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.LookAt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.GroundOverlay.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.href">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.h">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.hSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.w">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.wSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.xSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.ySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.refreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.refreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewRefreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewRefreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewRefreshTime">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewRefreshTimeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewBoundScale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.viewBoundScaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Icon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.refreshMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.refreshMode.onChange">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.refreshMode.onInterval">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.viewRefreshMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.viewRefreshMode.never">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.viewRefreshMode.onRequest">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.viewRefreshMode.onStop">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.north">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.east">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.south">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.west">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.rotation">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LatLonBox.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.longitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.latitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.range">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.tilt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.timePosition">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LookAt.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.Url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.flyToView">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.flyToViewSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.refreshVisibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.refreshVisibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLink.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Url">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.href">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.refreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.refreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.viewRefreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.viewRefreshModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.viewRefreshTime">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.viewRefreshTimeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.viewFormat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Url.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Placemark">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Placemark.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Placemark.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Placemark.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.tessellateSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineString.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.altitudeMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.altitudeMode.clampedToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.altitudeMode.relativeToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.altitudeMode.absolute">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.MultiGeometry">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiGeometry.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiGeometry.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiGeometry.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.MultiLineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiLineString.LineString">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiLineString.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPoint">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPoint.Point">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPoint.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Point">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Point.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPolygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPolygon.Polygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.MultiPolygon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.extrudeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.tessellateSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.altitudeModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.innerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.outerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Polygon.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.innerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.innerBoundaryIs.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.innerBoundaryIs.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LinearRing.coordinates">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LinearRing.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.outerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.outerBoundaryIs.LinearRing">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.outerBoundaryIs.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.LineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.MultiGeometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.MultiLineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.MultiPoint">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.MultiPolygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.Point">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.Polygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.altitudeMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.extrude">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType.tessellate">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Snippet">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Snippet.maxLines">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Snippet.maxLinesSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Snippet.Value">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Style">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.IconStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.LineStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.PolyStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.LabelStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.BalloonStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Style.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.headingSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.IconStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.colorMode">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.colorMode.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.colorMode.random">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.width">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.widthSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LineStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.fill">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.fillSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.outline">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.outlineSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.PolyStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.colorMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.colorModeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.scaleSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.LabelStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.BalloonStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.BalloonStyle.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.BalloonStyle.text">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.BalloonStyle.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.TimePeriod">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.TimePeriod.begin">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.TimePeriod.end">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.TimePeriod.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.begin">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.begin.TimeInstant">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.TimeInstant">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.TimeInstant.timePosition">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.TimeInstant.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.end">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.end.TimeInstant">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.LineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.MultiGeometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.MultiLineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.MultiPoint">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.MultiPolygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.Point">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.Polygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.TimePeriod">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.address">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.styleUrl">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType1.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.drawOrder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.drawOrderSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.overlayXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.screenXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.size">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.visibilitySpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.rotation">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.refreshIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ScreenOverlay.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY.id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXY.yunits">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.overlayXYYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.screenXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.screenXY.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.screenXY.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.screenXY.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.screenXY.yunits">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYXunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYYunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.screenXYYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.size">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.size.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.size.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.size.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.size.yunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.size.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.sizeXunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeXunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeXunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeXunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.sizeYunits">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeYunits.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeYunits.insetPixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.sizeYunits.fraction">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.open">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType2.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Schema">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.ObjArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.ObjField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.SimpleArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.SimpleField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.parent">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Schema.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ObjArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjArrayField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjArrayField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjArrayField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ObjField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.ObjField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleArrayField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleArrayField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleArrayField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleArrayField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleField">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleField.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleField.type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.SimpleField.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.StyleBlinker">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.StyleBlinker.numCycles">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.StyleBlinker.State">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.StyleBlinker.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.State">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.State.duration">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.State.key">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.State.styleUrl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.State.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.key">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.key.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.key.highlight">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.key.select">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.key.on">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.key.off">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.StyleMap">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.StyleMap.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.StyleMap.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Pair">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Pair.key">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Pair.styleUrl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Pair.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Schema">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.StyleBlinker">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.StyleMap">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType3.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.cookie">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.linkDescription">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.linkName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.message">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.minRefreshPeriod">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.minRefreshPeriodSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.NetworkLinkControl.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.Response">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Response.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Response.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_0_response.Response.id">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.Snippet">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.description">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.name">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.open">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_0_response.ItemsChoiceType4.visibility">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LookAtType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ObjectType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ObjectType.id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ObjectType.targetId">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.longitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.latitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.altitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.range">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.rangeSpecified">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.tilt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LookAtType.altitudeMode">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.altitudeModeEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.altitudeModeEnum.clampToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.altitudeModeEnum.relativeToGround">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.altitudeModeEnum.absolute">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ReplaceType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ReplaceType.Item">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.DocumentType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ContainerType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.FeatureType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.visibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.open">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.address">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.phoneNumber">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.Snippet">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.description">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.LookAt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.Item">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.styleUrl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FeatureType.Region">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.DocumentType.Items1">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.FolderType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.FolderType.Items1">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.GroundOverlayType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.OverlayType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.OverlayType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OverlayType.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OverlayType.drawOrder">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OverlayType.Icon">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.GroundOverlayType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.GroundOverlayType.altitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.GroundOverlayType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.GroundOverlayType.LatLonBox">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.north">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.south">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.east">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.west">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonBoxType.rotation">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LinkType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LinkType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.href">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.refreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.refreshInterval">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.viewRefreshMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.viewRefreshTime">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.viewBoundScale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.viewFormat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinkType.httpQuery">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.refreshModeEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.refreshModeEnum.onChange">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.refreshModeEnum.onInterval">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.refreshModeEnum.onExpire">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.viewRefreshModeEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.viewRefreshModeEnum.never">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.viewRefreshModeEnum.onRequest">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.viewRefreshModeEnum.onStop">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.viewRefreshModeEnum.onRegion">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.IconType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconType.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconType.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconType.w">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconType.h">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.SnippetType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.SnippetType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.SnippetType.maxLines">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.SnippetType.Value">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.TimeSpanType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.TimePrimitiveType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.TimeSpanType.begin">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.TimeSpanType.end">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.TimeStampType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.TimeStampType.when">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.StyleType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.StyleSelectorType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.IconStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.LabelStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.LineStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.PolyStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.BalloonStyle">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleType.ListStyle">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ColorStyleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.ColorStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ColorStyleType.color">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ColorStyleType.colorMode">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType.scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType.Icon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconStyleType.hotSpot">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.IconStyleIconType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.IconStyleIconType.href">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.vec2Type">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.vec2Type.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.vec2Type.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.vec2Type.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.vec2Type.xunits">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.vec2Type.yunits">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.unitsEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.unitsEnum.fraction">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.unitsEnum.pixels">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.unitsEnum.insetPixels">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.colorModeEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.colorModeEnum.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.colorModeEnum.random">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LabelStyleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LabelStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LabelStyleType.scale">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LineStyleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LineStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LineStyleType.width">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.PolyStyleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.PolyStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolyStyleType.fill">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolyStyleType.outline">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.BalloonStyleType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.BalloonStyleType.Item">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.BalloonStyleType.ItemElementName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.BalloonStyleType.textColor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.BalloonStyleType.text">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ItemChoiceType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemChoiceType.bgColor">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemChoiceType.color">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ListStyleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.ListStyleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ListStyleType.listItemType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ListStyleType.bgColor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ListStyleType.ItemIcon">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.listItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.listItemTypeEnum.radioFolder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.listItemTypeEnum.check">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.listItemTypeEnum.checkHideChildren">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.listItemTypeEnum.checkOffOnly">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ItemIconType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ItemIconType.state">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ItemIconType.href">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.StyleMapType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleMapType.Pair">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.StyleMapPairType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleMapPairType.key">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.StyleMapPairType.styleUrl">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.styleStateEnum">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.styleStateEnum.normal">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.styleStateEnum.highlight">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.RegionType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.RegionType.LatLonAltBox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.RegionType.Lod">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LatLonAltBoxType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LatLonAltBoxType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonAltBoxType.minAltitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonAltBoxType.maxAltitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LatLonAltBoxType.altitudeMode">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LodType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LodType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LodType.minLodPixels">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LodType.maxLodPixels">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LodType.minFadeExtent">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LodType.maxFadeExtent">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType.refreshVisibility">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType.flyToView">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType.Item1">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkType.Item1ElementName">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.Item1ChoiceType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.Item1ChoiceType.Link">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.Item1ChoiceType.Url">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.PlacemarkType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PlacemarkType.Item1">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LineStringType">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.GeometryType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LineStringType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LineStringType.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LineStringType.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LineStringType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LineStringType.coordinates">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LinearRingType.coordinates">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ModelType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.ModelType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ModelType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ModelType.Location">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ModelType.Orientation">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ModelType.Scale">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ModelType.Link">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.LocationType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.LocationType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LocationType.longitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LocationType.latitude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.LocationType.altitude">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.OrientationType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.OrientationType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OrientationType.heading">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OrientationType.tilt">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.OrientationType.roll">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ScaleType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.ScaleType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScaleType.x">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScaleType.y">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScaleType.z">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.MultiGeometryType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.MultiGeometryType.Items">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.PointType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.PointType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PointType.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PointType.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PointType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PointType.coordinates">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.PolygonType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.extrude">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.tessellate">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.altitudeMode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.outerBoundaryIs">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.PolygonType.innerBoundaryIs">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.boundaryType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.boundaryType.LinearRing">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.overlayXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.screenXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.rotationXY">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.size">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ScreenOverlayType.rotation">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ChangeType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ChangeType.Items">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.ChangeType.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.BalloonStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Document">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Feature">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Folder">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Geometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.GroundOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Icon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.IconStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LabelStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LatLonBox">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LineString">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LineStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LinearRing">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Link">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.ListStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Location">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Lod">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.LookAt">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Model">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.MultiGeometry">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.NetworkLink">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Object">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Orientation">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Placemark">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Point">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.PolyStyle">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Polygon">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Region">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Scale">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.ScreenOverlay">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.Style">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.StyleMap">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.StyleSelector">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.TimePrimitive">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.TimeSpan">
            <remarks/>
        </member>
        <member name="F:OsmSharp.IO.Xml.Kml.v2_1.ItemsChoiceType.TimeStamp">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.DeleteType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.DeleteType.Items">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.CreateType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.CreateType.Folder">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.UpdateType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.UpdateType.targetHref">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.UpdateType.Items">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType">
            <remarks/>
        </member>
        <member name="M:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.#ctor">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.minRefreshPeriod">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.cookie">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.message">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.linkName">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.linkDescription">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.linkSnippet">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.expires">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.Update">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.NetworkLinkControlType.LookAt">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Kml.v2_1.KmlType">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.KmlType.NetworkLinkControl">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Kml.v2_1.KmlType.Item">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode.result">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode.addressparts">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode.timestamp">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode.attribution">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocode.querystring">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.place_id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.osm_type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.osm_id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.lon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeResult.Value">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.house_number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.road">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.suburb">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.city">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.county">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.state_district">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.state">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.postcode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.country">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.reversegeocodeAddressparts.country_code">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Reverse.v1.NewDataSet">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Reverse.v1.NewDataSet.Items">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument">
            <summary>
            Search document.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument._search_object">
            <summary>
            The actual search object.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument._source">
            <summary>
            The xml source this documents comes from.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument._version">
            <summary>
            Returns the search version.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.#ctor(OsmSharp.IO.Xml.IXmlSource)">
            <summary>
            Creates a new search document based on an xml source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.Save">
            <summary>
            Saves this search back to it's source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.Close">
            <summary>
            Closes this search document.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.IsReadOnly">
            <summary>
            Returns the readonly flag.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.Version">
            <summary>
            Returns the search version.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.SearchDocument.Search">
            <summary>
            Gets/Sets the search object.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Search.SearchVersion">
            <summary>
            The possible kml document versions.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Nominatim.Search.SearchVersion.Searchv1">
            <summary>
            Version 1
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Nominatim.Search.SearchVersion.Unknown">
            <summary>
            Uknown.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.place">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.timestamp">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.attribution">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.querystring">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.polygon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.exclude_place_ids">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresults.more_url">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.house_number">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.road">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.village">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.city">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.county">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.postcode">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.state_district">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.state">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.country">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.country_code">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.place_id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.osm_type">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.osm_id">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.boundingbox">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.polygonpoints">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.lat">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.lon">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.display_name">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.class">
            <remarks/>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.searchresultsPlace.type">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Nominatim.Search.v1.NewDataSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Nominatim.Search.v1.NewDataSet.Items">
            <remarks/>
        </member>
        <member name="T:OsmSharp.IO.Xml.Sources.XmlReaderSource">
            <summary>
            Class implementing an xml reader source.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Sources.XmlReaderSource._reader">
            <summary>
            The string source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlReaderSource.#ctor(System.Xml.XmlReader)">
            <summary>
            Creates a new xml reader source.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlReaderSource.GetReader">
            <summary>
            Returns an xml reader.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlReaderSource.GetWriter">
            <summary>
            Returns an xml writer.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlReaderSource.Close">
            <summary>
            Closes this source.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlReaderSource.IsReadOnly">
            <summary>
            Returns true if readonly.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlReaderSource.HasData">
            <summary>
            Returns true if contains data.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlReaderSource.Name">
            <summary>
            Returns the name of this source.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Sources.XmlStreamSource">
            <summary>
            XML stream source.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Sources.XmlStreamSource._stream">
            <summary>
            The reference to the file.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStreamSource.#ctor(System.IO.Stream)">
            <summary>
            Creates a new xml file source.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStreamSource.GetReader">
            <summary>
            Returns an xml reader.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStreamSource.GetWriter">
            <summary>
            Returns an xml writer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStreamSource.Close">
            <summary>
            Closes this file source.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlStreamSource.IsReadOnly">
            <summary>
            Returns true if this file source is readonly.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlStreamSource.HasData">
            <summary>
            Returns true if the file source has data.
            </summary>
        </member>
        <member name="T:OsmSharp.IO.Xml.Sources.XmlStringSource">
            <summary>
            Class implementing an xml source.
            </summary>
        </member>
        <member name="F:OsmSharp.IO.Xml.Sources.XmlStringSource._source">
            <summary>
            The string source.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStringSource.#ctor(System.String)">
            <summary>
            Creates a new xml string source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStringSource.GetReader">
            <summary>
            Returns an xml reader.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStringSource.GetWriter">
            <summary>
            Returns an xml writer.
            </summary>
        </member>
        <member name="M:OsmSharp.IO.Xml.Sources.XmlStringSource.Close">
            <summary>
            Closes this source.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlStringSource.IsReadOnly">
            <summary>
            Returns true if this source is readonly.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlStringSource.HasData">
            <summary>
            Returns true if this source has data.
            </summary>
        </member>
        <member name="P:OsmSharp.IO.Xml.Sources.XmlStringSource.Name">
            <summary>
            Returns the name of this source.
            </summary>
        </member>
        <member name="T:OsmSharp.Logging.Log">
            <summary>
            Logging class.
            </summary>
        </member>
        <member name="F:OsmSharp.Logging.Log._source">
            <summary>
            Holds the tracesource.
            </summary>
        </member>
        <member name="F:OsmSharp.Logging.Log._loggingEnabled">
            <summary>
            Holds the logging enabled flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Logging.Log._ignore">
            <summary>
            Holds the sources to ignore.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.Disable">
            <summary>
            Disables all logging.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.Enable">
            <summary>
            Enables all logging.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.ClearIgnore">
            <summary>
            Clears the ignore list.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.Ignore(System.String)">
            <summary>
            Adds the given name to the ignore list.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:OsmSharp.Logging.Log.DontIgnore(System.String)">
            <summary>
            Removes the given name from the ignore list.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:OsmSharp.Logging.Log._whitelist">
            <summary>
            Holds the sources to whitelist.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.ClearWhitelist">
            <summary>
            Clears the whitelist.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.Log.AddToWhiteList(System.String)">
            <summary>
            Adds the given name to the logging whitelist.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:OsmSharp.Logging.Log.RemoveFromWhiteList(System.String)">
            <summary>
            Removes the given name from the loggin whitelist.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:OsmSharp.Logging.Log.ReportAbout(System.String)">
            <summary>
            Returns true if the events with the given name need to be reported.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:OsmSharp.Logging.Log.TraceEvent(System.String,OsmSharp.Logging.TraceEventType,System.String)">
            <summary>
            Writes a trace event message.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="message"></param>
        </member>
        <member name="M:OsmSharp.Logging.Log.TraceEvent(System.String,OsmSharp.Logging.TraceEventType,System.String,System.Object[])">
            <summary>
            Writes a trace event message.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:OsmSharp.Logging.Log.RegisterListener(OsmSharp.Logging.TraceListener)">
            <summary>
            Registers a trace listener.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="T:OsmSharp.Logging.SourceLevels">
            <summary>
            Represents different source levels.
            </summary>
        </member>
        <member name="T:OsmSharp.Logging.TraceEventType">
            <summary>
            Represents different types of trace events.
            </summary>
        </member>
        <member name="T:OsmSharp.Logging.TraceListener">
            <summary>
            Abstract representation of a trace listener.
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.TraceListener.Write(System.String)">
            <summary>
            Writes the given message to the console.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:OsmSharp.Logging.TraceListener.WriteLine(System.String)">
            <summary>
            Writes the given message to the console.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:OsmSharp.Logging.TraceSource">
            <summary>
            Compatibility class with .NET to use the tracing facilities. 
            </summary>
        </member>
        <member name="M:OsmSharp.Logging.TraceSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:System.Diagnostics.TraceSource"/> class.
            </summary>
            <param name="name">Name.</param>
        </member>
        <member name="M:OsmSharp.Logging.TraceSource.#ctor(System.String,OsmSharp.Logging.SourceLevels)">
            <summary>
            Initializes a new instance of the <see cref="!:System.Diagnostics.TraceSource"/> class.
            </summary>
            <param name="name">Name.</param>
            <param name="level">Level.</param>
        </member>
        <member name="M:OsmSharp.Logging.TraceSource.TraceEvent(OsmSharp.Logging.TraceEventType,System.Int32,System.String)">
            <summary>
            Traces an event.
            </summary>
            <param name="type"></param>
            <param name="id"></param>
            <param name="message"></param>
        </member>
        <member name="M:OsmSharp.Logging.TraceSource.WriteLine(System.String)">
            <summary>
            Writes the message to all listeners.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:OsmSharp.Logging.TraceSource.TraceEvent(OsmSharp.Logging.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>
            Traces an event.
            </summary>
            <param name="type"></param>
            <param name="id"></param>
            <param name="messageWithParams"></param>
            <param name="args"></param>
        </member>
        <member name="P:OsmSharp.Logging.TraceSource.Listeners">
            <summary>
            The list of listeners.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3">
            <summary>
            Interface abstracting the fitness calculation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3.Fitness(`1,OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Executes a fitness calculation.
            </summary>
            <param name="problem"></param>
            <param name="individual"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3.Fitness(`1,OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2},System.Boolean)">
            <summary>
            Executes a fitness calculation.
            </summary>
            <param name="problem"></param>
            <param name="individual"></param>
            <param name="validate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3.Fitness(`1,`0)">
            <summary>
            Executes a fitness calculation.
            </summary>
            <param name="problem"></param>
            <param name="genomes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3.AverageFitness(`1,System.Collections.Generic.IEnumerable{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}})">
            <summary>
            Calculates the average fitness.
            </summary>
            <param name="problem"></param>
            <param name="population"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator`3.Epsilon">
            <summary>
            Returns the margin of error in the fitness calculation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Individual`3">
            <summary>
            Class representing an individual in the population.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.#ctor(`0)">
            <summary>
            Creates a new individual.
            </summary>
            <param name="genomes"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.#ctor(System.Boolean,`2)">
            <summary>
            Creates a new individual.
            </summary>
            <param name="fitness_calculated"></param>
            <param name="fitness"></param>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Individual`3._genomes">
            <summary>
            Holds the list for genomes in this individual.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Individual`3._fitness">
            <summary>
            Hold the fitness if calculated.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Individual`3._fitness_calculated">
            <summary>
            Flag indication if the fitness was calculated or not.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.CalculateFitness(`1,OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2})">
            <summary>
            Calculates the fitness for this individual.
            </summary>
            <param name="problem"></param>
            <param name="op"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.CalculateFitness(`1,OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2},System.Boolean)">
            <summary>
            Calculates the fitness for this individual.
            </summary>
            <param name="op"></param>
            <param name="problem"></param>
            <param name="validate"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.CalculateFitness(`2)">
            <summary>
            Calculates fitness.
            </summary>
            <param name="fitness"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.op_Equality(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Operator returning true if the two given individuals are genetically identical.
            </summary>
            <param name="i1"></param>
            <param name="i2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.op_Inequality(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Operator returning false if the individuals are genetically different.
            </summary>
            <param name="i1"></param>
            <param name="i2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.Equals(System.Object)">
            <summary>
            Returns true if the given individual is genetically identical to this one.
            </summary>
            <param name="individual"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.GetHashCode">
            <summary>
            Returns a hashcode for this individual based on it's genomes only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.ToString">
            <summary>
            Returns a description of this individual.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Individual`3.Validate(`1)">
            <summary>
            Validates.
            </summary>
            <param name="problem"></param>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Individual`3.Description">
            <summary>
            The description of this individual.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Individual`3.Genomes">
            <summary>
            Returns the genomes of this individual.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Individual`3.FitnessCalculated">
            <summary>
            Returns true if the fitness was already calculated.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Individual`3.Fitness">
            <summary>
            Returns the fitness.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.IProblem">
            <summary>
            An interface describing the problem to be solved.
            
            Problem-specific functions can be implemented in the operators, selectors and fitness calculations using this class as a generic parameter.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Operations.CombinedMutation`3">
            <summary>
            A combined mutation.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Operations.IMutationOperation`3">
            <summary>
            Interface abstracting the usage of a specific mutation implementation.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Operations.IMutationOperation`3.Mutate(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Executes a mutation operation.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Operations.IMutationOperation`3.Name">
            <summary>
            Returns the name.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Operations.CombinedMutation`3.#ctor(OsmSharp.Math.Random.IRandomGenerator,System.Collections.Generic.IList{OsmSharp.Math.AI.Genetic.Operations.IMutationOperation{`0,`1,`2}},System.Collections.Generic.IList{System.Double})">
            <summary>
            Creates a new combined mutation.
            </summary>
            <param name="generator"></param>
            <param name="operations"></param>
            <param name="probabilities"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Operations.CombinedMutation`3.Mutate(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Executes the mutation.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Operations.CombinedMutation`3.Probabilities">
            <summary>
            Returns the probabilities.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Operations.CombinedMutation`3.Name">
            <summary>
            The name of this mutation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation`3">
            <summary>
            Interface abstracting the implementation of crossing over individuals.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation`3.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Executes a cross-over using the two given parents.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation`3.Name">
            <summary>
            Returns the name.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation`3">
            <summary>
            Interface abstracting the implementation of the generation of new individuals.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation`3.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2})">
            <summary>
            Executes the generation of a new individual.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation`3.Name">
            <summary>
            Returns the name.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Operations.IOperation`3">
            <summary>
            Interface abstracting the usage of mutation and cross over operations.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Population`3">
            <summary>
            A class representing a population of individuals.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Population`3._accept_twins">
            <summary>
            Flag telling the population to accept twins or not.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Population`3._individuals">
            <summary>
            Holds the individuals in this population.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.#ctor(System.Boolean)">
            <summary>
            Initializes a new population.
            </summary>
            <param name="accept_twins"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}},System.Boolean)">
            <summary>
            Initializes a new population.
            </summary>
            <param name="individuals"></param>
            <param name="accept_twins"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.Sort(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2})">
            <summary>
            Sorts the population according to 
            </summary>
            <param name="solver"></param>
            <param name="op"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.Add(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Adds the individual to this population.
            </summary>
            <param name="individual"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.AddRange(System.Collections.Generic.IEnumerable{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}})">
            <summary>
            Adds the individuals of the specified collection to the end of the population.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the population.The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.GetRange(System.Int32,System.Int32)">
            <summary>
            Creates a shallow copy of a range of elements in the source population.
            </summary>
            <param name="index">The zero-based population index at which the range</param>
            <param name="count">The number of elements in the range.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.Contains(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Returns true if the individual is contained in the population.
            </summary>
            <param name="individual"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.RemoveAt(System.Int32)">
            <summary>
            Removes the individual at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Population`3.Item(System.Int32)">
            <summary>
            Returns the element at the given index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Population`3.Count">
            <summary>
            Returns then number of individuals in this population.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Population`3.FitnessComparer">
            <summary>
            Class used to compare individuals using their fitness.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Population`3.FitnessComparer._op">
            <summary>
            Hold the operator.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Population`3.FitnessComparer._solver">
            <summary>
            Holds the solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.FitnessComparer.#ctor(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2})">
            <summary>
            Creates a new fitness operator.
            </summary>
            <param name="solver"></param>
            <param name="op"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Population`3.FitnessComparer.Compare(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2},OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Compare two individuals based on fitness.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Population`3.EnumeratorGeneric">
            <summary>
            Enumeration class specific for a population like this.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Selectors.ISelector`3">
            <summary>
            Interface abstracting the implementation of selection of individuals.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Selectors.ISelector`3.Select(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Population{`0,`1,`2},System.Collections.Generic.ICollection{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}})">
            <summary>
            Selects an individual from the population to use for cross-over.
            </summary>
            <param name="solver"></param>
            <param name="population"></param>
            <param name="do_not_select_list"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Selectors.RandomSelector`3">
            <summary>
            A selector to select random individuals from a population.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Selectors.RandomSelector`3.Select(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Population{`0,`1,`2},System.Collections.Generic.ICollection{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}})">
            <summary>
            Selects an individual from the given population.
            </summary>
            <param name="solver"></param>
            <param name="population"></param>
            <param name="do_not_select_list"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Selectors.TournamentBasedSelector`3">
            <summary>
            A selector selecting individial using a tournament base selection.
            </summary>
            <typeparam name="GenomeType"></typeparam>
            <typeparam name="ProblemType"></typeparam>
            <typeparam name="WeightType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Selectors.TournamentBasedSelector`3.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new tournament base selector.
            </summary>
            <param name="tournament_size"></param>
            <param name="tournament_probility"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Selectors.TournamentBasedSelector`3.Select(OsmSharp.Math.AI.Genetic.Solvers.Solver{`0,`1,`2},OsmSharp.Math.AI.Genetic.Population{`0,`1,`2},System.Collections.Generic.ICollection{OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2}})">
            <summary>
            Selects an individual from the given population.
            </summary>
            <param name="solver"></param>
            <param name="population"></param>
            <param name="do_not_select_list"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Solvers.Solver`3">
            <summary>
            Class implementing the main flow of any genetic algorithm.
                - selection
                - cross-over
                - mutation
            by using operators for each of these steps.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._settings">
            <summary>
            Settings used in this solver.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._selector">
            <summary>
            Selector used to select individuals for cross-over.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._crossOverOperation">
            <summary>
            Operation used to cross over individuals.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._mutation_operation">
            <summary>
            Operation used to cross over individuals.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._generation_operation">
            <summary>
            Operation used to generate individuals.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._fitness_calculator">
            <summary>
            Holds the fitness calculator.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._random">
            <summary>
            The random number generator.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._problem">
            <summary>
            The problem being solved.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._accept_only_better_on_mutation">
            <summary>
            Flag indicating what individuals to accept.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3._accept_only_better_on_cross_over">
            <summary>
            Flag indicating what individuals to accept.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.fittest">
            <summary>
            The fittest solution found so far.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.#ctor(`1,OsmSharp.Math.AI.Genetic.Solvers.SolverSettings,OsmSharp.Math.AI.Genetic.Selectors.ISelector{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.IMutationOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="problem"></param>
            <param name="settings"></param>
            <param name="selector"></param>
            <param name="mutation"></param>
            <param name="cross_over"></param>
            <param name="generation"></param>
            <param name="fitness_calculator"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.#ctor(`1,OsmSharp.Math.AI.Genetic.Solvers.SolverSettings,OsmSharp.Math.AI.Genetic.Selectors.ISelector{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.IMutationOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2},System.Boolean,System.Boolean)">
            <summary>
            Creates a new solver.
            </summary>
            <param name="problem"></param>
            <param name="settings"></param>
            <param name="selector"></param>
            <param name="mutation"></param>
            <param name="cross_over"></param>
            <param name="generation"></param>
            <param name="fitness_calculator"></param>
            <param name="accept_only_better_cross_over"></param>
            <param name="accept_only_better_mutation"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.#ctor(`1,OsmSharp.Math.AI.Genetic.Solvers.SolverSettings,OsmSharp.Math.AI.Genetic.Selectors.ISelector{`0,`1,`2},OsmSharp.Math.AI.Genetic.Operations.IOperation{`0,`1,`2},OsmSharp.Math.AI.Genetic.Fitness.IFitnessCalculator{`0,`1,`2})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="settings"></param>
            <param name="selector"></param>
            <param name="combined_operation"></param>
            <param name="problem"></param>
            <param name="fitness_calculator"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Start(OsmSharp.Math.AI.Genetic.Population{`0,`1,`2})">
            <summary>
            Start the solver with an initial population.
            </summary>
            <param name="initial"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.CreateGenerationOperation">
            <summary>
            Creates a generation operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.CreateMutationOperation">
            <summary>
            Creates a mutation operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.CreateCrossoverOperation">
            <summary>
            Creates a crossover operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.NextGeneration(OsmSharp.Math.AI.Genetic.Population{`0,`1,`2})">
            <summary>
            Calculates/generates a next generation based on the given one.
            </summary>
            <param name="population"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.RaiseNewFittest(OsmSharp.Math.AI.Genetic.Individual{`0,`1,`2})">
            <summary>
            Raises the new fittest event.
            </summary>
            <param name="individual"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.RaiseNewGeneration(System.Int32,System.Int32,OsmSharp.Math.AI.Genetic.Population{`0,`1,`2})">
            <summary>
            Raises the new generation event.
            </summary>
            <param name="generation"></param>
            <param name="stagnation_count"></param>
            <param name="population"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.ReportNew(System.String,System.Int32,System.Int32)">
            <summary>
            Reports a new message.
            </summary>
            <param name="message"></param>
            <param name="current"></param>
            <param name="max"></param>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Stop">
            <summary>
            Stops the solver.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Random">
            <summary>
            The random number generator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Problem">
            <summary>
            Returns the problem being solved.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Fittest">
            <summary>
            Returns the problem being solved.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Cancelled">
            <summary>
            Gets/Sets the cancelled boolean.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Setting">
            <summary>
            Returns the settings this solver is using.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Selector">
            <summary>
            Returns the selector this solver is using.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.MutationOperator">
            <summary>
            Returns the mutation operator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.CrossOverOperator">
            <summary>
            Returns the cross over operator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.GenerationOperator">
            <summary>
            Returns the generation operator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.FitnessCalculator">
            <summary>
            Returns the fitness calculator.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.NewFittest">
            <summary>
            New fittest event.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.NewGeneration">
            <summary>
            New generation event.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.ProgressReporter">
            <summary>
            Gets/Sets a progress reporter acception updates from this solver.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.Stopped">
            <summary>
            Returns true if the solver has stopped.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.NewFittestDelegate">
            <summary>
            New fittest delegate for the new fittest event.
            </summary>
            <param name="individual"></param>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Solvers.Solver`3.NewGenerationDelegate">
            <summary>
            New generation delegate for the new generation event.
            </summary>
            <param name="generation"></param>
            <param name="stagnation_count"></param>
            <param name="population"></param>
        </member>
        <member name="T:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings">
            <summary>
            Holds settings used by the solver class.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.#ctor(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Creates new solver settings.
            </summary>
            <param name="stagnation_count"></param>
            <param name="population_size"></param>
            <param name="max_generations"></param>
            <param name="elitism_percentage"></param>
            <param name="cross_percentage"></param>
            <param name="mutation_percentage"></param>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.StagnationCount">
            <summary>
            Returns the stagnation count.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.PopulationSize">
            <summary>
            Returns the population size used.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.MaxGeneration">
            <summary>
            Returns the maximum number of generations.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.ElitismPercentage">
            <summary>
            Returns the elitism percentage used.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.CrossOverPercentage">
            <summary>
            Returns the cross over percentage used.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.AI.Genetic.Solvers.SolverSettings.MutationPercentage">
            <summary>
            Returns the mutation percentage used.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Algorithms.ConvexHull">
            <summary>
            A convex hull algorithm implementation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.ConvexHull.Calculate(System.Collections.Generic.IList{OsmSharp.Math.Primitives.PointF2D})">
            <summary>
            Calculates a polygon out of a list of points. The resulting polygon the convex hull of all points.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Algorithms.Rotation">
            <summary>
            Holds simple rotation algorithms.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.Rotation.RotateAroundPoint(OsmSharp.Units.Angle.Radian,OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Rotates a point around another around point with a given angle clockwise.
            </summary>
            <returns>The around point.</returns>
            <param name="angle">Angle.</param>
            <param name="center">Center.</param>
            <param name="point">Point.</param>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.Rotation.RotateAroundPoint(OsmSharp.Units.Angle.Radian,OsmSharp.Math.Primitives.PointF2D,OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Rotates a set of points around another around point with a given angle clockwise.
            </summary>
            <returns>The around point.</returns>
            <param name="angle">Angle.</param>
            <param name="center">Center.</param>
            <param name="points">Points.</param>
        </member>
        <member name="T:OsmSharp.Math.Algorithms.SimplifyCurve">
            <summary>
            Contains an algorithm to simplify a curve based on the Ramer–Douglas–Peucker algorithm.
            
            http://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.SimplifyCurve.Simplify(OsmSharp.Math.Primitives.PointF2D[],System.Double)">
            <summary>
            Simplify the specified points using epsilon.
            </summary>
            <param name="points">Points.</param>
            <param name="epsilon">Epsilon.</param>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.SimplifyCurve.SimplifyBetween(OsmSharp.Math.Primitives.PointF2D[],System.Double,System.Int32,System.Int32)">
            <summary>
            Simplify the specified points using epsilon.
            </summary>
            <param name="points">Points.</param>
            <param name="epsilon">Epsilon.</param>
            <param name="first">First.</param>
            <param name="last">Last.</param>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.SimplifyCurve.Simplify(System.Double[][],System.Double)">
            <summary>
            Simplify the specified points using epsilon.
            </summary>
            <param name="points">Points.</param>
            <param name="epsilon">Epsilon.</param>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.SimplifyCurve.SimplifyBetween(System.Double[][],System.Double,System.Int32,System.Int32)">
            <summary>
            Simplify the specified points using epsilon.
            </summary>
            <param name="points">Points.</param>
            <param name="epsilon">Epsilon.</param>
            <param name="first">First.</param>
            <param name="last">Last.</param>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.SimplifyCurve.SimplifyPolygon(System.Double[][],System.Double)">
            <summary>
            Simplify the specified points using epsilon value.
            </summary>
            <param name="points"></param>
            <param name="epsilon"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Algorithms.Tessellation.LineairRingTessellator">
            <summary>
            A tessellator for LineairRings.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Algorithms.Tessellation.LineairRingTessellator.Tessellate(OsmSharp.Geo.Geometries.LineairRing)">
            <summary>
            Tessellates the given LineairRings.
            </summary>
            <param name="ring"></param>
            <returns>A list of coordinates grouped per three.</returns>
        </member>
        <member name="T:OsmSharp.Math.ILocationObject">
            <summary>
            An object that represents a location.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.ILocationObject.Location">
            <summary>
            Returns the location of this object.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.ITaggedObject">
            <summary>
            Represents an object that can be tagged with key-value pairs of strings.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.ITaggedObject.Tags">
            <summary>
            The tags list.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Enumerators.Points.LineEnumerable">
            <summary>
            An enurable for a line.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.LineEnumerable.GetEnumerator">
            <summary>
            Creates the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.LineEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Creates the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Lines.LineEnumerator._enumerable">
            <summary>
            Holds the enumerable being enumerated.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Lines.LineEnumerator._current_line">
            <summary>
            Holds the current line.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Lines.LineEnumerator._current_idx">
            <summary>
            Holds the current index.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Lines.LineEnumerator.#ctor(OsmSharp.Math.Primitives.Enumerators.Lines.ILineList)">
            <summary>
            Creates a new enumerator.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Lines.LineEnumerator.Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerable">
            <summary>
            An enumerable for a point.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerable.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator">
            <summary>
            Enumerator class for any collection if points implementing IPointEnumerable.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator._enumerable">
            <summary>
            Holds the enumerable being enumerated.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator._current_point">
            <summary>
            Holds the current point.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator._current_idx">
            <summary>
            Holds the current index.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.#ctor(OsmSharp.Math.Primitives.Enumerators.Points.IPointList)">
            <summary>
            Creates a new enumerator.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.Dispose">
            <summary>
            Disposes of this object.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.MoveNext">
            <summary>
            Move to the next point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Move to the next point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.Current">
            <summary>
            Returns the current points.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.Enumerators.Points.PointEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current point.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.LinePointPosition">
            <summary>
            The line-point positions.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LinePointPosition.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LinePointPosition.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.LinePointPosition.On">
            <summary>
            On.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.PolygonF2D">
            <summary>
            Represents a polyfon.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.PolygonF2D._points">
            <summary>
            Holds the array of points representing this polygon.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.#ctor(System.Collections.Generic.IList{OsmSharp.Math.Primitives.PointF2D})">
            <summary>
            Creates a new polygon.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.#ctor(OsmSharp.Math.Primitives.PointF2D[])">
            <summary>
            Creates a new polygon.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Math.Primitives.PointF2D})">
            <summary>
            Creates a new polygon.
            </summary>
            <param name="points"></param>
        </member>
        <member name="F:OsmSharp.Math.Primitives.PolygonF2D._bounding_box">
            <summary>
            Holds the bounding box for this polygon.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance from the given point to this polygon.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.IsInside(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if the point is inside of the polygon.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.PolygonF2D.Intersections(OsmSharp.Math.Primitives.LineF2D)">
            <summary>
            Returns all the intersections the line has with this polygon.
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.Item(System.Int32)">
            <summary>
            Returns the point at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.Count">
            <summary>
            Returns the number of points in this list.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.BoundingBox">
            <summary>
            Returns the bouding box around this polygon.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.OsmSharp#Math#Primitives#Enumerators#Lines#ILineList#Count">
            <summary>
            Returns the number of lines in this polygon.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.OsmSharp#Math#Primitives#Enumerators#Lines#ILineList#Item(System.Int32)">
            <summary>
            Returns the line at the given idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.LineEnumerator">
            <summary>
            Returns the line enumerator.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.PolygonF2D.PointEnumerator">
            <summary>
            Returns the point enumerator.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Primitives.Polyline2D">
            <summary>
            A polyline.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Polyline2D.Length(System.Double[],System.Double[])">
            <summary>
            Calculates the length of the given polyline.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.Polyline2D.PositionAtPosition(System.Double[],System.Double[],System.Double)">
            <summary>
            Returns a position on the given polyline corresponding with the given position. (0 smaller than position smaller than polyline.lenght).
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Primitives.RectangleF2D">
            <summary>
            Represents a rectangle.
            </summary>
            <remarks>This is not a Rectangle in the traditional sense, this rectangle can be tilted.</remarks>
        </member>
        <member name="F:OsmSharp.Math.Primitives.RectangleF2D._vectorX">
            <summary>
            Holds the vector of the direction of the rectangle relative to the x-axis and it's size is the 'width' along this direction.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Primitives.RectangleF2D._vectorY">
            <summary>
            Holds the vector of the direction of the rectangle relative to the y-axis and it's size is the 'height' along this direction.
            </summary>
            <remarks>Both directional vectors are stored for performance reasons.</remarks>
        </member>
        <member name="F:OsmSharp.Math.Primitives.RectangleF2D._bottomLeft">
            <summary>
            Holds the bottom left point of the rectangle.
            </summary>
            <remarks>The other corners can be calculate using the directional vectors.</remarks>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/> class.
            </summary>
            <param name="x">The x coordinate of the bottom-left corner.</param>
            <param name="y">The y coordinate of the bottom-left corner.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <remarks>This creates a rectangle in the direction of the x- and y-axis, performance is almost always better when using <see cref="T:OsmSharp.Math.Primitives.BoxF2D"/> in this case.</remarks>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.#ctor(System.Double,System.Double,System.Double,System.Double,OsmSharp.Units.Angle.Degree)">
            <summary>
            Initializes a new instance of the <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/> class.
            </summary>
            <param name="x">The x coordinate of the bottom-left corner.</param>
            <param name="y">The y coordinate of the bottom-left corner.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="angleY">The angle relative to the y-axis.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.#ctor(System.Double,System.Double,System.Double,System.Double,OsmSharp.Math.VectorF2D)">
            <summary>
            Initializes a new instance of the <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="directionY">Direction y.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.#ctor(OsmSharp.Math.Primitives.PointF2D,System.Double,System.Double,OsmSharp.Math.VectorF2D)">
            <summary>
            Initializes a new instance of the <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/> class.
            </summary>
            <param name="bottomLeft">Bottom left.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="directionY">Direction y.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.FromBoundsAndCenter(System.Double,System.Double,System.Double,System.Double,OsmSharp.Units.Angle.Degree)">
            <summary>
            Creates a new RectangleF2D from given bounds, center and angle.
            </summary>
            <param name="centerX"></param>
            <param name="centerY"></param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="angleY">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.FromBoundsAndCenter(System.Double,System.Double,System.Double,System.Double,OsmSharp.Math.VectorF2D)">
            <summary>
            Creates a new RectangleF2D from given bounds, center and direction.
            </summary>
            <param name="centerX"></param>
            <param name="centerY"></param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="directionY">The direction of the y-axis.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Fit(OsmSharp.Math.Primitives.PointF2D[],System.Double)">
            <summary>
            Fits this rectangle to the given points.
            </summary>
            <param name="points">The points to wrap the rectangle around.</param>
            <param name="percentage">The margin in percentage.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.FitAndKeepAspectRatio(OsmSharp.Math.Primitives.PointF2D[],System.Double)">
            <summary>
            Fits this rectangle to this given points and keeps aspect ratio.
            </summary>
            <param name="points"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Contains(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Returns true if this box contains the specified x, y.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Contains(System.Double,System.Double)">
            <summary>
            Returns true if this box contains the specified x, y.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Overlaps(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns true if this rectangle overlaps with the given box.
            </summary>
            <param name="box">Box.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Overlaps(OsmSharp.Math.Primitives.RectangleF2D)">
            <summary>
            Returns true if this rectangle overlaps with the given box.
            </summary>
            <param name="rectangle">Rectangle.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.RotateAroundCenter(OsmSharp.Units.Angle.Degree)">
            <summary>
            Rotates this rectangle around it's center point with a given angle in clockwise direction.
            </summary>
            <returns>The around center.</returns>
            <param name="angle">Angle.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.RotateAround(OsmSharp.Units.Angle.Degree,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Rotates this rectangle around the given center point with a given angle in clockwise direction.
            </summary>
            <returns>The around.</returns>
            <param name="angle">Angle.</param>
            <param name="center">Center.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformFrom(System.Double,System.Double,System.Boolean,System.Boolean,System.Double[])">
            <summary>
            Transforms the given coordinates to the coordinate system this rectangle is defined in.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="coordinates">The coordinates to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformFrom(System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Transforms the given coordinates to the coordinate system this rectangle is defined in.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="x">The x-coordinates to transform.</param>
            <param name="y">The y-coordinates to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformFrom(System.Double,System.Double,System.Boolean,System.Boolean,System.Double[],System.Double[])">
            <summary>
            Transforms the given coordinates to the coordinate system this rectangle is defined in.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="x">The x-coordinates to transform.</param>
            <param name="y">The y-coordinates to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,System.Double[])">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="coordinates">The coordinates to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="x">The x-coordinate to transform.</param>
            <param name="y">The y-coordinate to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Double[])">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,System.Double[],System.Double[])">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
            <param name="width">The width of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="height">The height of the rectangle in the coordinate system of the given coordinates.</param>
            <param name="reverseX">Assumes that the origin of the x-axis is on the top of this rectangle if false.</param>
            <param name="reverseY">Assumes that the origin of the y-axis is on the right of this rectangle if false.</param>
            <param name="x">The x-coordinate to transform.</param>
            <param name="y">The y-coordinate to transform.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,OsmSharp.Math.Primitives.PointF2D,System.Double[])">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
            <param name="reverseX">If set to <c>true</c> reverse x.</param>
            <param name="reverseY">If set to <c>true</c> reverse y.</param>
            <param name="point">Point.</param>
            <param name="transformed">Transformed.</param>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.TransformTo(System.Double,System.Double,System.Boolean,System.Boolean,OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Transforms the given the coordinates to a coordinate system defined inside this rectangle.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Distance(OsmSharp.Math.Primitives.PointF2D)">
            <summary>
            Calculates the distance of this primitive to the given point.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/>.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OsmSharp.Math.Primitives.RectangleF2D.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:OsmSharp.Math.Primitives.RectangleF2D"/> object.
            </summary>
            <returns>A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a
            hash table.</returns>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.BottomLeft">
            <summary>
            Gets the bottom left.
            </summary>
            <value>The bottom left.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.TopLeft">
            <summary>
            Gets the top left.
            </summary>
            <value>The top left.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.BottomRight">
            <summary>
            Gets the bottom right.
            </summary>
            <value>The bottom right.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.TopRight">
            <summary>
            Gets the top right.
            </summary>
            <value>The top right.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.Center">
            <summary>
            Gets the center.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.Angle">
            <summary>
            Gets the angle.
            </summary>
            <value>The angle.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.BoundingBox">
            <summary>
            Returns the bouding box around this rectangle.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.DirectionX">
            <summary>
            Gets the direction x.
            </summary>
            <value>The direction x.</value>
        </member>
        <member name="P:OsmSharp.Math.Primitives.RectangleF2D.DirectionY">
            <summary>
            Gets the direction y.
            </summary>
            <value>The direction y.</value>
        </member>
        <member name="T:OsmSharp.Math.Random.IRandomGenerator">
            <summary>
            A representation of generic random generator functions
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Random.IRandomGenerator.Generate(System.Int32)">
            <summary>
            Generates a random integer
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Random.IRandomGenerator.Generate(System.Double)">
            <summary>
            Generates a random double
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Random.IRandomGenerator.Generate(System.Byte[])">
            <summary>
            Sets the seed of the static generator.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:OsmSharp.Math.Random.RandomGenerator">
            <summary>
            Random number generator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Random.RandomGenerator.#ctor">
            <summary>
            Creates a new random generator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Random.RandomGenerator.#ctor(System.Int32)">
            <summary>
            Creates a new random generator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Random.RandomGenerator.Generate(System.Int32)">
            <summary>
            Generates a random number.
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Random.RandomGenerator.Generate(System.Double)">
            <summary>
            Generates a random number.
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Random.RandomGenerator.Generate(System.Byte[])">
            <summary>
            Fills the elements of a specified array of bytes with random numbers.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:OsmSharp.Math.Random.StaticRandomGenerator">
            <summary>
            A static random generator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Random.StaticRandomGenerator.Get">
            <summary>
            Returns a random number generator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Random.StaticRandomGenerator.Set(System.Int32)">
            <summary>
            Sets the seed of the static generator.
            </summary>
            <param name="seed"></param>
        </member>
        <member name="T:OsmSharp.Math.Automata.FiniteStateMachine`1">
            <summary>
            Class representing a finite-state machine consuming objects representing events.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Automata.FiniteStateMachine`1._consumed_events">
            <summary>
            Keeps a list of already consumed event since the latest reset.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Automata.FiniteStateMachine`1._current_state">
            <summary>
            Keeps the current state of this machine.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Automata.FiniteStateMachine`1._initial_state">
            <summary>
            Keeps the initial state of this machine.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.#ctor(OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Creates a new finite state machine.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.Consume(`0)">
            <summary>
            Consumes the given event.
            </summary>
            <param name="even"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.Reset">
            <summary>
            Resets this machine.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.NotifyConsumption(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0},OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Notify listeners an event was consumed.
            </summary>
            <param name="even"></param>
            <param name="new_state"></param>
            <param name="old_state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.RaiseConsumptionEvent(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0},OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Raizes the comsumption event.
            </summary>
            <param name="even"></param>
            <param name="newState"></param>
            <param name="old_state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.NotifyFinalState(System.Collections.Generic.IList{`0})">
            <summary>
            Notify listeners when a final state has been reached.
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.RaiseFinalStateEvent(System.Collections.Generic.IList{`0})">
            <summary>
            Raizes the final state event.
            </summary>
            <param name="events"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.NotifyReset(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            
            </summary>
            <param name="even"></param>
            <param name="state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.RaiseResetEvent(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Raises the reset event.
            </summary>
            <param name="even"></param>
            <param name="state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.NotifyStateTransition(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Notify listeners when a state transition occured.
            </summary>
            <param name="even"></param>
            <param name="state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.RaiseStateTransitionEvent(`0,OsmSharp.Math.StateMachines.FiniteStateMachineState{`0})">
            <summary>
            Raizes the state transition event.
            </summary>
            <param name="even"></param>
            <param name="state"></param>
        </member>
        <member name="M:OsmSharp.Math.Automata.FiniteStateMachine`1.ToString">
            <summary>
            Returns a description of this machine.
            </summary>
            <returns></returns>
        </member>
        <member name="E:OsmSharp.Math.Automata.FiniteStateMachine`1.ConsumptionEvent">
            <summary>
            Event raised when an event is consumed.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.Automata.FiniteStateMachine`1.FinalStateEvent">
            <summary>
            Event raised when a final state has been reached.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.Automata.FiniteStateMachine`1.ResetEvent">
            <summary>
            Event raised when a reset occured.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.Automata.FiniteStateMachine`1.StateTransitionEvent">
            <summary>
            Event raised when a state transition occured.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Automata.FiniteStateMachine`1.EventStateDelegate">
            <summary>
            Delegate containing an event object and it's associated state.
            </summary>
            <param name="even"></param>
            <param name="state"></param>
        </member>
        <member name="T:OsmSharp.Math.Automata.FiniteStateMachine`1.EventStatesDelegate">
            <summary>
            Delegate containing an event object and it's associated state.
            </summary>
            <param name="even"></param>
            <param name="new_state"></param>
            <param name="old_state"></param>
        </member>
        <member name="T:OsmSharp.Math.Automata.FiniteStateMachine`1.EventsDelegate">
            <summary>
            Delegate containing an event object list.
            </summary>
            <param name="events"></param>
        </member>
        <member name="T:OsmSharp.Math.StateMachines.FiniteStateMachineState`1">
            <summary>
            Represents a state in a finite-state machine.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.ToString">
            <summary>
            Returns a description of this state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.Generate(System.Int32)">
            <summary>
            Generates an amount of states.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.Id">
            <summary>
            The unique id.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.Outgoing">
            <summary>
            The list of possible outgoing transition.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.Final">
            <summary>
            Boolean representing if the state is final.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineState`1.ConsumeAll">
            <summary>
            Boolean representing if this state consumes event even if there is no outgoing transition.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1">
            <summary>
            Represents a transition in a finite-state machine.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Match(OsmSharp.Math.Automata.FiniteStateMachine{`0},System.Object)">
            <summary>
            Returns true if the given event triggers a response in this transition.
            </summary>
            <param name="machine"></param>
            <param name="even"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Generate(System.Collections.Generic.List{OsmSharp.Math.StateMachines.FiniteStateMachineState{`0}},System.Int32,System.Int32,System.Type[])">
            <summary>
            Generates a non-inverted transition.
            </summary>
            <param name="states"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="event_types"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Generate(System.Collections.Generic.List{OsmSharp.Math.StateMachines.FiniteStateMachineState{`0}},System.Int32,System.Int32,System.Type,OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition{`0}.FiniteStateMachineTransitionConditionDelegate)">
            <summary>
            Generates a non-inverted transition with an extra check-delegate!
            </summary>
            <param name="states"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="event_type"></param>
            <param name="check_delegate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Generate(System.Collections.Generic.List{OsmSharp.Math.StateMachines.FiniteStateMachineState{`0}},System.Int32,System.Int32,System.Boolean,System.Type,OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition{`0}.FiniteStateMachineTransitionConditionDelegate)">
            <summary>
            Generates a transition with an extra check-delegate!
            </summary>
            <param name="states"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="inverted"></param>
            <param name="event_type"></param>
            <param name="check_delegate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Generate(System.Collections.Generic.List{OsmSharp.Math.StateMachines.FiniteStateMachineState{`0}},System.Int32,System.Int32,System.Boolean,System.Type[])">
            <summary>
            Generates a transition.
            </summary>
            <param name="states"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="inverted"></param>
            <param name="event_types"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.SourceState">
            <summary>
            The source state.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.TargetState">
            <summary>
            The target state.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.TransitionConditions">
            <summary>
            The list of events this transition repsonds to.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransition`1.Inverted">
            <summary>
            Boolean indicating not to respond to the listed events.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition`1">
            <summary>
            Represents a finite state machine condition.
            </summary>
            <typeparam name="EventType"></typeparam>
        </member>
        <member name="M:OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition`1.Check(OsmSharp.Math.Automata.FiniteStateMachine{`0},System.Object)">
            <summary>
            Returns true if the event make the machine reach an end state.
            </summary>
            <param name="machine"></param>
            <param name="even"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition`1.EventTypeObject">
            <summary>
            The event type object.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition`1.CheckDelegate">
            <summary>
            Checks the actual condition.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.StateMachines.FiniteStateMachineTransitionCondition`1.FiniteStateMachineTransitionConditionDelegate">
            <summary>
            The delegate code.
            </summary>
            <param name="machine"></param>
            <param name="even"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Structures.ILocatedObjectIndex`2">
            <summary>
            Abstracts a data structure indexing objects by their location.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.ILocatedObjectIndex`2.GetInside(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns all objects inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.ILocatedObjectIndex`2.Add(`0,`1)">
            <summary>
            Adds new located data.
            </summary>
            <param name="location"></param>
            <param name="data"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.ILocatedObjectIndex`2.Clear">
            <summary>
            Clears all data from this index.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Structures.KDTree.Tree2D`1">
            <summary>
            An implementation of a 2-dimensional k-d tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2D`1._root">
            <summary>
            The root node of the tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2D`1._distance_delegate">
            <summary>
            Holds the distance delegate.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2D`1.#ctor(System.Collections.Generic.IEnumerable{`0},OsmSharp.Math.Structures.KDTree.Tree2D{`0}.Distance)">
            <summary>
            Creates a new 2-dimensional k-d tree.
            </summary>
            <param name="points"></param>
            <param name="distance_delegate"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2D`1.Add(`0)">
            <summary>
            Adds a point to this tree.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2D`1.SearchNearestNeighbour(`0)">
            <summary>
            Returns the nearest neighbours for the given point.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2D`1.SearchNearestNeighbour(`0,System.Collections.Generic.ICollection{`0})">
            <summary>
            Returns the nearest neighbours for the given point but exclude any of the points in the exceptions list.
            </summary>
            <param name="point"></param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Structures.KDTree.Tree2D`1.Distance">
            <summary>
            Delegate to calculate the distance between two points.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Structures.KDTree.Tree2DNode`1">
            <summary>
            Represents a node in a k-d tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2DNode`1._value">
            <summary>
            The point this node splits on.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2DNode`1._dimension">
            <summary>
            The dimension this node splits on.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2DNode`1._lesser">
            <summary>
            The lesser node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2DNode`1._bigger">
            <summary>
            The bigger node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.KDTree.Tree2DNode`1._distance_delegate">
            <summary>
            Keeps the distance calculation delegate.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2DNode`1.#ctor(OsmSharp.Math.Structures.KDTree.Tree2D{`0}.Distance,`0,System.Int32)">
            <summary>
            Creates a 2D tree.
            </summary>
            <param name="distance_delegate"></param>
            <param name="value"></param>
            <param name="dimension"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2DNode`1.#ctor(OsmSharp.Math.Structures.KDTree.Tree2D{`0}.Distance,System.Collections.Generic.List{`0}[],System.Int32)">
            <summary>
            Creates a 2D tree in a balanced way.
            </summary>
            <param name="distance_delegate"></param>
            <param name="sorted_points"></param>
            <param name="dimension"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2DNode`1.Add(`0)">
            <summary>
            Adds a point to the tree.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.KDTree.Tree2DNode`1.SearchNearestNeighbour(`0,System.Collections.Generic.ICollection{`0})">
            <summary>
            Returns the nearest neighbours for the given point.
            </summary>
            <param name="point"></param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Structures.LocatedObjectIndexList`2">
            <summary>
            A naive reference implementation of the ILocatedObjectIndex interface.
            </summary>
            <typeparam name="PointType"></typeparam>
            <typeparam name="DataType"></typeparam>
        </member>
        <member name="F:OsmSharp.Math.Structures.LocatedObjectIndexList`2._data">
            <summary>
            Holds a list of data.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.LocatedObjectIndexList`2.#ctor">
            <summary>
            Creates a new located object(s) index list.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.LocatedObjectIndexList`2.GetInside(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns all data inside the given box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.LocatedObjectIndexList`2.Add(`0,`1)">
            <summary>
            Adds new located data.
            </summary>
            <param name="location"></param>
            <param name="data"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.LocatedObjectIndexList`2.Clear">
            <summary>
            Clears all data from this index.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Structures.QTree.QuadTree`2">
            <summary>
            Interface to implement a factory to create a quad tree.
            </summary>
            <typeparam name="TPointType"></typeparam>
            <typeparam name="TDataType"></typeparam>
            <remarks>
            This quadtree implementation can be a lot better:
            - Seperate the structure from the primitives and implement faster bounding box overlapping code.
            - Use an indentifier for each leaf node, removing the need to keep data at each node.
            </remarks>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2._root">
            <summary>
            The root node of this quad tree.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.#ctor">
            <summary>
            Creates a rootless quad tree.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.#ctor(System.Int32,OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Creates a new quad tree.
            </summary>
            <param name="dept"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.#ctor(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new quad tree.
            </summary>
            <param name="dept"></param>
            <param name="min0"></param>
            <param name="min1"></param>
            <param name="max0"></param>
            <param name="max1"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.GetOrCreateAt(`0)">
            <summary>
            Returns the smallest quadtree at depth zero.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.GetInside(OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Returns all data inside the given bounding box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.Add(`0,`1)">
            <summary>
            Adds new data at a given location.
            </summary>
            <param name="location"></param>
            <param name="data"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.Clear">
            <summary>
            Clears all data.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode">
            <summary>
            An implementation of a quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._minMin">
            <summary>
            The bottom left child quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._minMax">
            <summary>
            The bottom right child quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._maxMin">
            <summary>
            The top right child quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._maxMax">
            <summary>
            The top left child quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._bounds">
            <summary>
            The bounds of this node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._middle0">
            <summary>
            The middle of this node in dimension 0.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._middle1">
            <summary>
            The middle of this node in dimension 1.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._depth">
            <summary>
            The dept of this quad tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode._data">
            <summary>
            The data in this node.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.#ctor(System.Int32,OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Creates a quad tree with given bounds.
            </summary>
            <param name="dept"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.#ctor(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a quad tree with given bounds.
            </summary>
            <param name="dept"></param>
            <param name="min0"></param>
            <param name="min1"></param>
            <param name="max0"></param>
            <param name="max1"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.#ctor(System.Boolean,System.Boolean,OsmSharp.Math.Structures.QTree.QuadTree{`0,`1}.QuadTreeNode)">
            <summary>
            Creates a quad tree with given bounds.
            </summary>
            <param name="min0"></param>
            <param name="min1"></param>
            <param name="node"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.GetOrCreateAt(`0)">
            <summary>
            Returns the smallest quadtree node at depth zero that encompasses the given node.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.AddInsideAtNode(System.Collections.Generic.IList{`1},OsmSharp.Math.Structures.QTree.QuadTree{`0,`1}.QuadTreeNode,OsmSharp.Math.Primitives.BoxF2D)">
            <summary>
            Adds all the data in the given node and inside the given bounding box to the given data list.
            </summary>
            <param name="data"></param>
            <param name="node"></param>
            <param name="box"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.AddData(`0,`1)">
            <summary>
            Adds data to this node.
            </summary>
            <param name="point"></param>
            <param name="data"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.IsInsideBox(`0)">
            <summary>
            Returns true if the point is inside.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.Depth">
            <summary>
            Returns the depht of this quad tree.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.Min0">
            <summary>
            Returns the min of this quad tree in dimension 0.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.Max0">
            <summary>
            The max of this quad tree in dimension 0.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.Min1">
            <summary>
            Returns the min of this quad tree in dimension 1.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.Max1">
            <summary>
            The max of this quad tree in dimension 1.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.MinMin">
            <summary>
            The minmin node.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.MinMax">
            <summary>
            The minmax node.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.MaxMin">
            <summary>
            The maxmin node.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.Structures.QTree.QuadTree`2.QuadTreeNode.MaxMax">
            <summary>
            The maxmax node.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1">
            <summary>
            A hyper efficient data structure to search and index values by string identifiers.
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>Inpiration/main algoritmic idea from Fast Algorithms for Sorting and Searching Strings, Jon L. Bentley and Robert Sedgewick</remarks>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1._root">
            <summary>
            The root of the dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.#ctor">
            <summary>
            Creates a new empty dictionary.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.Add(System.String,`0)">
            <summary>
            Adds a value indexed by a given key.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.SearchExact(System.String)">
            <summary>
            Returns the value for the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode">
            <summary>
            Represents a single node in the search tree.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode._lower_node">
            <summary>
            The lower node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode._equal_node">
            <summary>
            The equal node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode._higher_node">
            <summary>
            The higher node.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode._split_char">
            <summary>
            The split character.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode._value">
            <summary>
            The value of this node.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode.#ctor(System.Char)">
            <summary>
            Creates a new string tree node.
            </summary>
            <param name="split_char"></param>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode.Add(System.Int16,System.String,`0)">
            <summary>
            Adds a new value at this node.
            </summary>
            <param name="idx"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.Structures.StringTrees.StringTreeDictionary`1.StringTreeNode.SearchExact(System.Int16,System.String)">
            <summary>
            Searches for the value for the given key.
            </summary>
            <param name="idx"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver">
            <summary>
            Implements a best-placement solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.SolverBase">
            <summary>
            Baseclass for all TSP solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.ISolver">
            <summary>
            Interface representing a solver for the TSP.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.ISolver.Solve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Solves the TSP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.ISolver.Stop">
            <summary>
            Stops the executing of the solving process.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.ISolver.Name">
            <summary>
            Returns the name of this solver.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.TSP.ISolver.IntermidiateResult">
            <summary>
            Raised when an intermidiate result is available.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.SolverBase.Solve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Executes the solver.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.SolverBase.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Executes the actual solver code.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.SolverBase.Stop">
            <summary>
            Stops the solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.SolverBase.CanRaiseIntermidiateResult">
            <summary>
            Returns true when the event has to be raised.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.SolverBase.RaiseIntermidiateResult(System.Int32[])">
            <summary>
            Raises the intermidiate results event.
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:OsmSharp.Math.TSP.SolverBase.Name">
            <summary>
            Returns the name of this solver.
            </summary>
        </member>
        <member name="E:OsmSharp.Math.TSP.SolverBase.IntermidiateResult">
            <summary>
            Raised when an intermidiate result is available.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.IImprovement">
            <summary>
            Represents an improvement heuristic/solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.IImprovement.Improve(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Double@)">
            <summary>
            Returns true if there was an improvement.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="difference"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.IImprovement.Name">
            <summary>
            Returns the name of the improvement.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver._stopped">
            <summary>
            Keeps the stopped flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver._customers">
            <summary>
            Keeps an orginal list of customers.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.#ctor">
            <summary>
            Creates a new solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.#ctor(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="customers"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Returns a solution found using best-placement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.Improve(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Double@)">
            <summary>
            Tries to improve the existing route using CI and return true if succesful.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="difference"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.InsertOne(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32,System.Double@)">
            <summary>
            Re-inserts a customer in the route.
            </summary>
            <param name="weights"></param>
            <param name="route"></param>
            <param name="customer"></param>
            <param name="difference"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.Stop">
            <summary>
            Stops executiong.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.ArbitraryInsertion.ArbitraryInsertionSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.BruteForce.BruteForceSolver">
            <summary>
            Implements a brute force solver by checking all possible combinations.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.BruteForce.BruteForceSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Solves the TSP.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.BruteForce.BruteForceSolver.Name">
            <summary>
            Returns a new for this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver">
            <summary>
            Cheapest insertion solver.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver._stopped">
            <summary>
            Keeps the stopped flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver._customers">
            <summary>
            Keeps an orginal list of customers.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver.#ctor">
            <summary>
            Creates a new solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver.#ctor(OsmSharp.Math.TSP.Problems.IProblem,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="problem"></param>
            <param name="customers"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Returns a solution found using best-placement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver.Stop">
            <summary>
            Stops executiong.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.CheapestInsertion.CheapestInsertionSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver">
            <summary>
            Implements a best-placement solver.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver._population_size">
            <summary>
            Keeps an orginal list of customers.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver._stagnation">
            <summary>
            Holds the stagnation count.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver._generation_operation">
            <summary>
            Holds a generation operation.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver._cross_over_operation">
            <summary>
            Holds a generation operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver.#ctor(System.Int32,System.Int32,OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="population_size"></param>
            <param name="stagnation"></param>
            <param name="generation_operation"></param>
            <param name="cross_over_operation"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver.#ctor(OsmSharp.Math.TSP.Problems.IProblem,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Creates a new solver.
            </summary>
            <param name="problem"></param>
            <param name="customers"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Returns a solution found using best-placement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver.Stop">
            <summary>
            Stops executiong.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.EdgeAssemblyGenetic.EdgeAssemblyCrossOverSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.GeneticSolver">
            <summary>
            Solver that uses a Genetic Algorithm to solve instances of the TSP.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.#ctor">
            <summary>
            Creates a genetic solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.#ctor(System.Int32,System.Int32,System.Int32,OsmSharp.Math.AI.Genetic.Operations.IMutationOperation{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},System.Int32,OsmSharp.Math.AI.Genetic.Operations.ICrossOverOperation{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},System.Int32,OsmSharp.Math.AI.Genetic.Operations.IGenerationOperation{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Creates a genetic solver.
            </summary>
            <param name="population"></param>
            <param name="stagnation"></param>
            <param name="elitism"></param>
            <param name="mutation_operation"></param>
            <param name="mutation"></param>
            <param name="cross_over_operation"></param>
            <param name="cross_over"></param>
            <param name="generation_operation"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Solves the problem using a GA.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.RegisterProgressReporter(OsmSharp.Progress.IProgressReporter)">
            <summary>
            Registers a given progress reporter.
            </summary>
            <param name="reporter"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.UnregisterProgressReporter">
            <summary>
            Unregisters progress reporter.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.GeneticSolver.Stop">
            <summary>
            Stops the solver.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.GeneticSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Fitness">
            <summary>
            Represents a fitness.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Fitness.#ctor(System.Double)">
            <summary>
            Creates a new fitness.
            </summary>
            <param name="weigth"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Fitness.CompareTo(System.Object)">
            <summary>
            Compares fitness.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Fitness.ToString">
            <summary>
            Returns a description of this weight.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Fitness.Weight">
            <summary>
            The weight.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator">
            <summary>
            A fintness calculator.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.EPSILON">
            <summary>
            Comparison epsilon.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.Fitness(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Calculates the fitness of the given individual.
            </summary>
            <param name="problem"></param>
            <param name="individual"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.Fitness(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},System.Boolean)">
            <summary>
            Calculates the fitness of the given individual.
            </summary>
            <param name="problem"></param>
            <param name="individual"></param>
            <param name="validate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.Fitness(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculates the fitness of the given individual.
            </summary>
            <param name="problem"></param>
            <param name="genomes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.AverageFitness(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,System.Collections.Generic.IEnumerable{OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness}})">
            <summary>
            Returns the average fitness.
            </summary>
            <param name="problem"></param>
            <param name="population"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator.Epsilon">
            <summary>
            Returns the comparison epsilon.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem">
            <summary>
            Class acting as a wrapper for the problem implementing the IProblem interface.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem._problem">
            <summary>
            The non-genetic problem.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.#ctor(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Creates a new genetic problem.
            </summary>
            <param name="problem"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.Weight(System.Int32,System.Int32)">
            <summary>
            Returns the weight between city1 and city2.
            </summary>
            <param name="city1"></param>
            <param name="city2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.BaseProblem">
            <summary>
            Returns the base problem.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.First">
            <summary>
            Returns the first customer in a round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.Last">
            <summary>
            Returns the last customer in a round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem.Along">
            <summary>
            Returns the 'along' customers.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Individual">
            <summary>
            Represents an individual.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Individual.#ctor(System.Collections.Generic.List{System.Int32})">
            <summary>
            Creates an individual.
            </summary>
            <param name="genomes"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Individual.#ctor(System.Boolean,OsmSharp.Math.TSP.Genetic.Solver.Fitness)">
            <summary>
            Creates an individual.
            </summary>
            <param name="fitness_calculated"></param>
            <param name="fitness"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Individual.ToString">
            <summary>
            Returns a description of this individual.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Individual.Validate(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem)">
            <summary>
            Validates this individual.
            </summary>
            <param name="problem"></param>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Individual.Count">
            <summary>
            Returns the number of genomes in this individual.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestDetailedPlacementCrossOverOperation">
            <summary>
            A best detailed placement crossover operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestDetailedPlacementCrossOverOperation.#ctor">
            <summary>
            Creates a best detailed placement crossover operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestDetailedPlacementCrossOverOperation.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this crossover.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestDetailedPlacementCrossOverOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestPlacementCrossOverOperation">
            <summary>
            A best placement operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestPlacementCrossOverOperation.#ctor">
            <summary>
            Creates a new best placement operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestPlacementCrossOverOperation.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this crossover operation.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.BestPlacementCrossOverOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.DefaultCrossOverOperation">
            <summary>
            A default crossover operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.DefaultCrossOverOperation.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this operation.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.DefaultCrossOverOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover">
            <summary>
            An edge assembly crossover.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.#ctor(System.Int32,OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.EdgeAssemblyCrossoverSelectionStrategyEnum,System.Boolean)">
            <summary>
            Creates a new edge assembly crossover.
            </summary>
            <param name="max_offspring"></param>
            <param name="strategy"></param>
            <param name="nn"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this crossover operation.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.Name">
            <summary>
            Returns the name of this operator.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.EdgeAssemblyCrossoverSelectionStrategyEnum">
            <summary>
            An enumeration of the crossover types.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.EdgeAssemblyCrossoverSelectionStrategyEnum.SingleRandom">
            <summary>
            SingleRandom.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossover.EdgeAssemblyCrossoverSelectionStrategyEnum.MultipleRandom">
            <summary>
            MultipleRandom.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive">
            <summary>
            An edge assembly operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.#ctor(System.Int32,OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.EdgeAssemblyCrossoverSelectionStrategyEnum,System.Boolean)">
            <summary>
            Creates a new edge assembly operation.
            </summary>
            <param name="max_offspring"></param>
            <param name="strategy"></param>
            <param name="nn"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this operation.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.EdgeAssemblyCrossoverSelectionStrategyEnum">
            <summary>
            An enumeration of types.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.EdgeAssemblyCrossoverSelectionStrategyEnum.SingleRandom">
            <summary>
            Single random type.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeAssemblyCrossoverNaive.EdgeAssemblyCrossoverSelectionStrategyEnum.MultipleRandom">
            <summary>
            Multiple random type.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeRecombinationCrossOverOperation">
            <summary>
            An edge recombination operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeRecombinationCrossOverOperation.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this operation.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.EdgeRecombinationCrossOverOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.Helpers.AsymmetricAlternatingCycles">
            <summary>
            A collection of asymmetric alternating cycles.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.Helpers.AsymmetricAlternatingCycles.#ctor(System.Int32)">
            <summary>
            Create a new collection of asymmetric alternating cycles.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.Helpers.AsymmetricAlternatingCycles.AddEdge(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an edge.
            </summary>
            <param name="from_a"></param>
            <param name="to"></param>
            <param name="from_b"></param>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.Helpers.AsymmetricAlternatingCycles.Cycles">
            <summary>
            Returns the cycles.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.SequentialContructiveCrossoverOperator">
            <summary>
            Implements a version of the sequential constructive crossover operator.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.SequentialContructiveCrossoverOperator.CrossOver(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Crosses over the two indivduals using sequantial contructive crossover.
            </summary>
            <param name="solver"></param>
            <param name="parent1"></param>
            <param name="parent2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.CrossOver.SequentialContructiveCrossoverOperator.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation._3OptGenerationOperation">
            <summary>
            A 3-opt operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation._3OptGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Generates a random individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation._3OptGenerationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.BestPlacementGenerationOperation">
            <summary>
            Generates a random individual.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.BestPlacementGenerationOperation.#ctor">
            <summary>
            Creates a best placement operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.BestPlacementGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Generates a random individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.BestPlacementGenerationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.LKGenerationOperation">
            <summary>
            A LK generation operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.LKGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Generates a random individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.LKGenerationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.RandomGenerationOperation">
            <summary>
            Generates a random individual.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.RandomGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Generates a random individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Generation.RandomGenerationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.Do(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Calculates and places this city in the least cost position.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="city_to_place"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.Do(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculates and places the given cities one by one in the least cost position.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="cities_to_place"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.DoFast(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Calculates and places the given cities by randomly selecting them and placing them into the least cost position.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="cities_to_place"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.Do(System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementResult)">
            <summary>
            Applies the result to the genome.
            </summary>
            <param name="genomes"></param>
            <param name="result"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.CalculateBestPlacement(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator,System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Searches for the best place to insert the given city.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="city_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementHelper.CalculateBestPlacement(OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.FitnessCalculator,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Searches for the city that can be placed best with the least increase in cost.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="cities_to_place"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementResult.Increase">
            <summary>
            Gets/sets the increase in time.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementResult.Fitness">
            <summary>
            The fitness of the individual after best placement.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementResult.CityIdx">
            <summary>
            The index in the genome to place the city at.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Helpers.BestPlacementResult.City">
            <summary>
            The city being placed.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation">
            <summary>
            A detailed best placement operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation.#ctor">
            <summary>
            Creates a new best placement operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation.Mutate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Applies this operation.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation.MutateByTakingPiece(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Take a piece of the genome and re-do best placement.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation.MutateByRePlacement(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Re-places all the cities again to their own best place.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestDetailedPlacementMutationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestPlacementMutationOperation">
            <summary>
            A best placement mutation operation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestPlacementMutationOperation.#ctor">
            <summary>
            Creates a best placement mutation.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestPlacementMutationOperation.Mutate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Mutates a given individual.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.BestPlacementMutationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.DefaultMutationOperation">
            <summary>
            Class mutating individuals in two ways:
                - Switching two random nodes
                - Switch order between two random nodes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.DefaultMutationOperation.Mutate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness},OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{System.Int32},OsmSharp.Math.TSP.Genetic.Solver.GeneticProblem,OsmSharp.Math.TSP.Genetic.Solver.Fitness})">
            <summary>
            Mutates an idividual.
            </summary>
            <param name="solver"></param>
            <param name="mutating"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Genetic.Solver.Operations.Mutation.DefaultMutationOperation.Name">
            <summary>
            Returns the name of this operation.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.SolverDelegates">
            <summary>
            Contains solver delegates.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.SolverDelegates.IntermidiateDelegate">
            <summary>
            Delegate to pass on an intermidiate solution.
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:OsmSharp.Math.TSP.LK.LinKernighanSolver">
            <summary>
            A solver that use the Lin-Kernighan heuristic to solve instances of the TSP.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.LK.LinKernighanSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Does the actual solving.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LK.LinKernighanSolver.Replace(OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute,OsmSharp.Math.TSP.LK.EdgeList,OsmSharp.Math.TSP.LK.EdgeList)">
            <summary>
            Replaces some edges with a list of other edges.
            </summary>
            <param name="route"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LK.LinKernighanSolver.SelectY(OsmSharp.Math.TSP.Problems.IProblem,OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute,OsmSharp.Math.TSP.LK.EdgeSet,OsmSharp.Math.TSP.LK.EdgeSet,OsmSharp.Math.TSP.LK.EdgeList,OsmSharp.Math.TSP.LK.EdgeList,System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Selects with special priority.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LK.LinKernighanSolver.Stop">
            <summary>
            Stops this solver.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.LK.LinKernighanSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver">
            <summary>
            Uses the 3-opt local search procedure to generate ATSP solutions.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver._nearest_neighbours">
            <summary>
            Only check nearest neighbours.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver._dont_look">
            <summary>
            Use don't check flags.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver._epsilon">
            <summary>
            The minium difference to register improvement(s).
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Creates a new solver.
            </summary>
            <param name="nearest_neighbours"></param>
            <param name="dont_look"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Solves the problem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.Improve(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Double@)">
            <summary>
            Improves an existing solution.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="difference"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.Try3OptMoves(OsmSharp.Math.VRP.Core.IProblemWeights,System.Double[][],OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32)">
            <summary>
            Tries all 3Opt Moves for the neighbourhood of v_1.
            </summary>
            <param name="problem"></param>
            <param name="weights"></param>
            <param name="route"></param>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.Try3OptMoves(OsmSharp.Math.VRP.Core.IProblemWeights,System.Double[][],OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
            Tries all 3Opt Moves for the neighbourhood of v_1 containing v_3.
            </summary>
            <param name="problem"></param>
            <param name="weights"></param>
            <param name="route"></param>
            <param name="v1"></param>
            <param name="v_2"></param>
            <param name="weight_1_2"></param>
            <param name="v_3"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.Try3OptMoves(OsmSharp.Math.VRP.Core.IProblemWeights,System.Double[][],OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Double,System.Double)">
            <summary>
            Tries all 3Opt Moves for the neighbourhood of v_1 containing v_3.
            </summary>
            <param name="problem"></param>
            <param name="weights"></param>
            <param name="route"></param>
            <param name="v1"></param>
            <param name="v_2"></param>
            <param name="v_3"></param>
            <param name="weights_3"></param>
            <param name="v_4"></param>
            <param name="weight_1_2_plus_3_4"></param>
            <param name="weight_1_4"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver._dont_look_bits">
            <summary>
            Holds all the don't look bits.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.LocalSearch.HillClimbing3Opt.HillClimbing3OptSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Problems.IProblem">
            <summary>
            Interface representing a generic TSP-problem.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.IProblemWeights">
            <summary>
            The definition of the problem weights.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.IProblemWeights.Weight(System.Int32,System.Int32)">
            <summary>
            Returns the weight between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.IProblemWeights.Get10NearestNeighbours(System.Int32)">
            <summary>
            Returns the 10 nearest neighbours of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.IProblemWeights.WeightMatrix">
            <summary>
            Returns the weight matrix if any, else returns null.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.IProblemWeights.Size">
            <summary>
            Returns the size.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.IProblem.First">
            <summary>
            Returns the first customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.IProblem.Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.IProblem.Symmetric">
            <summary>
            Returns true if the problem is symmetric.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.IProblem.Euclidean">
            <summary>
            Returns true if the problem is euclidean.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Problems.MatrixProblem">
            <summary>
            A general TSP problem with it's weights in a matrix.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._symmetric">
            <summary>
            Hold the symmetric flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._euclidean">
            <summary>
            Holds the euclidean flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._weights">
            <summary>
            Holds the weights.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._first">
            <summary>
            Holds the first customer.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._last">
            <summary>
            Holds the last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.#ctor(System.Double[][],System.Boolean)">
            <summary>
            Creates a new TSP matrix problem
            </summary>
            <param name="weights"></param>
            <param name="symmetric"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.#ctor(System.Double[][],System.Boolean,System.Boolean)">
            <summary>
            Creates a new matrix problem.
            </summary>
            <param name="weights"></param>
            <param name="symmetric"></param>
            <param name="euclidean"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.#ctor(System.Double[][],System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new matrix problem.
            </summary>
            <param name="weights"></param>
            <param name="symmetric"></param>
            <param name="first"></param>
            <param name="last"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.Weight(System.Int32,System.Int32)">
            <summary>
            Returns the weight between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.TSP.Problems.MatrixProblem._neighbours">
            <summary>
            Keeps the nearest neighbour list.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.Get10NearestNeighbours(System.Int32)">
            <summary>
            Generate the nearest neighbour list.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateATSP(System.Double[][])">
            <summary>
            Creates a regular ATSP that routes along all given customers in the shortest possible way.
            </summary>
            <param name="weights"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateATSP(System.Double[][],System.Int32)">
            <summary>
            Creates a regular ATSP that routes along all given customers in the shortest possible way with the first customer (and the last customer) given.
            </summary>
            <param name="weights"></param>
            <param name="first"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateATSPOpen(System.Double[][])">
            <summary>
            Creates a ATSP that routes along all customers in the shortest possible way but without being a closed route.
            </summary>
            <param name="weights"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateATSPOpen(System.Double[][],System.Int32)">
            <summary>
            Creates a ATSP that routes along all customers in the shortest possible way but without being a closed route and with a fixed first customer.
            </summary>
            <param name="weights"></param>
            <param name="first"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateATSPOpen(System.Double[][],System.Int32,System.Int32)">
            <summary>
            Creates a ATSP that routes along all customers in the shortest possible way but without being a closed route and with a fixed first and last customer.
            </summary>
            <param name="weights"></param>
            <param name="first"></param>
            <param name="last"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateSTSP(System.Double[][])">
            <summary>
            Creates a regular STSP that routes along all given customers in the shortest possible way.
            </summary>
            <param name="weights"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateSTSPOpen(System.Double[][])">
            <summary>
            Creates a STSP that routes along all customers in the shortest possible way but without being a closed route.
            </summary>
            <param name="weights"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateSTSPOpen(System.Double[][],System.Int32)">
            <summary>
            Creates a STSP that routes along all customers in the shortest possible way but without being a closed route and with a fixed first customer.
            </summary>
            <param name="weights"></param>
            <param name="first"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Problems.MatrixProblem.CreateSTSPOpen(System.Double[][],System.Int32,System.Int32)">
            <summary>
            Creates a STSP that routes along all customers in the shortest possible way but without being a closed route and with a fixed first and last customer.
            </summary>
            <param name="weights"></param>
            <param name="first"></param>
            <param name="last"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.Symmetric">
            <summary>
            Returns true if the problem is symmetric.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.Euclidean">
            <summary>
            Returns true if the problem is euclidean.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.Size">
            <summary>
            Returns the size of the problem.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.First">
            <summary>
            Returns the first customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.Problems.MatrixProblem.WeightMatrix">
            <summary>
            Returns the actual weight matrix.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TSP.Convertor">
            <summary>
            Converts TSP problems and routes.
            </summary>
            <remarks>
            References: TRANSFORMING ASYMMETRIC INTO SYMMETRIC TRAVELING SALESMAN PROBLEMS
            Roy JONKER and Ton VOLGENANT (1983)
            </remarks>
        </member>
        <member name="M:OsmSharp.Math.TSP.Convertor.ConvertToSymmetric(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Converts a symmetric to an asymmetric problem.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.Convertor.AddVirtualDepot(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Adds a virtual depot with weight equal to zero to all customers.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver">
            <summary>
            Solver that uses RAI to solve instances of the TSP.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver._route">
            <summary>
            The route this solver was initialized with.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.#ctor">
            <summary>
            Creates a new solver.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.#ctor(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Creates a new solver.
            </summary>
            <param name="route"></param>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Solves the problem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem,OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Executes the RAI.
            </summary>
            <param name="problem"></param>
            <param name="initial_route"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.DoSolve(OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver,OsmSharp.Math.TSP.Problems.IProblem,OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Executes the RAI.
            </summary>
            <param name="problem"></param>
            <param name="solver"></param>
            <param name="initial_route"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.Stop">
            <summary>
            Stops the solver.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TSP.RandomizedArbitraryInsertionSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.TravellingSalesman.Random.RandomSolver">
            <summary>
            Just generates random routes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.TravellingSalesman.Random.RandomSolver.DoSolve(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Generates a random route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TravellingSalesman.Random.RandomSolver.DoSolveStatic(OsmSharp.Math.TSP.Problems.IProblem)">
            <summary>
            Generates a random route.
            </summary>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.TravellingSalesman.Random.RandomSolver.Stop">
            <summary>
            Stops execution.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.TravellingSalesman.Random.RandomSolver.Name">
            <summary>
            Retuns the name of this solver.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VectorF2D">
            <summary>
            Represents a vector in n dimensions.
            
            A vector is immutable.
            </summary>
            <remarks>
            A vector is not a primitive, it can only be represented relative to real primitives.
            </remarks>
        </member>
        <member name="F:OsmSharp.Math.VectorF2D._values">
            <summary>
            The values that represent the vector.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new vector.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.#ctor(System.Double[])">
            <summary>
            Creates a new vector.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.ToString">
            <summary>
            Returns a description of this vector.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Dot(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Calcuates the dot-product of the two given vectors.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Cross(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Calculates the cross product.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Angle(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Returns the angle between 0 and 2*pi between the two vectors given.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Angle(OsmSharp.Math.VectorF2D)">
            <summary>
            Returns the angle between this vector and the given vector in the range 0-2pi.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.FromAngleY(OsmSharp.Units.Angle.Degree)">
            <summary>
            Returns a normalized vector with a direction equal to the given angle relative to the y-axis.
            </summary>
            <returns>The angle y.</returns>
            <param name="angle">Direction.</param>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Rotate90(System.Boolean)">
            <summary>
            Rotates a vector 90 degrees.
            </summary>
            <param name="clockwise">True when rotation has to be clockwize.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Normalize">
            <summary>
            Returns a normalized version of this Vector.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Subtraction(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Substracts two vectors and returns the resulting vector.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Addition(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Multiply(OsmSharp.Math.VectorF2D,System.Double)">
            <summary>
            Multiplies the given vector with the given value.
            </summary>
            <param name="a"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Division(OsmSharp.Math.VectorF2D,System.Double)">
            <summary>
            Divides the given vector with the given value.
            </summary>
            <param name="a"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Equality(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Returns true if the two vectors represent the same.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.op_Inequality(OsmSharp.Math.VectorF2D,OsmSharp.Math.VectorF2D)">
            <summary>
            Returns true if the two vectors don't represent the same.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.CompareNormalized(OsmSharp.Math.VectorF2D)">
            <summary>
            Compares the two vectors just based on their direction.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.CompareNormalized(OsmSharp.Math.VectorF2D,System.Double)">
            <summary>
            Compares the two vectors just based on their direction.
            </summary>
            <param name="other">The other vector to compare to.</param>
            <param name="epsilon">The tolerance on the total difference between the normalized vectors.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.Equals(System.Object)">
            <summary>
            Returns true if both objects are equal in value.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VectorF2D.GetHashCode">
            <summary>
            Returns a unique hascode for this vector.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VectorF2D.Item(System.Int32)">
            <summary>
            Gets/Sets the value at index idx.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VectorF2D.Size">
            <summary>
            Returns the size of the vector.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VectorF2D.Inverse">
            <summary>
            Returns the exact inverse of this vector.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VectorF2D.InverseX">
            <summary>
            Gets the inverse x.
            </summary>
            <value>The inverse x.</value>
        </member>
        <member name="P:OsmSharp.Math.VectorF2D.InverseY">
            <summary>
            Gets the inverse y.
            </summary>
            <value>The inverse y.</value>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper">
            <summary>
            Implements some generic functions for best-placement.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Returns the customer that least increases the length of the given route.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="customers"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Collections.Generic.ICollection{System.Int32},OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts)">
            <summary>
            Returns the customer that least increases the length of the given route.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="customers"></param>
            <param name="costs"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Collections.Generic.ICollection{System.Int32},System.Int32,System.Double)">
            <summary>
            Returns the customer that least increases the length of the given route.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="customers"></param>
            <param name="seed_customer"></param>
            <param name="seed_customer_ratio"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32)">
            <summary>
            Searches for the best place to insert the given customer.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute,System.Int32,System.Int32)">
            <summary>
            Searches for the best place to insert the given two customers abstracting the distance between them.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionResult">
            <summary>
            The result returned after calculating a best-placement position.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionResult.Increase">
            <summary>
            The increase in weight.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionResult.CustomerBefore">
            <summary>
            The customer where the customer needs to be placed after.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionResult.CustomerAfter">
            <summary>
            The customer where the customer needs to be placed before.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.BestPlacement.CheapestInsertionResult.Customer">
            <summary>
            The customer being placed.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts">
            <summary>
            Keeps insertion costs using binary heap priority queues.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts">
            <summary>
            Abstract a data structure keeping pre-calculated insertion costs.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.PopCheapest(System.Int32,System.Int32)">
            <summary>
            Returns the cheapest insertion and removes it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.PeekCheapest(System.Int32,System.Int32)">
            <summary>
            Returns the cheapest insertion.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.Add(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Adds a new cost.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <param name="customer"></param>
            <param name="cost"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.Add(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.InsertionCost})">
            <summary>
            Adds new costs in bulk.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <param name="costs"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.Count(System.Int32,System.Int32)">
            <summary>
            Returns the amount of costs in this data structures between the two given customers.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.Remove(System.Int32,System.Int32)">
            <summary>
            Removes all costs in this data structures between the two given customers.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.IInsertionCosts.Clear">
            <summary>
            Clears out all costs.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts._costs">
            <summary>
            Holds all the insertion cost heaps.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.#ctor">
            <summary>
            Creates a new insertion cost data structure using binary heap priority queues.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.PopCheapest(System.Int32,System.Int32)">
            <summary>
            Returns the cheapest cost and removes.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.PeekCheapest(System.Int32,System.Int32)">
            <summary>
            Returns the cheapest cost.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.Add(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Adds a new cost.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <param name="customer"></param>
            <param name="cost"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.Add(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.InsertionCost})">
            <summary>
            Adds a new cost.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <param name="costs"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.Count(System.Int32,System.Int32)">
            <summary>
            Returns the amount of costs stored.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.Remove(System.Int32,System.Int32)">
            <summary>
            Removes all the costs.
            </summary>
            <param name="customer_from"></param>
            <param name="customer_to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.BinaryHeapInsertionCosts.Clear">
            <summary>
            Clears all costs.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.InsertionCost">
            <summary>
            Represents an insertion cost.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.InsertionCost.Customer">
            <summary>
            The customer to insert.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.BestPlacement.InsertionCosts.InsertionCost.Cost">
            <summary>
            The actual insertion cost.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.SeedCustomers.ISeedCustomerSelector">
            <summary>
            Represents an abstraction of a seed customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.SeedCustomers.ISeedCustomerSelector.SelectSeeds(OsmSharp.Math.VRP.Core.IProblemWeights,System.Int32)">
            <summary>
            Selects k seed customers.
            </summary>
            <param name="weights"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.BestPlacement.SeedCustomers.SimpleSeeds">
            <summary>
            A seed customer selector that maximizes the distance between the selected customers.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.BestPlacement.SeedCustomers.SimpleSeeds.SelectSeeds(OsmSharp.Math.VRP.Core.IProblemWeights,System.Int32)">
            <summary>
            Selects seed customers.
            </summary>
            <param name="weights"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.LocalSearch.RePlace1OptHelper">
            <summary>
            Responsible for an local search strategy doing best-placement.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.LocalSearch.RePlace1OptHelper.CalculateRePlaceOptHelper(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Applies a local search strategy.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.LocalSearch.RePlace2OptHelper">
            <summary>
            Responsible for an local search strategy doing best-placement.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.LocalSearch.RePlace2OptHelper.CalculateRePlaceOptHelper(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Applies a local search strategy.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.NearestNeighbours10">
            <summary>
            A collection of nearest neighbours.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.NearestNeighbours10.#ctor">
            <summary>
            Creates a new nearest neighbour collection.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.NearestNeighbours10.Max">
            <summary>
            The max.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles">
            <summary>
            Asymmetric cycles.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.#ctor(System.Int32)">
            <summary>
            Creates a new collection of asymmetric cylces.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.AddEdge(System.Int32,System.Int32)">
            <summary>
            Adds a new edge.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.Clone">
            <summary>
            Clones this asymmetric cycles.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.NextArray">
            <summary>
            Returns the nextarray.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.Item(System.Int32)">
            <summary>
            Returns the next customer.
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.Cycles">
            <summary>
            Returns cycles.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.AsymmetricCycles.Length">
            <summary>
            Returns the length.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute">
            <summary>
            Represents a dynamic multi route where all routes start/end at one single depot represented by customer 0.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute">
            <summary>
            An asymetric dynamically sizeable mutliple routes object.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.IMultiRoute">
            <summary>
            Represents an object containing multiple routes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Route(System.Int32)">
            <summary>
            Returns one of the routes.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Add">
            <summary>
            Adds a new empty route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Add(System.Int32)">
            <summary>
            Adds a new route with an intial customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Add(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Adds a new route by copying the given one.
            </summary>
            <param name="route"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Remove(System.Int32)">
            <summary>
            Removes the route at the given index.
            </summary>
            <param name="route_idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if there is an edge in this route from from to to.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Contains(System.Int32)">
            <summary>
            Returns true if the given customer is in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Next(System.Int32)">
            <summary>
            Returns the customer next in line.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.RemoveCustomer(System.Int32)">
            <summary>
            Removes the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Count">
            <summary>
            Returns the number of routes.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IMultiRoute.Size">
            <summary>
            Returns the current size of this route.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute._is_round">
            <summary>
            The is round flag for every route.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute._next_array">
            <summary>
            The next-array containing all route information.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute._first">
            <summary>
            The first customer for every route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.#ctor(System.Int32[],System.Int32[],System.Boolean)">
            <summary>
            Creates a new dynamic route by creating shallow copy of the array(s) given.
            </summary>
            <param name="first"></param>
            <param name="next_array"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.#ctor(System.Collections.Generic.IEnumerable{OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart},System.Int32[],System.Boolean)">
            <summary>
            Creates a new dynamic route by creating shallow copy of the array(s) given.
            </summary>
            <param name="first"></param>
            <param name="next_array"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new dynamic assymmetric route using an initial size and customer.
            </summary>
            <param name="size"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Add">
            <summary>
            Adds a new empty route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Add(System.Int32)">
            <summary>
            Adds a new route intialized with the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Add(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Adds a new route by copying the given one.
            </summary>
            <param name="route"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Route(System.Int32)">
            <summary>
            Returns the route at the given index.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Remove(System.Int32)">
            <summary>
            Removes the given route.
            </summary>
            <param name="route_idx"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Resize(System.Int32)">
            <summary>
            Resizes the array.
            </summary>
            <param name="customer"></param>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute._sizes">
            <summary>
            Holds the sizes of all routes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.ResetSizes">
            <summary>
            Resets all sizes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.RecalculateSizes">
            <summary>
            Recalculate all sizes.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Next(System.Int32)">
            <summary>
            Returns the customer after the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.IsValid">
            <summary>
            Returns true if this route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Equals(OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute)">
            <summary>
            Returns true if the other multi route is equal in content.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.System#IEquatable{OsmSharp#Math#VRP#Core#Routes#ASymmetric#DynamicAsymmetricMultiRoute}#Equals(OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute)">
            <summary>
            Returns true if both multiroutes are equal in content.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.RemoveCustomer(System.Int32)">
            <summary>
            Removes the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Clone">
            <summary>
            Creates a deep copy of this multi route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the from-to is contained in this multi route.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Contains(System.Int32)">
            <summary>
            Returns true if the given customer is contained in this multi route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Count">
            <summary>
            Returns the number of routes.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Size">
            <summary>
            Returns the size.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.Sizes">
            <summary>
            Returns all sizes.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.CountCustomers">
            <summary>
            Returns the count of all customers.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart">
            <summary>
            A class exposing only the information about one route.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.IASymmetricRoute">
            <summary>
            Interface representing a route along serveral customers and the operations possible on it.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.IRoute">
            <summary>
            Represents a route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if there is an edge in this route from from to to.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Contains(System.Int32)">
            <summary>
            Returns true if the given customer is in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Remove(System.Int32)">
            <summary>
            Removes a customer from the route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Removes the edge from->unknown and replaces it with the edge from->to.
            0->1->2:ReplaceEdgeFrom(0, 2):0->2 without resetting the last customer property.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Removes the edge from->unknown and replaces it with the edge from->to->unknown.
            0->1:InsertAfter(0, 2):0->2-1
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.InsertFirst(System.Int32)">
            <summary>
            Inserst a new first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neigbours of a customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer the first being zero.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.IsValid">
            <summary>
            Returns true if the route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Between(System.Int32,System.Int32)">
            <summary>
            Returns an enumerable that enumerates between the two given customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Edges">
            <summary>
            Returns a enumerable that enumerates all edges in this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.IRoute.Clear">
            <summary>
            Removes all customers in this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IRoute.IsEmpty">
            <summary>
            Returns true if the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IRoute.IsRound">
            <summary>
            Returns true if the last customer is linked with the first one.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IRoute.Count">
            <summary>
            Returns the amount of customers in the route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IRoute.First">
            <summary>
            Returns the first customer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.IRoute.Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.IASymmetricRoute.Next(System.Int32)">
            <summary>
            Returns the customer right after this one.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart._is_round">
            <summary>
            The is round flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart._first">
            <summary>
            The first customer.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart._last">
            <summary>
            The last customer.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart._parent">
            <summary>
            Holds the parent route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.#ctor(OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute,System.Boolean)">
            <summary>
            Creates a new dynamic route.
            </summary>
            <param name="parent"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.#ctor(OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute,System.Int32,System.Boolean)">
            <summary>
            Creates a new dynamic route.
            </summary>
            <param name="parent"></param>
            <param name="first"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.UpdateLast">
            <summary>
            Updates and sets the last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if there exists an edge from the given customer to another.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Inserts a customer right after from and before to.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Inserts a customer right after from and before to.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.Resize(System.Int32)">
            <summary>
            Resizes the array.
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.GetNeigbours(System.Int32)">
            <summary>
            Returns the neigbour(s) of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.IsValid">
            <summary>
            Returns true if this route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.Remove(System.Int32)">
            <summary>
            Removes a customer from this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.IsEmpty">
            <summary>
            Returns true if the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.IsRound">
            <summary>
            Returns true if there is a route from the last customer back to the first.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricMultiRoute.MultiRoutePart.Count">
            <summary>
            Returns the number of customers in this route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.#ctor(System.Int32)">
            <summary>
            Creates a new solution in the form of a DynamicAsymmetricMultiRoute.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.#ctor(System.Int32[],System.Int32[])">
            <summary>
            Creates a new solution based on an existing one.
            </summary>
            <param name="first"></param>
            <param name="next_array"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.Clone">
            <summary>
            Clones this solution.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.Add">
            <summary>
            Adds a new empty route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.Add(System.Int32)">
            <summary>
            Adds a new route initialized with the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.Add(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Adds a new route by copying the given one.
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DepotDynamicAsymmetricMultiRoute.Route(System.Int32)">
            <summary>
            Returns the route at the given index.
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricBetweenEnumerable">
            <summary>
            A dynamic asymmetric between enumerable.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricBetweenEnumerable.#ctor(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new between enumerable.
            </summary>
            <param name="next_array"></param>
            <param name="first"></param>
            <param name="last"></param>
            <param name="first_route"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricBetweenEnumerable.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricBetweenEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute">
            <summary>
            A dynamic asymmetric route.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute._is_round">
            <summary>
            The is round flag.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute._next_array">
            <summary>
            The next-array.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute._first">
            <summary>
            The first customer.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute._last">
            <summary>
            The last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.#ctor(System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Creates a new dynamic route by creating shallow copy of the array(s) given.
            </summary>
            <param name="first"></param>
            <param name="next_array"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new dynamic assymmetric route using an initial size.
            </summary>
            <param name="size"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new dynamic assymmetric route using an initial size and customer.
            </summary>
            <param name="size"></param>
            <param name="customer"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if there exists an edge from the given customer to another.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Contains(System.Int32)">
            <summary>
            Returns true if the customer exists in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Inserts a customer right after from and before to.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Inserts a customer right after from and before to.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Resize(System.Int32)">
            <summary>
            Resizes the array.
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutAndRemove(System.Int32,System.Int32)">
            <summary>
            Cuts out a part of the route and returns the customers contained.
            </summary>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neigbour(s) of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Next(System.Int32)">
            <summary>
            Returns the neigbour of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.IsValid">
            <summary>
            Returns true if this route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Clone">
            <summary>
            Creates an exact deep-copy of this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Between(System.Int32,System.Int32)">
            <summary>
            Returns an enumerable between.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Edges">
            <summary>
            Enumerates all the edges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Remove(System.Int32)">
            <summary>
            Removes a customer from the route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.UpdateLast">
            <summary>
            Updates and sets the last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.ToString">
            <summary>
            Returns a description of this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CreateFrom(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a dynamic route from an enumerable collection of customers.
            </summary>
            <param name="customers"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CreateFrom(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Creates a dynamic route from an enumerable collection of customers.
            </summary>
            <param name="customers"></param>
            <param name="is_round"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutAndRemove(OsmSharp.Math.VRP.Core.IProblemWeights,System.Double,System.Int32,System.Int32)">
            <summary>
            Cuts out a part of the route and returns the customers contained.
            </summary>
            <param name="weights"></param>
            <param name="start"></param>
            <param name="weight"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.InsertFirst(System.Int32)">
            <summary>
            Inserts a new first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer with the given customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Clear">
            <summary>
            Clears out all the customers in this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.IsEmpty">
            <summary>
            Returns true if the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.IsRound">
            <summary>
            Returns true if there is a route from the last customer back to the first.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Count">
            <summary>
            Returns the size of the route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.First">
            <summary>
            Returns the first customer in this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.Last">
            <summary>
            Returns the last customer in this route.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutResult">
            <summary>
            A cut result.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutResult.Weight">
            <summary>
            The weight of the cut.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutResult.Route">
            <summary>
            The route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.DynamicAsymmetricRoute.CutResult.CutPart">
            <summary>
            The cut part.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute">
            <summary>
            A simple asymmetric route represented by a list.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.#ctor(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Creates a new simple asymmetric route.
            </summary>
            <param name="customers"></param>
            <param name="is_round"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the customers are contained in this route.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Remove(System.Int32)">
            <summary>
            Removes a given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Replaces an edge.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Inserts after.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neighbours.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.IsValid">
            <summary>
            Returns true if this route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Between(System.Int32,System.Int32)">
            <summary>
            Returns a enumerable between.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Contains(System.Int32)">
            <summary>
            Returns true if the route contains the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Clone">
            <summary>
            Clones this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Edges">
            <summary>
            Enumerates all edges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.InsertFirst(System.Int32)">
            <summary>
            Inserts a new first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Clear">
            <summary>
            Clears all customers.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.IsEmpty">
            <summary>
            Returns true if this route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.IsRound">
            <summary>
            Returns true if this route is round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Count">
            <summary>
            Returns the customer count.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.First">
            <summary>
            Returns the first customer in this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.ASymmetric.SimpleAsymmetricRoute.Last">
            <summary>
            Returns the last customer in this route.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.DepotRoute">
            <summary>
            Represents a route encapsulating an IRoute but with depot included.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.DepotRoute._route">
            <summary>
            Holds the encapsulated route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.#ctor(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Creates a new depot route.
            </summary>
            <param name="route"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the edge is contained in this route.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Contains(System.Int32)">
            <summary>
            Returns true if the customer is in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Remove(System.Int32)">
            <summary>
            Removes a given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Removes the edge from->unknown and replaces it with the edge from->to.
            0->1->2:ReplaceEdgeFrom(0, 2):0->2 without resetting the last customer property.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Removes the edge from->unknown and replaces it with the edge from->to->unknown.
            0->1:InsertAfter(0, 2):0->2-1
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neighbours of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer the first being zero.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.IsValid">
            <summary>
            Returns true if the route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Between(System.Int32,System.Int32)">
            <summary>
            Returns an enumerator between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Edges">
            <summary>
            Returns an edge enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.GetEnumerator">
            <summary>
            Returns an enumerator of all customers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator of all customers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Clone">
            <summary>
            Clones the route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.ToString">
            <summary>
            Returns a description of this depot route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.InsertFirst(System.Int32)">
            <summary>
            Inserts a new first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Clear">
            <summary>
            Clears all customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.DepotRoute.IsEmpty">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.DepotRoute.IsRound">
            <summary>
            Returns true.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Count">
            <summary>
            Returns the number of customers.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.DepotRoute.First">
            <summary>
            Returns the first customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.DepotRoute.Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.DepotRoute.DepotRouteEnumerable">
            <summary>
            An enumerable for all customers in this route.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.EdgeEnumerable">
            <summary>
            Enumerates all edges in an IRoute.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.EdgeEnumerable.#ctor(OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Creates a new edge enumerable.
            </summary>
            <param name="route"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.EdgeEnumerable.GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.EdgeEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.Edge">
            <summary>
            Represents an edge.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Edge.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new edge.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Edge.ToString">
            <summary>
            Returns a description of this edge.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Edge.GetHashCode">
            <summary>
            Returns a hashcode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Edge.Equals(System.Object)">
            <summary>
            Returns true if the other object is equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Edge.From">
            <summary>
            Returns the from customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Edge.To">
            <summary>
            Returns the to customer.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.RouteExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.RouteExtensions.CalculateWeight(OsmSharp.Math.VRP.Core.Routes.IRoute,OsmSharp.Math.VRP.Core.IProblemWeights)">
            <summary>
            Calculates the weight of the route given the weights.
            </summary>
            <param name="route"></param>
            <param name="weights"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.RouteExtensions.CalculateWeight(System.Int32[],System.Boolean,OsmSharp.Math.VRP.Core.IProblemWeights)">
            <summary>
            Calculates the weight of the route given the weights.
            </summary>
            <param name="route"></param>
            <param name="is_round"></param>
            <param name="weights"></param>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute">
            <summary>
            An implementation for a symmetric route with varying customer counts.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.Symmetric.ISymmetricRoute">
            <summary>
            Represents a symmetric route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.#ctor(System.Int32)">
            <summary>
            Creates a new dynamic symmetric route.
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.#ctor(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Creates a new dynamic symmetric route.
            </summary>
            <param name="customers"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the customers are contained in the given order.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Insert(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a new edge.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neighbours.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.IsValid">
            <summary>
            Returns true if this route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Clone">
            <summary>
            Clones this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Remove(System.Int32)">
            <summary>
            Removes the customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.GetEnumerator">
            <summary>
            Returns an enumerator for the route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Between(System.Int32,System.Int32)">
            <summary>
            Returns a enumerator between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Contains(System.Int32)">
            <summary>
            Returns true if the customer is in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the two customers are in this route.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Contains(System.Int32)">
            <summary>
            Returns true if the customer is in this route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Remove(System.Int32)">
            <summary>
            Removes the customers.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Replaces an edge.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#InsertAfter(System.Int32,System.Int32)">
            <summary>
            Insert a customer after.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#GetNeigbours(System.Int32)">
            <summary>
            Returns the neigbours.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#GetIndexOf(System.Int32)">
            <summary>
            Returns the index of a given customers.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#IsValid">
            <summary>
            Returns true if the route is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Between(System.Int32,System.Int32)">
            <summary>
            Returns an enumeration between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.System#Collections#Generic#IEnumerable{System#Int32}#GetEnumerator">
            <summary>
            Returns an enumeration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Edges">
            <summary>
            Returns an enumerator of all edges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.InsertFirst(System.Int32)">
            <summary>
            Inserts a new first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Clear">
            <summary>
            Clears all customers.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.IsEmpty">
            <summary>
            Returns true as the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.IsRound">
            <summary>
            Returns true if the route is a round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Count">
            <summary>
            Returns the count of the customers.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.First">
            <summary>
            Returns the first symmetric route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.Last">
            <summary>
            Returns the last symmetric route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#IsEmpty">
            <summary>
            Returns true if the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#IsRound">
            <summary>
            Returns true if the route is round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Count">
            <summary>
            Returns the count of this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#First">
            <summary>
            Returns the first customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.DynamicSymmetricRoute.OsmSharp#Math#VRP#Core#Routes#IRoute#Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute">
            <summary>
            A fast implementation of a route with a steady customer count.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute._customers">
            <summary>
            Contains the list of customers in this symmetric route.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a new fixed symmetric route.
            </summary>
            <param name="enumerable"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Contains(System.Int32,System.Int32)">
            <summary>
            Returns true if the route contains the two customers next to eachother.
            </summary>
            <param name="customer1"></param>
            <param name="customer2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.GetNeigbours(System.Int32)">
            <summary>
            Returns the neigbours of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Remove(System.Int32,System.Int32)">
            <summary>
            Removes two customers.
            </summary>
            <param name="customer1"></param>
            <param name="customer2"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Add(System.Int32,System.Int32)">
            <summary>
            Adds a new edge.
            </summary>
            <param name="customer1"></param>
            <param name="customer2"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Clone">
            <summary>
            Clones this route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.IsValid">
            <summary>
            Returns true if valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.IsValidNew">
            <summary>
            Returns true if is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.ToString">
            <summary>
            Returns a description of the route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Insert(System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a new customer.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
            <param name="to"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Remove(System.Int32)">
            <summary>
            Removes a customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.GetIndexOf(System.Int32)">
            <summary>
            Returns the index of the given customer.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Between(System.Int32,System.Int32)">
            <summary>
            Enumerates between.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Contains(System.Int32)">
            <summary>
            Returns true if this customer is contained in the given route.
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.ReplaceEdgeFrom(System.Int32,System.Int32)">
            <summary>
            Replaces an edge.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.InsertAfter(System.Int32,System.Int32)">
            <summary>
            Inserts a new edge.
            </summary>
            <param name="from"></param>
            <param name="customer"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Edges">
            <summary>
            Enumerates all edges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.InsertFirst(System.Int32)">
            <summary>
            Inserts a new first customers.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.ReplaceFirst(System.Int32)">
            <summary>
            Replaces the first customer.
            </summary>
            <param name="first"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Clear">
            <summary>
            Clears all customers in this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.IsEmpty">
            <summary>
            Returns true if the route is empty.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.IsRound">
            <summary>
            Returns true if the route is a round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Count">
            <summary>
            Returns the customer count.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.First">
            <summary>
            Returns the first customer.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.Last">
            <summary>
            Returns the last customer.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.#ctor(System.Int32[][])">
            <summary>
            Creates a new enumerator.
            </summary>
            <param name="customers"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.Dispose">
            <summary>
            Disposes this object.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.MoveNext">
            <summary>
            Move to the next customer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.Reset">
            <summary>
            Resets this route.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.Current">
            <summary>
            Returns the current.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.Routes.Symmetric.FixedSymmetricRoute.SymmetricRouteEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptHelper">
            <summary>
            Implements some generic 2 Opt functions.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptHelper.CalculateBestPlacement(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Math.VRP.Core.Routes.IRoute)">
            <summary>
            Returns the customer that least increases the length of the given route.
            </summary>
            <param name="problem"></param>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult">
            <summary>
            The result of a 2-opt operation.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult.Change">
            <summary>
            The best possible change when doing two opt.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult.Edge1Customer1">
            <summary>
            The first customer of the first new edge.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult.Edge1Customer2">
            <summary>
            The second customer of the first new edge.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult.Edge2Customer1">
            <summary>
            The first customer of the second new edge.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.Core.TwoOpt.TwoOptResult.Edge2Customer2">
            <summary>
            The second customer of the second new edge.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Facade">
            <summary>
            Facade.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Facade.Calculate(OsmSharp.Math.VRP.Core.IProblemWeights,OsmSharp.Units.Time.Second,OsmSharp.Units.Time.Second)">
            <summary>
            Calculates solution to the given problem.
            </summary>
            <param name="problem"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Facade.RaiseNewSolution(OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness})">
            <summary>
            Raises the new fittest event.
            </summary>
            <param name="individual"></param>
        </member>
        <member name="E:OsmSharp.Math.VRP.MultiSalesman.Facade.NewSolution">
            <summary>
            New fittest event.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem">
            <summary>
            Class representing a problem.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.#ctor(System.Int32,OsmSharp.Units.Time.Second,OsmSharp.Units.Time.Second)">
            <summary>
            Creates a new problem.
            </summary>
            <param name="cities"></param>
            <param name="minimum"></param>
            <param name="maximum"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.Weight(System.Int32,System.Int32)">
            <summary>
            Returns the weight between city1 and city2.
            </summary>
            <param name="city1"></param>
            <param name="city2"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.Cities">
            <summary>
            Gets the number of cities.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.TargetTime">
            <summary>
            The ideal time a round should take.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.MaximumTime">
            <summary>
            The maximum time.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem.MinimumTime">
            <summary>
            The minimum time.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Facade.FittestDelegate">
            <summary>
            New fittest delegate for the new fittest event.
            </summary>
            <param name="individual"></param>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness">
            <summary>
            Fitness object used to represent fitness of an individual.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.CompareTo(System.Object)">
            <summary>
            Compares this fitness object to another.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.Vehicles">
            <summary>
            The number of vehicles
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.SmallestRoundCategory">
            <summary>
            The category the smallest round can be found at.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.LargestRoundCategory">
            <summary>
            The category the largest round can be found at.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.CategorySum">
            <summary>
            The sum of the categories.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.TotalTime">
            <summary>
            The total time of all rounds combined.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.MinimumTime">
            <summary>
            The time of the shortest round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.MaximumTime">
            <summary>
            The time of the longest round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.Times">
            <summary>
            The time per round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.LargestRoundCategories">
            <summary>
            The largest category per round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.SmallestRoundCategories">
            <summary>
            The smallest category per round.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.Problem">
            <summary>
            The problem this fitness needs to be evaluated against.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness.Feasable">
            <summary>
            True if the solution is feasable.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator">
            <summary>
            Calculates fitness.
            </summary>
        </member>
        <member name="F:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator._category_count">
            <summary>
            The amount of categories to devide the times in.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.#ctor(System.Int32)">
            <summary>
            Creates a new fitness calculator.
            </summary>
            <param name="category_count"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.Fitness(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness},System.Boolean)">
            <summary>
            Calculates the fitness of one individual.
            </summary>
            <param name="problem"></param>
            <param name="individual"></param>
            <param name="validate"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.Fitness(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome})">
            <summary>
            Calculates the fitness of one individual based on it's genomes.
            </summary>
            <param name="problem"></param>
            <param name="genomes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.Adjust(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness,System.Int32,System.Double)">
            <summary>
            Calculates the increase of fitness when one round is increased/descreased in weights.
            </summary>
            <param name="fitness"></param>
            <param name="round"></param>
            <param name="increase"></param>
            <param name="problem"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.CalculateTimes(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,System.Collections.Generic.IList{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome})">
            <summary>
            Calculates the times 
            </summary>
            <param name="problem"></param>
            <param name="genomes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator.Calculate(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,System.Collections.Generic.List{System.Double})">
            <summary>
            Calculates the rest of the fitness indicators using the times per round.
            </summary>
            <param name="problem"></param>
            <param name="times"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome">
            <summary>
            Genome baseclass.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome.#ctor">
            <summary>
            Creates a new genome.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a new genome.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome.Equals(OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome)">
            <summary>
            Returns true if equal.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper">
            <summary>
            Helper class containing best placement optimisation algorithms.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.Do(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,OsmSharp.Math.VRP.MultiSalesman.Genetic.Individual,System.Collections.Generic.List{System.Int32})">
            <summary>
            Places all the cities in the next individual starting with the city that makes the individual best or least worst.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="individual"></param>
            <param name="cities_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.DoFast(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,OsmSharp.Math.VRP.MultiSalesman.Genetic.Individual,System.Collections.Generic.List{System.Int32})">
            <summary>
            DoFast.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="individual"></param>
            <param name="cities_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.CalculateBestPlacementInIndividual(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness},System.Collections.Generic.List{System.Int32})">
            <summary>
            Places cities into an individual.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="individual"></param>
            <param name="cities_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.CalculateBestPlacementInIndividual(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,System.Int32,OsmSharp.Math.AI.Genetic.Individual{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness},System.Int32)">
            <summary>
            Places a city into an idividual.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="round_idx"></param>
            <param name="individual"></param>
            <param name="city_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.CalculateBestPlacementInGenomes(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},System.Int32)">
            <summary>
            Places the given city in the individual.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="city_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.CalculateBestPlacementInGenomes(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},System.Collections.Generic.List{System.Int32})">
            <summary>
            Places cities into an individual.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genomes"></param>
            <param name="cities_to_place"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.CalculateBestPlacementInGenome(OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.FitnessCalculator,OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome,System.Int32)">
            <summary>
            Calculates the best place to insert a city.
            </summary>
            <param name="problem"></param>
            <param name="calculator"></param>
            <param name="genome"></param>
            <param name="city_to_place"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult">
            <summary>
            Class holding the result of a best placement.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult.Increase">
            <summary>
            Gets/sets the increase in time.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult.Fitness">
            <summary>
            The fitness of the individual after best placement.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult.RoundIdx">
            <summary>
            The index of the round the city is to be placed in.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult.CityIdx">
            <summary>
            The index in the round to place the city at.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.BestPlacementHelper.BestPlacementResult.City">
            <summary>
            The city being placed.
            </summary>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.IndividualHelper">
            <summary>
            Individual helper.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Genetic.Helpers.IndividualHelper.Overlaps(System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},System.Int32)">
            <summary>
            Returns true if there is overlap.
            </summary>
            <param name="genomes"></param>
            <param name="city"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Solver.Operations.Generation.BestFastPlacementGenerationOperation">
            <summary>
            Generates new individuals by using best placement.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Solver.Operations.Generation.BestFastPlacementGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness})">
            <summary>
            Generates one individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Solver.Operations.Generation.BestPlacementGenerationOperation">
            <summary>
            Generates new individuals by using best placement.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Solver.Operations.Generation.BestPlacementGenerationOperation.Generate(OsmSharp.Math.AI.Genetic.Solvers.Solver{System.Collections.Generic.List{OsmSharp.Math.VRP.MultiSalesman.Genetic.Genome},OsmSharp.Math.VRP.MultiSalesman.Genetic.Problem,OsmSharp.Math.VRP.MultiSalesman.Genetic.Fitness})">
            <summary>
            Generates one individual.
            </summary>
            <param name="solver"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Math.VRP.MultiSalesman.Problems.IProblem">
            <summary>
            Represents an M-TSP problem.
            </summary>
        </member>
        <member name="M:OsmSharp.Math.VRP.MultiSalesman.Problems.IProblem.Weight(System.Int32,System.Int32)">
            <summary>
            Returns the weight between two customers.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Problems.IProblem.Size">
            <summary>
            Returns the size of the problem.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Problems.IProblem.Symmetric">
            <summary>
            Returns true if the problem is symmetric.
            </summary>
        </member>
        <member name="P:OsmSharp.Math.VRP.MultiSalesman.Problems.IProblem.Euclidean">
            <summary>
            Returns true if the problem is euclidean.
            </summary>
        </member>
        <member name="T:OsmSharp.PCLExtensions">
            <summary>
            Holds extension methods that compensate for missing API calls when using PCL's.
            
            PCL changes:
            http://msdn.microsoft.com/en-us/library/gg597392%28v=vs.110%29.aspx
            </summary>
        </member>
        <member name="M:OsmSharp.PCLExtensions.GetString(System.Text.Encoding,System.Byte[])">
            <summary>
            Decodes a sequence of bytes from the specified byte array into a string.
            </summary>
            <param name="encoding"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.PCLExtensions.GetName(System.Reflection.Assembly)">
            <summary>
            Gets an AssemblyName for this assembly.
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OsmSharp.PCLExtensions.ForEach``1(System.Collections.Generic.List{``0},System.Action{``0})" -->
        <member name="M:OsmSharp.PCLExtensions.GetRequestStream(System.Net.WebRequest)">
            <summary>
            Gets a Stream object to use to write request data.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.PCLExtensions.GetResponse(System.Net.WebRequest)">
            <summary>
            Returns a response from an Internet resource.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Progress.EmptyProgressReporter">
            <summary>
            An empty progress reporter to use when not progress needs to be reported.
            </summary>
        </member>
        <member name="T:OsmSharp.Progress.IProgressReporter">
            <summary>
            Implemented on objects that can report progress to users or to another part of the application.
            </summary>
        </member>
        <member name="M:OsmSharp.Progress.IProgressReporter.Report(OsmSharp.Progress.ProgressStatus)">
            <summary>
            Reports a status to the progress reporter.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:OsmSharp.Progress.EmptyProgressReporter.#ctor">
            <summary>
            Constructs a new empty progress reporter.
            </summary>
        </member>
        <member name="M:OsmSharp.Progress.EmptyProgressReporter.Report(OsmSharp.Progress.ProgressStatus)">
            <summary>
            Reports progress to this reporter.
            </summary>
            <param name="status"></param>
        </member>
        <member name="P:OsmSharp.Progress.EmptyProgressReporter.Instance">
            <summary>
            Returns an instance 
            </summary>
        </member>
        <member name="T:OsmSharp.Progress.IProgressEnabled">
            <summary>
            Interface for progress enabled objects.
            </summary>
        </member>
        <member name="M:OsmSharp.Progress.IProgressEnabled.RegisterProgressReporter(OsmSharp.Progress.IProgressReporter)">
            <summary>
            Registers a progress reporter to recieve progress.
            </summary>
            <param name="reporter"></param>
        </member>
        <member name="M:OsmSharp.Progress.IProgressEnabled.UnRegisterProgressReporter(OsmSharp.Progress.IProgressReporter)">
            <summary>
            Unregisters a progress reporter.
            </summary>
            <param name="reporter"></param>
        </member>
        <member name="T:OsmSharp.Progress.ProgressStatus">
            <summary>
            Status object reporting progress information.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.TotalNumber">
            <summary>
            Returns total number.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.Message">
            <summary>
            Returns the message.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.CurrentNumber">
            <summary>
            Current number.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.CurrentEntity">
            <summary>
            Current entity.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.TimeRemaining">
            <summary>
            Time remaining.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.TimePassed">
            <summary>
            Time passed.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.TimePassedString">
            <summary>
            Time passed string.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.TimeRemainingString">
            <summary>
            Time remaining string.
            </summary>
        </member>
        <member name="P:OsmSharp.Progress.ProgressStatus.ProgressPercentage">
            <summary>
            Progress percentage.
            </summary>
        </member>
        <member name="T:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum">
            <summary>
            Progress status enum.
            </summary>
        </member>
        <member name="F:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum.Failed">
            <summary>
            Failed.
            </summary>
        </member>
        <member name="F:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum.Querying">
            <summary>
            Querying.
            </summary>
        </member>
        <member name="F:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum.Succeeded">
            <summary>
            Succeeded.
            </summary>
        </member>
        <member name="F:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum.Down">
            <summary>
            Down.
            </summary>
        </member>
        <member name="F:OsmSharp.Progress.ProgressStatus.ProgressStatusEnum.Busy">
            <summary>
            Busy.
            </summary>
        </member>
        <member name="T:OsmSharp.Range">
            <summary>
            Range.
            </summary>
        </member>
        <member name="M:OsmSharp.Range.SByte(System.SByte,System.SByte,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Byte(System.Byte,System.Byte,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Char(System.Char,System.Char,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int16(System.Int16,System.Int16,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt16(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int32(System.Int32,System.Int32,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt32(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int64(System.Int64,System.Int64,System.Int64)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt64(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Single(System.Single,System.Single,System.Single)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Double(System.Double,System.Double,System.Double)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Decimal(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.DateTime(System.DateTime,System.DateTime,System.Double)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.SByte(System.SByte,System.SByte)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Byte(System.Byte,System.Byte)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Char(System.Char,System.Char)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int16(System.Int16,System.Int16)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt16(System.UInt16,System.UInt16)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int32(System.Int32,System.Int32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt32(System.UInt32,System.UInt32)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Int64(System.Int64,System.Int64)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.UInt64(System.UInt64,System.UInt64)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Single(System.Single,System.Single)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Double(System.Double,System.Double)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.Decimal(System.Decimal,System.Decimal)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Range.DateTime(System.DateTime,System.DateTime)">
            <summary>
            Range enumerator.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Angle.Degree">
            <summary>
            Represents an angle in degress.
            </summary>
        </member>
        <member name="T:OsmSharp.Units.Unit">
            <summary>
            Represents a value representing a unit value.
            </summary>
        </member>
        <member name="F:OsmSharp.Units.Unit._value">
            <summary>
            The value of the unit.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Unit.#ctor(System.Double)">
            <summary>
            Creates a new valued unit.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:OsmSharp.Units.Unit.Value">
            <summary>
            Returns the value.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.#ctor(System.Double)">
            <summary>
            Creates a new angle in degrees.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.Normalize(System.Double)">
            <summary>
            Normalize the specified value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:OsmSharp.Units.Angle.Degree"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:OsmSharp.Units.Angle.Degree"/>.</returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.Range180">
            <summary>
            Converts the given angle to the range -180, +180.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.SmallestDifference(OsmSharp.Units.Angle.Degree)">
            <summary>
            Substracts the two angles returning an angle in the range -180, +180
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_Implicit(System.Double)~OsmSharp.Units.Angle.Degree">
            <summary>
            Converts the given value to degrees.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_Implicit(OsmSharp.Units.Angle.Radian)~OsmSharp.Units.Angle.Degree">
            <summary>
            Converts the given value to degrees.
            </summary>
            <param name="rad"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_Subtraction(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Subtracts two angles.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_Addition(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Adds two angles.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.Abs">
            <summary>
            Returns the absolute value of the angle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_GreaterThan(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Returns true if one angle is greater than the other.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_LessThan(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Returns true if one angle is smaller than the other.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_GreaterThanOrEqual(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Returns true if one angle is greater or equal than the other.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Degree.op_LessThanOrEqual(OsmSharp.Units.Angle.Degree,OsmSharp.Units.Angle.Degree)">
            <summary>
            Returns true if one angle is smaller or equal than the other.
            </summary>
            <param name="deg1"></param>
            <param name="deg2"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Angle.Radian">
            <summary>
            Represents an angle in radians.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.#ctor(System.Double)">
            <summary>
            Creates a new angle in radians.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.Normalize(System.Double)">
            <summary>
            Normalize the specified value.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.op_Implicit(System.Double)~OsmSharp.Units.Angle.Radian">
            <summary>
            Converts the given value to radians.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.op_Implicit(OsmSharp.Units.Angle.Degree)~OsmSharp.Units.Angle.Radian">
            <summary>
            Converts the given value to radians.
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:OsmSharp.Units.Angle.Radian"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:OsmSharp.Units.Angle.Radian"/>.</returns>
        </member>
        <member name="M:OsmSharp.Units.Angle.Radian.op_Subtraction(OsmSharp.Units.Angle.Radian,OsmSharp.Units.Angle.Radian)">
            <summary>
            Subtracts two radians.
            </summary>
            <param name="rad1"></param>
            <param name="rad2"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Distance.Kilometer">
            <summary>
            Represents a distance in kilometers.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.#ctor">
            <summary>
            Creates a new kilometer.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.op_Implicit(System.Double)~OsmSharp.Units.Distance.Kilometer">
            <summary>
            Converts the given value to kilometers.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.op_Implicit(OsmSharp.Units.Distance.Meter)~OsmSharp.Units.Distance.Kilometer">
            <summary>
            Converts the given value to kilometers.
            </summary>
            <param name="meter"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.op_Division(OsmSharp.Units.Distance.Kilometer,OsmSharp.Units.Speed.KilometerPerHour)">
            <summary>
            Divides a distance to a speed resulting in a time.
            </summary>
            <param name="distance"></param>
            <param name="speed"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.op_Division(OsmSharp.Units.Distance.Kilometer,OsmSharp.Units.Time.Hour)">
            <summary>
            Divides a distance to a time resulting in a speed.
            </summary>
            <param name="kilometer"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Kilometer.ToString">
            <summary>
            Returns a description of this kilometer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Distance.Meter">
            <summary>
            Represents a distance in meters.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.#ctor">
            <summary>
            Creates a new meter.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Implicit(System.Double)~OsmSharp.Units.Distance.Meter">
            <summary>
            Converts the given value to meters.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Implicit(OsmSharp.Units.Distance.Kilometer)~OsmSharp.Units.Distance.Meter">
            <summary>
            Converts the given value to meters.
            </summary>
            <param name="kilometer"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Division(OsmSharp.Units.Distance.Meter,OsmSharp.Units.Time.Second)">
            <summary>
            Divides the distance to a time into a speed.
            </summary>
            <param name="meter"></param>
            <param name="sec"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Division(OsmSharp.Units.Distance.Meter,OsmSharp.Units.Speed.MeterPerSecond)">
            <summary>
            Divides the distance to a speed into a time.
            </summary>
            <param name="distance"></param>
            <param name="speed"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Division(OsmSharp.Units.Distance.Meter,OsmSharp.Units.Speed.KilometerPerHour)">
            <summary>
            Divides the distance to a speed into a time.
            </summary>
            <param name="distance"></param>
            <param name="speed"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Addition(OsmSharp.Units.Distance.Meter,OsmSharp.Units.Distance.Meter)">
            <summary>
            Adds two distances.
            </summary>
            <param name="meter1"></param>
            <param name="meter2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.op_Subtraction(OsmSharp.Units.Distance.Meter,OsmSharp.Units.Distance.Meter)">
            <summary>
            Subtracts two distances.
            </summary>
            <param name="meter1"></param>
            <param name="meter2"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Distance.Meter.ToString">
            <summary>
            Returns a description of this meter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Speed.KilometerPerHour">
            <summary>
            Represents a speed in kilometer per hours.
            </summary>
        </member>
        <member name="T:OsmSharp.Units.Speed.Speed">
            <summary>
            Represents a speed.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.Speed.#ctor(System.Double)">
            <summary>
            Creates a new speed.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.Speed.TryParse(System.String,OsmSharp.Units.Speed.Speed@)">
            <summary>
            Tries to parse a string representing a speed. Assumes kilometers per hour by default, use explicit parsing methods for different behaviour.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.#ctor(System.Double)">
            <summary>
            Creates a new kilometers per hour.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.op_Implicit(System.Double)~OsmSharp.Units.Speed.KilometerPerHour">
            <summary>
            Converts a given value to kilometers per hour.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.op_Implicit(OsmSharp.Units.Speed.MeterPerSecond)~OsmSharp.Units.Speed.KilometerPerHour">
            <summary>
            Converts a given value to kilometers per hour.
            </summary>
            <param name="meterPerSec"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.op_Implicit(OsmSharp.Units.Speed.Knots)~OsmSharp.Units.Speed.KilometerPerHour">
            <summary>
            Converts a given value to kilometers per hour.
            </summary>
            <param name="knot"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.op_Implicit(OsmSharp.Units.Speed.MilesPerHour)~OsmSharp.Units.Speed.KilometerPerHour">
            <summary>
            Converts a given value to kilimeters per hour.
            </summary>
            <param name="mph"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.op_Multiply(OsmSharp.Units.Speed.KilometerPerHour,OsmSharp.Units.Time.Hour)">
            <summary>
            Divides a distance to a time resulting in a speed.
            </summary>
            <param name="kilometerPerHour"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.TryParse(System.String,OsmSharp.Units.Speed.KilometerPerHour@)">
            <summary>
            Tries to parse a string containing a kilometer per hour value.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.KilometerPerHour.ToString">
            <summary>
            Returns a description of this speed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Speed.Knots">
            <summary>
            Represents a speed in knots.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.#ctor(System.Double)">
            <summary>
            Creates a new knots.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.op_Implicit(System.Double)~OsmSharp.Units.Speed.Knots">
            <summary>
            Converts a given value to knots.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.op_Implicit(OsmSharp.Units.Speed.MeterPerSecond)~OsmSharp.Units.Speed.Knots">
            <summary>
            Converts a given value to knots.
            </summary>
            <param name="meterPerSec"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.op_Implicit(OsmSharp.Units.Speed.KilometerPerHour)~OsmSharp.Units.Speed.Knots">
            <summary>
            Converts a given value to knots.
            </summary>
            <param name="knot"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.op_Implicit(OsmSharp.Units.Speed.MilesPerHour)~OsmSharp.Units.Speed.Knots">
            <summary>
            Converts a given value to knots.
            </summary>
            <param name="mph"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.op_Multiply(OsmSharp.Units.Speed.Knots,OsmSharp.Units.Time.Hour)">
            <summary>
            Divides a distance to a time resulting in a speed.
            </summary>
            <param name="knot"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.TryParse(System.String,OsmSharp.Units.Speed.Knots@)">
            <summary>
            Tries to parse a string containing a meters per second value.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.Knots.ToString">
            <summary>
            Returns a description of this speed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Speed.MeterPerSecond">
            <summary>
            Represents a speed in meters/seconds.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.#ctor(System.Double)">
            <summary>
            Creates a new meters per second object.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.op_Implicit(System.Double)~OsmSharp.Units.Speed.MeterPerSecond">
            <summary>
            Converts a value to meters per second.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.op_Implicit(OsmSharp.Units.Speed.KilometerPerHour)~OsmSharp.Units.Speed.MeterPerSecond">
            <summary>
            Converts a given value to kilometers per hour.
            </summary>
            <param name="kph"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.op_Implicit(OsmSharp.Units.Speed.Knots)~OsmSharp.Units.Speed.MeterPerSecond">
            <summary>
            Converts a given value to kilometers per hour.
            </summary>
            <param name="knot"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.op_Implicit(OsmSharp.Units.Speed.MilesPerHour)~OsmSharp.Units.Speed.MeterPerSecond">
            <summary>
            Converts a given value to kilimeters per hour.
            </summary>
            <param name="mph"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.op_Multiply(OsmSharp.Units.Speed.MeterPerSecond,OsmSharp.Units.Time.Second)">
            <summary>
            Divides a distance to a time resulting in a speed.
            </summary>
            <param name="meterPerSecond"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.TryParse(System.String,OsmSharp.Units.Speed.MeterPerSecond@)">
            <summary>
            Tries to parse a string containing a meters per second value.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MeterPerSecond.ToString">
            <summary>
            Returns a description of this speed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Speed.MilesPerHour">
            <summary>
            Represents a speed in miles per hour.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.#ctor">
            <summary>
            Creates a new miles per hour object initialized to zero.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.#ctor(System.Double)">
            <summary>
            Creates a new miles per hour.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.op_Implicit(System.Double)~OsmSharp.Units.Speed.MilesPerHour">
            <summary>
            Converts a given value to miles per hour.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.op_Implicit(OsmSharp.Units.Speed.KilometerPerHour)~OsmSharp.Units.Speed.MilesPerHour">
            <summary>
            Converts a given value to miles per hour.
            </summary>
            <param name="kph"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.TryParse(System.String,OsmSharp.Units.Speed.MilesPerHour@)">
            <summary>
            Tries to parse a string containing a miles per hour value.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Speed.MilesPerHour.ToString">
            <summary>
            Returns a description of this speed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Time.Hour">
            <summary>
            Represents a unit of time in hours.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.Hour.#ctor">
            <summary>
            Creates a new hour.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.Hour.op_Implicit(System.Double)~OsmSharp.Units.Time.Hour">
            <summary>
            Converts a value to an hour.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Hour.op_Implicit(System.TimeSpan)~OsmSharp.Units.Time.Hour">
            <summary>
            Converts a value to an hour.
            </summary>
            <param name="timespan"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Hour.op_Implicit(OsmSharp.Units.Time.Second)~OsmSharp.Units.Time.Hour">
            <summary>
            Converts a value to an hour.
            </summary>
            <param name="sec"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Hour.ToString">
            <summary>
            Returns a description of this hour.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Time.MilliSecond">
            <summary>
            Represents a unit of time in milliseconds.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.MilliSecond.#ctor">
            <summary>
            Creates a new millisecond.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.MilliSecond.op_Implicit(System.Double)~OsmSharp.Units.Time.MilliSecond">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.MilliSecond.op_Implicit(System.TimeSpan)~OsmSharp.Units.Time.MilliSecond">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="timespan"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.MilliSecond.op_Implicit(OsmSharp.Units.Time.Hour)~OsmSharp.Units.Time.MilliSecond">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.MilliSecond.ToString">
            <summary>
            Returns a description of this seconds.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Time.Second">
            <summary>
            Represents a unit of time in seconds.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.Second.#ctor">
            <summary>
            Creates a new second.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Time.Second.op_Implicit(System.Double)~OsmSharp.Units.Time.Second">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Second.op_Implicit(System.TimeSpan)~OsmSharp.Units.Time.Second">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="timespan"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Second.op_Implicit(OsmSharp.Units.Time.Hour)~OsmSharp.Units.Time.Second">
            <summary>
            Converts the given value to seconds.
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Time.Second.ToString">
            <summary>
            Returns a description of this seconds.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Weight.Gram">
            <summary>
            Represents a weight in grams.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Weight.Gram.#ctor">
            <summary>
            Creates a new weight.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Weight.Gram.op_Implicit(System.Double)~OsmSharp.Units.Weight.Gram">
            <summary>
            Converts a value to grams.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Weight.Gram.op_Implicit(OsmSharp.Units.Weight.Kilogram)~OsmSharp.Units.Weight.Gram">
            <summary>
            Converts a value to grams.
            </summary>
            <param name="kilogram"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Weight.Gram.ToString">
            <summary>
            Returns a description of this weight.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Units.Weight.Kilogram">
            <summary>
            Represents a weight in kilograms.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Weight.Kilogram.#ctor">
            <summary>
            Creates a new kilogram.
            </summary>
        </member>
        <member name="M:OsmSharp.Units.Weight.Kilogram.op_Implicit(System.Double)~OsmSharp.Units.Weight.Kilogram">
            <summary>
            Converts a value to kilograms.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Weight.Kilogram.op_Implicit(OsmSharp.Units.Weight.Gram)~OsmSharp.Units.Weight.Kilogram">
            <summary>
            Converts a value to kilograms.
            </summary>
            <param name="gram"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Units.Weight.Kilogram.ToString">
            <summary>
            Returns a description of this kilogram.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.Utilities">
            <summary>
            Class containing some utilities and extension methods.
            </summary>
        </member>
        <member name="M:OsmSharp.Utilities.Power10Floor(System.Double)">
            <summary>
            Returns the largest power of 10 that is smaller than value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.Power10Floor(System.Single)">
            <summary>
            Returns the largest power of 10 that is smaller than value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.CopyToReverse``1(System.Collections.Generic.List{``0},``0[],System.Int32)">
            <summary>
            Copies all elements from the list into the given array starting at the given index but in reverse order.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list to copy from.</param>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to start copying to in the array.</param>
        </member>
        <member name="M:OsmSharp.Utilities.CopyToReverse``1(System.Collections.Generic.List{``0},System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Copies elements from the list and the range into the given array starting at the given index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list to copy from.</param>
            <param name="index">The start of the elements </param>
            <param name="length"></param>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to start copying to in the array.</param>
        </member>
        <member name="M:OsmSharp.Utilities.CopyTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Copies elements from the list and the range into the given array starting at the given index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The array to copy from.</param>
            <param name="index">The start of the elements </param>
            <param name="length"></param>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to start copying to in the array.</param>
        </member>
        <member name="M:OsmSharp.Utilities.CopyToReverse``1(``0[],``0[],System.Int32)">
            <summary>
            Copies all elements from the list into the given array starting at the given index but in reverse order.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The array to copy from.</param>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to start copying to in the array.</param>
        </member>
        <member name="M:OsmSharp.Utilities.CopyToReverse``1(``0[],System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Copies elements from the list and the range into the given array starting at the given index.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The array to copy from.</param>
            <param name="index">The start of the elements </param>
            <param name="length"></param>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The index to start copying to in the array.</param>
        </member>
        <member name="M:OsmSharp.Utilities.InsertTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Inserts the given elements at given positions.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="index"></param>
            <param name="array"></param>
            <param name="arrayIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:OsmSharp.Utilities.InsertToReverse``1(``0[],System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Inserts the given elements at given positions.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="index"></param>
            <param name="array"></param>
            <param name="arrayIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:OsmSharp.Utilities.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            Shuffles the list using Fisher-Yates shuffle.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:OsmSharp.Utilities.RandomString(System.Int32)">
            <summary>
            Generates a random string.
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.FromUnixTime(System.Int64)">
            <summary>
            Converts a number of milliseconds from 1/1/1970 into a standard DateTime.
            </summary>
            <param name="milliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.ToUnixTime(System.DateTime)">
            <summary>
            Converts a standard DateTime into the number of milliseconds since 1/1/1970.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.Truncate(System.String,System.Int32)">
            <summary>
            Returns a trucated string if the string is larger than the given max length.
            </summary>
            <param name="value"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.PadRightAndCut(System.String,System.Int32)">
            <summary>
            Retuns a string of a fixed length.
            </summary>
            <param name="s"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.LevenshteinMatch(System.String,System.String,System.Single)">
            <summary>
            Matches two string that contain a given percentage of the same characters.
            </summary>
            <param name="s"></param>
            <param name="t"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.InitCap(System.String)">
            <summary>
            Returns a string with init caps.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.RemoveAll``1(System.Collections.Generic.List{``0},System.Predicate{``0})">
            <summary>
            Removes all objects that match the given predicate from the given list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.NumericPartFloat(System.String)">
            <summary>
            Returns the numeric part of the string for the beginning part of the string only.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.NumericPartInt(System.String)">
            <summary>
            Returns the numeric part of the string for the beginning part of the string only.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.SplitMultiple(System.String,System.Int32[])">
            <summary>
            Splists this string into parts with sizes given in the array.
            </summary>
            <param name="value"></param>
            <param name="sizes"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.ToStringEmptyWhenNull(System.Object)">
            <summary>
            Returns the result of the ToString() method or an empty string
            when the given object is null.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.ConvertToLongArray(System.Double[],System.Int32)">
            <summary>
            Converts an array of double to long using a factor value.
            </summary>
            <param name="doubleArray">The double array.</param>
            <param name="factor">A factor to use to convert to doubles.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.ConvertFromLongArray(System.Int64[],System.Int32)">
            <summary>
            Converts an array of longs back to doubles using a factor value.
            </summary>
            <param name="longArray">The long array.</param>
            <param name="factor">A factor to use to convert the long values.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.ConvertFromLongArray(System.Collections.Generic.List{System.Int64},System.Int32)">
            <summary>
            Converts an array of longs back to doubles using a factor value.
            </summary>
            <param name="longArray">The long array.</param>
            <param name="factor">A factor to use to convert the long values.</param>
            <returns></returns>
        </member>
        <member name="M:OsmSharp.Utilities.EncodeDelta(System.Int64[])">
            <summary>
            Delta encodes an array.
            </summary>
            <param name="longArray"></param>
        </member>
        <member name="M:OsmSharp.Utilities.EncodeDelta(System.Collections.Generic.List{System.Int64})">
            <summary>
            Delta encodes an array.
            </summary>
            <param name="longArray"></param>
        </member>
        <member name="M:OsmSharp.Utilities.DecodeDelta(System.Int64[])">
            <summary>
            Delta decodes an array.
            </summary>
            <param name="longArray"></param>
        </member>
        <member name="M:OsmSharp.Utilities.DecodeDelta(System.Collections.Generic.List{System.Int64})">
            <summary>
            Delta decodes an array.
            </summary>
            <param name="longArray"></param>
        </member>
        <member name="M:OsmSharp.Utilities.SerializeWithSize(ProtoBuf.Meta.RuntimeTypeModel,System.IO.Stream,System.Object)">
            <summary>
            Serializes to the given stream but writes the size of the serialized data in the first 4 bytes.
            </summary>
            <param name="model"></param>
            <param name="dest"></param>
            <param name="value"></param>
        </member>
        <member name="M:OsmSharp.Utilities.DeserializeWithSize(ProtoBuf.Meta.RuntimeTypeModel,System.IO.Stream,System.Object,System.Type)">
            <summary>
            Deserializes an object from the given stream but uses the first 4 bytes as an indication of size and limits the data accordingly.
            </summary>
            <param name="model"></param>
            <param name="source"></param>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:OsmSharp.EnumHelper">
            <summary>
            Contains enumeration parsing methods for compatibility purposes between difference .NET/Mono/WindowsPhone flavours.
            </summary>
        </member>
        <member name="M:OsmSharp.EnumHelper.TryParse``1(System.String,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter
            specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.
            </summary>
            <typeparam name="TEnum">The enumeration type to which to convert value.</typeparam>
            <param name="value">The string representation of the enumeration name or underlying value to convert.</param>
            <param name="result">When this method returns, contains an object of type TEnum whose value is represented by value. This parameter is passed uninitialized.</param>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:OsmSharp.EnumHelper.TryParse``1(System.String,System.Boolean,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter
            specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.
            </summary>
            <typeparam name="TEnum">The enumeration type to which to convert value.</typeparam>
            <param name="value">The string representation of the enumeration name or underlying value to convert.</param>
            <param name="ignoreCase">true to ignore case; false to consider case.</param>
            <param name="result">When this method returns, contains an object of type TEnum whose value is represented by value. This parameter is passed uninitialized.</param>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:OsmSharp.EnumHelper.ToInvariantString(System.Object)">
            <summary>
            Returns a string representing the object in a culture invariant way.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
    </members>
</doc>
